import{_ as a,r as t,o as p,c as o,a as n,b as e,F as c,e as l,d as u}from"./app.9ac4f0ef.js";const i={},k=l(`<h1 id="\u8282\u6D41-\u9632\u6296" tabindex="-1"><a class="header-anchor" href="#\u8282\u6D41-\u9632\u6296" aria-hidden="true">#</a> \u8282\u6D41 \u9632\u6296</h1><ul><li>\u5982\u4F55\u5224\u65AD\u6B63\u5728\u6267\u884C tId</li><li>apply \u8FD8\u662F call\uFF0Carguments =&gt; apply</li><li>\u6CE8\u610F\uFF0C\u5185\u90E8\u7528\u533F\u540D\u51FD\u6570\u5373\u53EF\uFF0C\u5E76\u4E0D\u9700\u8981\u9012\u5F52</li></ul><p>\u8282\u6D41\uFF0C\u6B63\u5728\u6267\u884C\uFF0C\u5FFD\u7565</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">function</span> <span class="token function">throttle</span><span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> wait <span class="token operator">=</span> <span class="token number">0</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> tId <span class="token operator">=</span> <span class="token keyword">null</span>
    <span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>tId<span class="token punctuation">)</span> <span class="token keyword">return</span>

      <span class="token comment">// const context = this</span>
      <span class="token comment">// const args = arguments</span>
      <span class="token comment">// tId = setTimeout(function(){</span>
      tId <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u4FDD\u6301\u539F\u51FD\u6570 this \u548C \u53C2\u6570</span>
        <span class="token comment">// fn.apply(context, args)</span>
        <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span>
        tId <span class="token operator">=</span> <span class="token keyword">null</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> wait<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// test \u5BF9\u6BD4\u624D\u80FD\u770B\u51FA\u6548\u679C</span>
  <span class="token keyword">let</span> fn <span class="token operator">=</span> <span class="token function">throttle</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;resize&#39;</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">)</span>
  window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;resize&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;resize&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token string">&#39;thro arg&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>\u9632\u6296\uFF0C\u4E0A\u4E00\u4E2A\u5B9A\u65F6\u5668\u8FD8\u672A\u6267\u884C\uFF0C\u53D6\u6D88\u6389\u3002\u91CD\u65B0\u8BA1\u65F6</p><div class="language-javascript ext-js"><pre class="language-javascript"><code>  <span class="token keyword">function</span> <span class="token function">debounce</span><span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> wait <span class="token operator">=</span> <span class="token number">0</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> tId <span class="token operator">=</span> <span class="token keyword">null</span>
    <span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>tId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">clearTimeout</span><span class="token punctuation">(</span>tId<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>

      <span class="token comment">// const context = this</span>
      <span class="token comment">// const args = arguments</span>
      <span class="token comment">// tId = setTimeout(function() {</span>
      tId <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> wait<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// test</span>
  el<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;input&#39;</span><span class="token punctuation">,</span> <span class="token function">debounce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;input do&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre></div>`,6),r={href:"https://codepen.io/cyio/pen/oNzzJOp?editors=1010",target:"_blank",rel:"noopener noreferrer"},d=u("debounce and throttle");function m(b,f){const s=t("ExternalLinkIcon");return p(),o(c,null,[k,n("p",null,[n("a",r,[d,e(s)])])],64)}var h=a(i,[["render",m],["__file","debounce-throttle.html.vue"]]);export{h as default};
