import{_ as n,e as s}from"./app.83a133fc.js";const a={},p=s(`<h1 id="\u6570\u5B57\u8F6C\u4E2D\u6587" tabindex="-1"><a class="header-anchor" href="#\u6570\u5B57\u8F6C\u4E2D\u6587" aria-hidden="true">#</a> \u6570\u5B57\u8F6C\u4E2D\u6587</h1><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">toChineseNumber</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>Number<span class="token punctuation">.</span><span class="token function">isInteger</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> n <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&#39;\u8BF7\u8F93\u5165\u81EA\u7136\u6570&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> digits <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;\u96F6&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u4E00&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u4E8C&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u4E09&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u56DB&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u4E94&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u516D&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u4E03&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u516B&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u4E5D&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> positions <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u5341&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u767E&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u5343&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u4E07&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u5341\u4E07&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u767E\u4E07&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u5343\u4E07&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u4EBF&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u5341\u4EBF&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u767E\u4EBF&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u5343\u4EBF&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> charArray <span class="token operator">=</span> <span class="token function">String</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> prevIsZero <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token comment">//\u5904\u74060  deal zero</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> charArray<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> ch <span class="token operator">=</span> charArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>ch <span class="token operator">!==</span> <span class="token string">&#39;0&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>prevIsZero<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      result <span class="token operator">+=</span> digits<span class="token punctuation">[</span><span class="token function">parseInt</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">+</span> positions<span class="token punctuation">[</span>charArray<span class="token punctuation">.</span>length <span class="token operator">-</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>ch <span class="token operator">===</span> <span class="token string">&#39;0&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      prevIsZero <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>ch <span class="token operator">!==</span> <span class="token string">&#39;0&#39;</span> <span class="token operator">&amp;&amp;</span> prevIsZero<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      result <span class="token operator">+=</span> <span class="token string">&#39;\u96F6&#39;</span> <span class="token operator">+</span> digits<span class="token punctuation">[</span><span class="token function">parseInt</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">+</span> positions<span class="token punctuation">[</span>charArray<span class="token punctuation">.</span>length <span class="token operator">-</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">//\u5904\u7406\u5341 deal ten</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    result <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&#39;\u4E00\u5341&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u5341&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">createChineseNumsByLength</span><span class="token punctuation">(</span><span class="token parameter">len</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>len<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token string">&#39;\u4E00&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">v<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">toChineseNumber</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div>`,2);function t(o,e){return p}var l=n(a,[["render",t],["__file","create-chinese-num.html.vue"]]);export{l as default};
