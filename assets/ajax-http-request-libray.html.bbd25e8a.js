import{_ as e,r as o,o as c,c as r,a as n,b as t,F as l,e as p,d as s}from"./app.ea0e2b7a.js";const u={},i=p(`<h1 id="ajax-http-\u8BF7\u6C42\u5E93\u3001\u5DE5\u5177" tabindex="-1"><a class="header-anchor" href="#ajax-http-\u8BF7\u6C42\u5E93\u3001\u5DE5\u5177" aria-hidden="true">#</a> ajax/http \u8BF7\u6C42\u5E93\u3001\u5DE5\u5177</h1><h2 id="axios" tabindex="-1"><a class="header-anchor" href="#axios" aria-hidden="true">#</a> axios</h2><p>\u4E0D\u652F\u6301\u8BBE\u7F6E user agent \u6D4F\u89C8\u5668\u4E0D\u5141\u8BB8\uFF0Cnodejs \u5E94\u8BE5\u53EF\u4EE5\uFF0C\u4F46 axios \u5C31\u662F\u4E0D\u884C https://github.com/axios/axios/issues/1411 https://github.com/axios/axios/issues/1231</p><p>\u8BA1\u5212\u6539\u7528 superagent\uFF0C\u7406\u7531\uFF1A</p><blockquote><p>\u4E4B\u524D\u6D4B\u8BD5\u8FC7\u5E02\u9762\u4E0A\u51E0\u4E4E\u6240\u6709\u7684 request \u7C7B\u578B\u7684\u5E93\uFF0C\u4E5F\u4E3A request \u5E93\u63D0\u8FC7\u4E00\u4E2A\u89E3\u51B3\u5185\u5B58\u6CC4\u9732\u7684 PR \u5DF2\u7ECF\u5408\u5E76\u3002\u5F00\u59CB\u4EE5\u4E3A axios \u5F88\u597D\u7528\uFF0C\u540E\u6765\u53D1\u73B0\u91CC\u9762\u5751\u5F88\u591A\uFF0C\u8BB0\u5F97\u5F53\u65F6 form-data \u53EA\u80FD\u4EE5 json \u5F62\u5F0F\u63D0\u4EA4\uFF0C\u5F88\u591A\u56FD\u5185\u7684\u7AD9\u4E0D\u652F\u6301\u3002\u540E\u6765\u6362\u6210\u4E86 superagent\uFF0C\u51FA\u81EA node \u754C\u4F20\u5947\u4EBA\u7269 TJ \u624B\u7B14\uFF08\u73B0\u5DF2\u53DB\u53D8\u5230 Go \u9635\u8425\uFF09\uFF0C \u5404\u79CD\u95EE\u9898\u5168\u90E8\u80FD\u591F\u901A\u8FC7\u914D\u7F6E\u6216\u8005\u4F7F\u7528\u63D2\u4EF6\u89E3\u51B3\uFF0C\u6709\u5F88\u591A\u63D2\u4EF6\u4E0A\u624B\u5373\u7528\uFF0C\u975E\u5E38\u65B9\u4FBF\uFF0C\u539F\u751F\u652F\u6301 promise\uFF0C\u517C\u5BB9\u524D\u540E\u7AEF\uFF0C\u4E5F\u6BD4 axios \u8F7B\u91CF\u4E14\u63D2\u4EF6\u673A\u5236\u975E\u5E38\u7075\u6D3B\uFF0C\u6BD4 got \u4E4B\u6D41\u76F4\u89C2\u65B9\u4FBF\uFF0C\u529F\u80FD\u5F3A\u608D\u3002request \u5C31\u4E0D\u591A\u8BF4\u4E86\uFF0C\u81C3\u80BF\u5F3A\u5927\u7565\u5FAE\u9EBB\u70E6\u3002\u63A8\u8350\u697C\u4E3B\u4F7F\u7528 superagent\u3002\u6216\u8005\u60F3\u8981\u7B80\u5355\u70B9\u7684\u76F4\u63A5\u7528 isomorphic-fetch \u4E5F\u884C\u3002 \u8FD8\u53EF\u4EE5\u652F\u6301\u6D4B\u8BD5\u73AF\u5883\uFF0C\u76F4\u63A5\u7528 supertest \u6D4B\u8BD5\uFF0C\u4E5F\u662F\u539F\u751F promise\uFF0C\u8FD8\u662F\u5F88\u8212\u670D\u7684\uFF0C\u81EA\u6B64\u518D\u4E5F\u4E0D\u7528 axios \u4E4B\u6D41\u4E86\u3002\u800C\u4E14\u53D1\u73B0 request\uFF0Caxios \u8FD9\u7C7B\u80FD\u505A\u7684 superagent \u90FD\u80FD\u505A\uFF0C\u6700\u540E\u5199\u51FA\u7684\u4EE3\u7801\u662F\u6700\u7B80\u5355\u76F4\u89C2\u7684</p></blockquote><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">HTTP</span> <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">baseURL</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">http://jsonplaceholder.typicode.com/</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
  <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">Authorization</span><span class="token operator">:</span> <span class="token string">&#39;Bearer {token}&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// use</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token constant">HTTP</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./http-common&#39;</span>
</code></pre></div>`,6),k=s("\u8BF7\u6C42\u56FE\u7247 \u76F4\u63A5\u5728\u6D4F\u89C8\u5668\u6253\u5F00\u4F1A\u63D0\u793A\u4E0B\u8F7D\uFF0C\u4F30\u8BA1\u662F\u8981\u8FD4\u56DE\u521B\u5EFA\u65B0\u7684 stream "),d={href:"https://stackoverflow.com/questions/41846669/download-an-image-using-axios-and-convert-it-to-base64",target:"_blank",rel:"noopener noreferrer"},h=s("javascript - Download an image using Axios and convert it to base64 - Stack Overflow"),m=p(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// ctx.body = request(options)</span>
ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">url</span><span class="token operator">:</span> imgUrl<span class="token punctuation">,</span>
  <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">Referer</span><span class="token operator">:</span> referrer
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">responseType</span><span class="token operator">:</span> <span class="token string">&#39;stream&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">response</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> response<span class="token punctuation">.</span>data
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>referrer \u4F5C\u7528\u662F\u8BC6\u522B\u9875\u9762\uFF0C\u53EF\u4EE5\u7406\u89E3\u4E0D\u5305\u62EC hash\u3002\u5982\u679C\u9700\u8981 hash\uFF0C\u53EF\u4EE5\u624B\u52A8\u5728 headers \u4E2D\u6DFB\u52A0 <code>window.location.href</code></p><h2 id="superagent" tabindex="-1"><a class="header-anchor" href="#superagent" aria-hidden="true">#</a> superagent</h2>`,3),b={href:"https://github.com/zhaoqize/blog/issues/13",target:"_blank",rel:"noopener noreferrer"},g=s("[\u7FFB\u8BD1] SuperAgent \u4E2D\u6587\u4F7F\u7528\u6307\u5357(v3.8.0) \xB7 Issue #13 \xB7 zhaoqize/blog"),f=p(`<ul><li>\u652F\u6301\u65E7\u7684\u56DE\u8C03\u65B9\u5F0F\uFF0C\u7528 end</li><li>\u652F\u6301 retry</li></ul><p>\u4E0E axios \u5199\u6CD5\u5BF9\u6BD4</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// axios</span>
<span class="token keyword">let</span> data <span class="token operator">=</span> res<span class="token punctuation">.</span>data
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>response<span class="token punctuation">.</span>status<span class="token punctuation">,</span> e<span class="token punctuation">.</span>response<span class="token punctuation">.</span>config<span class="token punctuation">)</span>

<span class="token comment">// superagent</span>
<span class="token keyword">let</span> data <span class="token operator">=</span> res<span class="token punctuation">.</span>body
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token punctuation">[</span>foo<span class="token punctuation">,</span> bar<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
  superagent<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  superagent<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;bar&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre></div><p>Promise \u5316</p><div class="language-text ext-text"><pre class="language-text"><code>return new Promise((resolve, reject) =&gt; {
  superagent
    .post(params.url)
    .auth(params.auth.username, params.auth.password)
    .send(params.payload)
    .set(&#39;Accept&#39;, &#39;application/json&#39;)
    .end((error, res) =&gt; {
        error ? reject(error) : resolve(res);
    });
});
</code></pre></div><p>\u6279\u91CF Promise \u5316</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> request <span class="token keyword">from</span> <span class="token string">&#39;superagent&#39;</span>

<span class="token keyword">const</span> <span class="token function-variable function">withPromiseCallback</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token parameter">error<span class="token punctuation">,</span> response</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">reject</span><span class="token punctuation">(</span><span class="token punctuation">{</span> error <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>body<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">fetchSuggestions</span> <span class="token operator">=</span> <span class="token parameter">search</span> <span class="token operator">=&gt;</span>
  <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
    request
      <span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/api/auth/get-companies/0/50&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token string">&#39;form&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;Accept&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;application/json&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        search
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token function">withPromiseCallback</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">fetchInitialInformation</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
    request
      <span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/api/auth/check&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;Accept&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;application/json&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token function">withPromiseCallback</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><h2 id="\u6D4B\u8BD5\u5DE5\u5177" tabindex="-1"><a class="header-anchor" href="#\u6D4B\u8BD5\u5DE5\u5177" aria-hidden="true">#</a> \u6D4B\u8BD5\u5DE5\u5177</h2>`,8),_=n("li",null,"postman \u4E0D\u652F\u6301\u8BBE\u7F6E socks5 \u4EE3\u7406",-1),y=s("\u5728\u7EBF\u6D4B\u8BD5 "),x={href:"https://www.hurl.it/",target:"_blank",rel:"noopener noreferrer"},w=s("Hurl.it - Make HTTP requests"),v=n("h3",{id:"\u66FF\u4EE3\u54C1",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u66FF\u4EE3\u54C1","aria-hidden":"true"},"#"),s(" \u66FF\u4EE3\u54C1")],-1),j=s("insomnia: \u57FA\u4E8E Electron "),q={href:"https://github.com/Kong/insomnia",target:"_blank",rel:"noopener noreferrer"},P=s("Kong/insomnia: Cross-platform HTTP and GraphQL Client"),T=s("Postwoman \u652F\u6301 PWA "),A={href:"https://postwoman.io/",target:"_blank",rel:"noopener noreferrer"},C=s("Postwoman \u2022 A free, fast and beautiful API request builder"),H=n("h2",{id:"\u670D\u52A1\u5668\u5DE5\u5177",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u670D\u52A1\u5668\u5DE5\u5177","aria-hidden":"true"},"#"),s(" \u670D\u52A1\u5668\u5DE5\u5177")],-1),I=n("p",null,"\u81EA\u52A8\u5237\u65B0\u529F\u80FD\u8981\u9488\u5BF9\u4E00\u4E2A\u76EE\u5F55\u624D\u884C\uFF0C\u56E0\u6B64\u7EC3\u624B\u9879\u76EE\u907F\u514D\u91C7\u7528\u6587\u4EF6\u5939\u5E76\u884C\uFF0C\u800C\u662F\u4F7F\u7528\u5206\u652F",-1),z=n("p",null,"http-server \u7B80\u5355\uFF0C\u652F\u6301\u6587\u4EF6\u5939\u6D4F\u89C8\uFF0C\u5F53\u7136\u4E5F\u5C31\u6CA1\u81EA\u52A8\u5237\u65B0\u4E86 liteserver \u57FA\u4E8E browser-sync",-1);function L(B,E){const a=o("ExternalLinkIcon");return c(),r(l,null,[i,n("ul",null,[n("li",null,[k,n("a",d,[h,t(a)])])]),m,n("p",null,[n("a",b,[g,t(a)])]),f,n("ul",null,[_,n("li",null,[y,n("a",x,[w,t(a)])])]),v,n("p",null,[j,n("a",q,[P,t(a)])]),n("p",null,[T,n("a",A,[C,t(a)])]),H,I,z],64)}var R=e(u,[["render",L],["__file","ajax-http-request-libray.html.vue"]]);export{R as default};
