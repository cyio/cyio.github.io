import{_ as n,e as s}from"./app.0fa1b285.js";const a={},p=s(`<p>\u6DF1\u5EA6\u4F18\u5148\u641C\u7D22\uFF08DFS\uFF09\u662F\u4E00\u79CD\u7528\u4E8E\u904D\u5386\u6216\u641C\u7D22\u6811\u3001\u56FE\u6216\u5176\u4ED6\u6570\u636E\u7ED3\u6784\u7684\u7B97\u6CD5\u3002\u5B83\u4EE5\u9012\u5F52\u6216\u6808\u7684\u65B9\u5F0F\u8FDB\u884C\u904D\u5386\uFF0C\u4ECE\u8D77\u59CB\u8282\u70B9\uFF08\u6216\u6839\u8282\u70B9\uFF09\u5F00\u59CB\uFF0C\u5C3D\u53EF\u80FD\u6DF1\u5165\u5230\u6811\u7684\u4E00\u4E2A\u5206\u652F\uFF0C\u76F4\u5230\u65E0\u6CD5\u518D\u6DF1\u5165\u4E3A\u6B62\uFF0C\u7136\u540E\u56DE\u6EAF\u5230\u4E0A\u4E00\u4E2A\u8282\u70B9\uFF0C\u518D\u63A2\u7D22\u5176\u4ED6\u5206\u652F\u3002</p><p>\u5728\u7EB8\u4E0A\u753B\u4E2A\u6811\uFF0C\u597D\u7406\u89E3\u4E9B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">findPath</span><span class="token punctuation">(</span><span class="token parameter">graph<span class="token punctuation">,</span> startNode<span class="token punctuation">,</span> endNode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u521B\u5EFA\u4E00\u4E2A\u7A7A\u6570\u7EC4\u6765\u5B58\u50A8\u8DEF\u5F84</span>
    <span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  
    <span class="token comment">// \u521B\u5EFA\u4E00\u4E2A\u8F85\u52A9\u51FD\u6570\u6765\u8FDB\u884CDFS</span>
    <span class="token keyword">function</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token parameter">currentNode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5C06\u5F53\u524D\u8282\u70B9\u6DFB\u52A0\u5230\u8DEF\u5F84\u4E2D</span>
      path<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>currentNode<span class="token punctuation">)</span><span class="token punctuation">;</span>
  
      <span class="token comment">// \u5982\u679C\u5F53\u524D\u8282\u70B9\u5C31\u662F\u76EE\u6807\u8282\u70B9\uFF0C\u8FD4\u56DE\u8DEF\u5F84</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>currentNode <span class="token operator">===</span> endNode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> path<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
  
      <span class="token comment">// \u904D\u5386\u5F53\u524D\u8282\u70B9\u7684\u90BB\u5C45\u8282\u70B9</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> neighbor <span class="token keyword">of</span> graph<span class="token punctuation">[</span>currentNode<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5982\u679C\u90BB\u5C45\u8282\u70B9\u4E0D\u5728\u8DEF\u5F84\u4E2D\uFF0C\u7EE7\u7EEDDFS\uFF0C\u6709\u53EF\u80FD\u5FAA\u73AF\u6307\u5411</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>path<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>neighbor<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">dfs</span><span class="token punctuation">(</span>neighbor<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token comment">// \u5982\u679C\u627E\u5230\u8DEF\u5F84\uFF0C\u8FD4\u56DE\u7ED3\u679C</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> result<span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
  
      <span class="token comment">// \u5982\u679C\u5F53\u524D\u8282\u70B9\u6CA1\u6709\u901A\u5411\u76EE\u6807\u8282\u70B9\u7684\u8DEF\u5F84\uFF0C\u4ECE\u8DEF\u5F84\u4E2D\u5220\u9664\u5B83</span>
      path<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  
    <span class="token comment">// \u8C03\u7528DFS\u51FD\u6570\uFF0C\u5F00\u59CB\u641C\u7D22</span>
    <span class="token function">dfs</span><span class="token punctuation">(</span>startNode<span class="token punctuation">)</span><span class="token punctuation">;</span>
  
    <span class="token comment">// \u8FD4\u56DE\u627E\u5230\u7684\u8DEF\u5F84\uFF0C\u5982\u679C\u6CA1\u6709\u8DEF\u5F84\u5219\u8FD4\u56DE null</span>
    <span class="token keyword">return</span> path<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">1</span> <span class="token operator">?</span> path <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  
  <span class="token comment">// \u793A\u4F8B\u8F93\u5165</span>
  <span class="token keyword">const</span> graph <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;A&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;B&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;C&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;B&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;D&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;C&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;E&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;D&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;E&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;E&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> startNode <span class="token operator">=</span> <span class="token string">&quot;A&quot;</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> endNode <span class="token operator">=</span> <span class="token string">&quot;E&quot;</span><span class="token punctuation">;</span>
  
  <span class="token comment">// \u67E5\u627E\u8DEF\u5F84</span>
  <span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">findPath</span><span class="token punctuation">(</span>graph<span class="token punctuation">,</span> startNode<span class="token punctuation">,</span> endNode<span class="token punctuation">)</span><span class="token punctuation">;</span>
  
  <span class="token keyword">if</span> <span class="token punctuation">(</span>path<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u8DEF\u5F84:&quot;</span><span class="token punctuation">,</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot; -&gt; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u6CA1\u6709\u627E\u5230\u8DEF\u5F84&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br></div></div>`,3);function t(o,e){return p}var u=n(a,[["render",t],["__file","dfs-search-graph.html.vue"]]);export{u as default};
