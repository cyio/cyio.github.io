import{_ as p,r as e,o as t,c as o,a as n,b as c,F as l,e as r,d as s}from"./app.65749045.js";const u={},i=r(`<h1 id="\u6570\u7EC4\u6700\u5C0F\u503C" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u6700\u5C0F\u503C" aria-hidden="true">#</a> \u6570\u7EC4\u6700\u5C0F\u503C</h1><p>\u51FD\u6570\u53C2\u6570\u6709\u4E0A\u9650\uFF0C\u56E0\u6B64 apply array \u53EF\u80FD\u8D85\u51FA\u9650\u5236\uFF0C\u53EF\u5206\u89E3\u5904\u7406\u89C4\u907F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">function</span> <span class="token function">minOfArray</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> min <span class="token operator">=</span> <span class="token number">Infinity</span> <span class="token comment">// \u9700\u8981\u521D\u59CB\u4E00\u4E2A\u6700\u5927\u503C\u4EE5\u4FBF\u540E\u9762\u6BD4\u8F83</span>
    <span class="token keyword">const</span> limit <span class="token operator">=</span> <span class="token number">30000</span> <span class="token comment">// \u5047\u5B9A</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">+=</span> limit<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> curMin <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> arr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> i <span class="token operator">+</span> limit<span class="token punctuation">)</span><span class="token punctuation">)</span>
      min <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>min<span class="token punctuation">,</span> curMin<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> min
  <span class="token punctuation">}</span>
  <span class="token comment">//   let arr = new Array(2 ** 32 - 1).fill(Math.random() * 100) // browser stuck</span>
  <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">**</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span>
  <span class="token comment">//   let res2 = Math.min.apply(null, arr) // when arguments length to 2 ** 17,  chrome throw error &#39;blank:15 Uncaught RangeError: Maximum call stack size exceeded&#39;</span>
  <span class="token comment">//   console.log(res2)</span>
  <span class="token keyword">let</span> res1 <span class="token operator">=</span> <span class="token function">minOfArray</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res1<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div>`,3),k=s("source: "),m={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply",target:"_blank",rel:"noopener noreferrer"},b=s("Function.prototype.apply() - JavaScript | MDN");function d(f,h){const a=e("ExternalLinkIcon");return t(),o(l,null,[i,n("p",null,[k,n("a",m,[b,c(a)])])],64)}var _=p(u,[["render",d],["__file","min-of-array.html.vue"]]);export{_ as default};
