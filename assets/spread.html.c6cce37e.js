import{d as n}from"./app.31fc93bc.js";const s={},a=n('<h1 id="扩展符" tabindex="-1"><a class="header-anchor" href="#扩展符" aria-hidden="true">#</a> 扩展符</h1><ul><li>数据类型不一定有效，使用逻辑判断，否则会报错</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 数组不一定有效</span>\n\n<span class="token keyword">let</span> b\n<span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>b <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>\n\n<span class="token comment">// 对象不一定有效</span>\n<span class="token comment">// `{...false}` (and undefined/null/etc) is just `{}`.</span>\n<span class="token keyword">const</span> shipping <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token operator">...</span>defaultAddress<span class="token punctuation">,</span>\n  <span class="token operator">...</span>person <span class="token operator">&amp;&amp;</span> person<span class="token punctuation">.</span>address <span class="token comment">// { ...false } == {}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div>',3);s.render=function(n,s){return a};export default s;
