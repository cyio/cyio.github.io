import{r as n,o as s,c as a,a as e,w as p,F as t,b as o,d as l}from"./app.31fc93bc.js";const c={},r=e("h1",{id:"跨源-跨域",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#跨源-跨域","aria-hidden":"true"},"#"),o(" 跨源（跨域）")],-1),i={class:"table-of-contents"},u=o("定义"),k=o("分类"),b=o("JSONP"),d=o("CORS"),m=o("React / Vue 设置代理（仅开发模式用）"),h=o("postMessage"),g=o("发散：页面通信还有哪些方法"),f=l('<h2 id="定义" tabindex="-1"><a class="header-anchor" href="#定义" aria-hidden="true">#</a> 定义</h2><p>翻译问题，实际是跨源 origin = protocol + domain + port</p><blockquote><p>出于安全原因，浏览器限制从<strong>脚本内</strong>发起的跨源 HTTP 请求。 例如，XMLHttpRequest 和 Fetch API 遵循同源策略。 这意味着使用 这些 API 的 Web 应用程序只能从加载应用程序的同一个域请求 HTTP 资源，除非使用 CORS 头文件。</p></blockquote><ol><li>服务端设置允许：Access-Control-Allow-Origin</li><li>jsonp 伪跨域，需要服务端配合</li><li>利用 Apache 转发 如何解决 Ajax 跨域请求不到的问题？ - pig pig 的回答 - 知乎 同源策略和跨域访问 - lg2045 的个人空间 - 开源中国社区</li><li>gulp 代理插件 gulp-connect-proxy 浅谈 WEB 跨域的实现（前端向） - vajoy - 博客园 Javascript 跨域访问解决方案 - 老唐 的专栏 - 博客频道 - CSDN.NET ajax 跨域问题解决方案 | w3cboy,最专业的前端开发博客</li></ol><p>浏览器拦截只是页面拿不到数据，请求是正常收发的</p><h2 id="分类" tabindex="-1"><a class="header-anchor" href="#分类" aria-hidden="true">#</a> 分类</h2><ol><li><p>请求跨域 Client-Server</p><ul><li>jsonp</li><li>cors</li></ul></li><li><p>页面跨域 Page-Page</p><ul><li>postMessage</li><li>document.domain（不推荐，标准已移除）</li></ul></li></ol><h2 id="jsonp" tabindex="-1"><a class="header-anchor" href="#jsonp" aria-hidden="true">#</a> JSONP</h2><p>由于同源策略的限制，<code>XmlHttpRequest</code>只允许请求当前源，<code>script</code>标签没有同源限制</p><p><s>但是现在浏览器，默认会检查 MIME-type，如 script 请求 json 会被 CORB 拦截</s></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> jsonp <span class="token keyword">from</span> <span class="token string">&#39;jsonp-es6&#39;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',11),v={href:"https://github.com/mzabriskie/axios/blob/master/COOKBOOK.md#jsonp",target:"_blank",rel:"noopener noreferrer"},w=o("axios/COOKBOOK.md at master · mzabriskie/axios"),j={href:"https://segmentfault.com/a/1190000018313378",target:"_blank",rel:"noopener noreferrer"},q=o("jsonp跨域资源引起CORB_记忆阁楼 - SegmentFault 思否"),x={href:"https://fetch.spec.whatwg.org/#corb",target:"_blank",rel:"noopener noreferrer"},E=o("Fetch Standard CORB"),y=l('<p>jsonp 数据结构</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>jsonpcallback({\n  &quot;id&quot;: 1,\n  &quot;room&quot;: &quot;main bedroom&quot;,\n  &quot;items&quot;: [ &quot;bed&quot;, &quot;chest of drawers&quot; ]\n});\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>服务端代码，返回的是一个函数调用，数据作为参数</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token comment">//用回调函数名称包裹返回数据</span>\n    <span class="token class-name">String</span> result <span class="token operator">=</span> callback <span class="token operator">+</span> <span class="token string">&quot;(&quot;</span> <span class="token operator">+</span> jsonData <span class="token operator">+</span> <span class="token string">&quot;)&quot;</span><span class="token punctuation">;</span>\n    response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>客户端代码，请求文件 MIME type 应该是 javascript</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">requestJSONP</span><span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// create script with passed in URL</span>\n  <span class="token keyword">var</span> script <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;script&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  script<span class="token punctuation">.</span>src <span class="token operator">=</span> url<span class="token punctuation">;</span>\n  script<span class="token punctuation">.</span>async <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n  \n  <span class="token comment">// after the script is loaded (and executed), remove it</span>\n  script<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  \n  <span class="token comment">// insert script tag into the DOM (append to &lt;head&gt;)</span>\n  <span class="token keyword">var</span> head <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">&#39;head&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  head<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>script<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">var</span> url <span class="token operator">=</span> <span class="token string">&quot;https://api.map.baidu.com/place/v2/search?query=ATM机&amp;tag=银行&amp;region=北京&amp;output=json&amp;ak=F552bedbee2ec8fa6bae7b7a08201&amp;callback=callback&quot;</span><span class="token punctuation">;</span>\n\n<span class="token function">requestJSONP</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>\n\n<span class="token keyword">var</span> <span class="token function-variable function">callback</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">var</span> json <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>json<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h2 id="cors" tabindex="-1"><a class="header-anchor" href="#cors" aria-hidden="true">#</a> CORS</h2><p>服务器通过设置 Access-Control-Allow-Origin 来指定接受哪些域（以下仅用于跨域情况）</p><ul><li><p>需要服务器设置支持</p></li><li><p>Access-Control-Allow-Origin 有两种情况，一个精确域名或<code>*</code></p><p>如何配置多个，写多条？缓存允许多个访问需要设置<code>vary</code></p></li><li><p><s>Access-Control-Allow-Credentials 表示是否允许发送 cookie，只能是 true，不需要就不要写</s></p></li><li><p>Access-Control-Allow-Credentials 读取跨域响应内容限制，客、服均需设置</p></li><li><p>cookie 比较敏感，需要两端配合，才能传送，且只能同源，域名要求至少有两个点，localhost 不符合</p></li><li><p>不管是否为跨域请求，ORIGIN 字段总是被发送</p></li><li><p>Chrome/Firefox 不允许 https 向 http 发跨域请求，会被拦截</p></li></ul>',9),O={href:"https://www.jianjunchen.com/post/cors%E5%AE%89%E5%85%A8%E9%83%A8%E7%BD%B2%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#%E4%B8%80-%E8%83%8C%E6%99%AF",target:"_blank",rel:"noopener noreferrer"},A=o("绕过浏览器 SOP，跨站窃取信息：CORS 配置安全漏洞报告及最佳部署实践 | Jianjun Chen's Homepage"),C={href:"https://stackoverflow.com/questions/27406994/http-requests-withcredentials-what-is-this-and-why-using-it",target:"_blank",rel:"noopener noreferrer"},S=o("javascript - Http requests withCredentials what is this and why using it? - Stack Overflow"),_={href:"https://segmentfault.com/a/1190000011811117",target:"_blank",rel:"noopener noreferrer"},B=o("axios 的 cookie 跨域以及相关配置 - 个人文章 - SegmentFault 思否"),M={href:"https://stackoverflow.com/questions/46288437/set-cookie-header-has-no-effect",target:"_blank",rel:"noopener noreferrer"},R=o("http - Set-Cookie header has no effect - Stack Overflow"),P={href:"https://ask.dcloud.net.cn/article/13372",target:"_blank",rel:"noopener noreferrer"},T=o("ajax 如何带上 cookie - DCloud 问答"),F={href:"https://juejin.im/post/5a9e6592f265da23870e59eb",target:"_blank",rel:"noopener noreferrer"},N=o("webpack-dev-server 代理解决 cookie 丢失问题 - 掘金"),J=l('<h2 id="react-vue-设置代理-仅开发模式用" tabindex="-1"><a class="header-anchor" href="#react-vue-设置代理-仅开发模式用" aria-hidden="true">#</a> React / Vue 设置代理（仅开发模式用）</h2><ul><li><code>create-react-app</code>可在 package.json 中设置<code>proxy: &quot;http://localhost:8080&quot;</code>，要配合 fetch/ajax 使用</li><li><code>vue-cli</code>创建的可在<code>config.js/index.js</code>中设置</li><li>要代理跨域请求，请求必须指向代理地址（localhost）才 work</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>dev<span class="token operator">:</span> <span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n  proxyTable<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token string">&#39;/api&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      target<span class="token operator">:</span> <span class="token string">&#39;http://localhost:8081&#39;</span><span class="token punctuation">,</span>\n      <span class="token comment">// changeOrigin: true // 不是必须？</span>\n      pathRewrite<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string">&#39;^/api&#39;</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span> <span class="token comment">// 重写接口</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token comment">// http://example.com/result/xxxx.mp4</span>\n    <span class="token string">&#39;/result&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      target<span class="token operator">:</span> <span class="token string">&#39;http://example.com&#39;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\ndevServer<span class="token operator">:</span> <span class="token punctuation">{</span>\n  <span class="token operator">...</span>\n  headers<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token string">&quot;Access-Control-Allow-Origin&quot;</span><span class="token operator">:</span> <span class="token string">&quot;*&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;Access-Control-Allow-Methods&quot;</span><span class="token operator">:</span> <span class="token string">&quot;GET, POST, PUT, DELETE, PATCH, OPTIONS&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;Access-Control-Allow-Headers&quot;</span><span class="token operator">:</span> <span class="token string">&quot;X-Requested-With, content-type, Authorization&quot;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div>',3),D={href:"http://www.jianshu.com/p/95b2caf7e0da",target:"_blank",rel:"noopener noreferrer"},H=o("Vue-cli proxyTable 解决开发环境的跨域问题 - 简书"),I={href:"https://plainnany.github.io/2017/08/05/JS%25E4%25B8%25AD%25E5%2585%25B3%25E4%25BA%258E%25E8%25B7%25A8%25E5%259F%259F%25E5%258F%258A%25E5%25AE%259E%25E7%258E%25B0%25E6%2596%25B9%25E6%25B3%2595/",target:"_blank",rel:"noopener noreferrer"},W=o("JS 中关于跨域及实现方法 | plainnany"),z={href:"https://segmentfault.com/a/1190000011072725",target:"_blank",rel:"noopener noreferrer"},L=o("使用 vue-axios 和 vue-resource 解决 vue 中调用网易云接口跨域的问题 - 个人文章 - SegmentFault"),K={href:"https://github.com/wengjq/Blog/issues/2",target:"_blank",rel:"noopener noreferrer"},U=o("前端跨域问题及解决方案 · Issue #2 · wengjq/Blog"),V={href:"http://louiszhai.github.io/2016/01/11/cross-domain/",target:"_blank",rel:"noopener noreferrer"},X=o("由同源策略到前端跨域 | louis blog"),G=e("h2",{id:"postmessage",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#postmessage","aria-hidden":"true"},"#"),o(" postMessage")],-1),$=e("li",null,[e("p",null,"html5 api，页面与 service worker 通信用的就是这个")],-1),Q=e("li",null,[e("p",null,"出于安全考虑，需要做 origin 判断")],-1),Y=e("p",null,"窗口是 open/iframe 关系",-1),Z={href:"https://juejin.im/post/5b8359f351882542ba1dcc31",target:"_blank",rel:"noopener noreferrer"},nn=o("postMessage 可太有用了 - 掘金"),sn={href:"https://www.zybuluo.com/EncyKe/note/516702",target:"_blank",rel:"noopener noreferrer"},an=o("手记：iframe、postMessage 及其它跨域通信实践 - 作业部落 Cmd Markdown 编辑阅读器"),en={href:"https://javascript.info/cross-window-communication",target:"_blank",rel:"noopener noreferrer"},pn=o("Cross-window communication"),tn=l('<li><p>用法：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 父</span>\n$iframeEl<span class="token punctuation">.</span>contentWindow<span class="token punctuation">.</span><span class="token function">postMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 子</span>\nwindow<span class="token punctuation">.</span>parent<span class="token punctuation">.</span><span class="token function">postMessage</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> <span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    \n\nwindow<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>发送的数据对象会经过 structured clone algorithm ，递归 + 维护一份已访问对象引用 map，避免循环引用。</p></li>',1),on=l('<h2 id="发散-页面通信还有哪些方法" tabindex="-1"><a class="header-anchor" href="#发散-页面通信还有哪些方法" aria-hidden="true">#</a> 发散：页面通信还有哪些方法</h2><ul><li><p>storage event 作用于 localStorage/sessionStorage 共享的页面</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> o <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&#39;http://baidu.com&#39;</span><span class="token punctuation">)</span>\no<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>即使同源，并不能访问或修改 window 下的大部分变量</p></li></ul>',2),ln={href:"https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy",target:"_blank",rel:"noopener noreferrer"},cn=o("Same-origin policy - Web security | MDN"),rn={href:"https://jakearchibald.com/2021/cors/",target:"_blank",rel:"noopener noreferrer"},un=o("How to win at CORS - JakeArchibald.com");c.render=function(o,l){const c=n("RouterLink"),kn=n("OutboundLink");return s(),a(t,null,[r,e("nav",i,[e("ul",null,[e("li",null,[e(c,{to:"#定义"},{default:p((()=>[u])),_:1})]),e("li",null,[e(c,{to:"#分类"},{default:p((()=>[k])),_:1})]),e("li",null,[e(c,{to:"#jsonp"},{default:p((()=>[b])),_:1})]),e("li",null,[e(c,{to:"#cors"},{default:p((()=>[d])),_:1})]),e("li",null,[e(c,{to:"#react-vue-设置代理-仅开发模式用"},{default:p((()=>[m])),_:1})]),e("li",null,[e(c,{to:"#postmessage"},{default:p((()=>[h])),_:1})]),e("li",null,[e(c,{to:"#发散-页面通信还有哪些方法"},{default:p((()=>[g])),_:1})])])]),f,e("p",null,[e("a",v,[w,e(kn)]),e("a",j,[q,e(kn)]),e("a",x,[E,e(kn)])]),y,e("p",null,[e("a",O,[A,e(kn)])]),e("p",null,[e("a",C,[S,e(kn)])]),e("p",null,[e("a",_,[B,e(kn)])]),e("p",null,[e("a",M,[R,e(kn)])]),e("p",null,[e("a",P,[T,e(kn)])]),e("p",null,[e("a",F,[N,e(kn)])]),J,e("p",null,[e("a",D,[H,e(kn)]),e("a",I,[W,e(kn)]),e("a",z,[L,e(kn)]),e("a",K,[U,e(kn)]),e("a",V,[X,e(kn)])]),G,e("ul",null,[$,Q,e("li",null,[Y,e("p",null,[e("a",Z,[nn,e(kn)])]),e("p",null,[e("a",sn,[an,e(kn)])]),e("p",null,[e("a",en,[pn,e(kn)])])]),tn]),on,e("p",null,[e("a",ln,[cn,e(kn)])]),e("p",null,[e("a",rn,[un,e(kn)])])],64)};export default c;
