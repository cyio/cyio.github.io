import{r as e,o as a,c as n,a as r,F as s,b as t,d as i}from"./app.0e74f851.js";const l={},d=r("h1",{id:"vim-插件、扩展",tabindex:"-1"},[r("a",{class:"header-anchor",href:"#vim-插件、扩展","aria-hidden":"true"},"#"),t(" Vim 插件、扩展")],-1),o=r("h2",{id:"开发",tabindex:"-1"},[r("a",{class:"header-anchor",href:"#开发","aria-hidden":"true"},"#"),t(" 开发")],-1),c={href:"https://zhuanlan.zhihu.com/p/47374698",target:"_blank",rel:"noopener noreferrer"},p=t("vim 插件开发入门之 MRU - 知乎"),h=i('<h2 id="git" tabindex="-1"><a class="header-anchor" href="#git" aria-hidden="true">#</a> git</h2><p>插件是对当前打开文件操作</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>:git <span class="token function">rm</span> <span class="token operator">&amp;</span>\n:gremove\n\n:git <span class="token function">mv</span> <span class="token operator">&amp;</span> target-path\n:gmove target-path\n\n:git <span class="token function">add</span> <span class="token operator">&amp;</span>\n:gwrite\n\n:git checkout <span class="token operator">&amp;</span>\n:gread\n\ngvdiff 检查变动\n\n:Gstatus\n-\n<span class="token operator">=</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="注释-nerdcommenter" tabindex="-1"><a class="header-anchor" href="#注释-nerdcommenter" aria-hidden="true">#</a> 注释 - nerdcommenter</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>leader c space 注释或取消注释\nleader c y 先复制再注释\nleader c A 行末尾追加注释\nleader c s 多行带星号(sexy)注释\nleader c m 单行带星号(minimal)注释\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="fzf" tabindex="-1"><a class="header-anchor" href="#fzf" aria-hidden="true">#</a> FZF</h2>',6),u=i("<li>支持多种查找，包括一些插件功能</li><li>定位后，c-t s v 用不同方式打开</li><li><code>:Files</code>与 ctrlf 功能重合</li><li>实用查找 <code>:Buffers</code> <code>:Snippets</code> <code>:GFiles?</code> <code>:BCommits</code></li><li>差异，交互式</li>",5),m=t("不如 ctrlsf 方便 "),b={href:"https://github.com/junegunn/fzf.vim/issues/528#issuecomment-368260699",target:"_blank",rel:"noopener noreferrer"},g=t("search and replace in project? · Issue #528 · junegunn/fzf.vim"),f=r("blockquote",null,[r("p",null,"Preview 我用的命令是bat，自动语法高亮")],-1),v=t("使用理由：全局性 zsh git "),x={href:"https://www.reddit.com/r/vim/comments/gbhvlo/what_am_i_missing_by_not_using_fzf/",target:"_blank",rel:"noopener noreferrer"},k=t("What am I missing by not using FZF? : vim"),w=i('<h2 id="wildfire" tabindex="-1"><a class="header-anchor" href="#wildfire" aria-hidden="true">#</a> wildfire</h2><p>选择内容时向外扩展, enter 即可 只要有界限就能放到里面选择，如各种括号</p><h2 id="markdown" tabindex="-1"><a class="header-anchor" href="#markdown" aria-hidden="true">#</a> markdown</h2><ul><li><code>:Toc</code> 临时跳转窗口</li><li><code>:gentoc</code> 在光标位置生成目录，可放到标题上按<code>t)</code>跳转，按<code>ctrl - o</code>跳回</li></ul><h2 id="emmet" tabindex="-1"><a class="header-anchor" href="#emmet" aria-hidden="true">#</a> emmet</h2><p>插件默认触发补全键是<code>ctrl y</code> ,</p><p>期望是用 tab ，而原 tab 功能由<code>\\tab</code>替代</p><h2 id="ctrlp-刷新索引" tabindex="-1"><a class="header-anchor" href="#ctrlp-刷新索引" aria-hidden="true">#</a> ctrlp 刷新索引</h2><p><code>ctrl - p F5</code></p><h2 id="nerdtree" tabindex="-1"><a class="header-anchor" href="#nerdtree" aria-hidden="true">#</a> nerdtree</h2><ul><li>存在时，按<code>q</code>关掉，再<code>ctrl-p</code>，或者找到文件按<code>t</code>在新标签中打开</li><li>操作当前文件，如重命名<code>:NERDTreeFind</code></li><li>切换显示隐藏 <code>shift i</code></li><li>重命名等操作，nerdtree 模拟的是文件管理器的右键(这一点不如原生文件浏览方便)<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>(a)dd a childnode\n(m)ove the curent node\n(d)elete the curent node\n(c)copy the current node\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li><li><code>u</code>: 切换目录树的根目录为上层目录</li><li><code>U</code>: 切换目录树的根目录为上层目录，并保持旧的目录树的状态</li></ul><h2 id="ultisnipsedit" tabindex="-1"><a class="header-anchor" href="#ultisnipsedit" aria-hidden="true">#</a> <code>:UltiSnipsEdit</code></h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>tab 补全\nctrl-b 下一个点\nctrl-z 上一个点\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>临时使用其它类型的补全，设置文件类型</p><h2 id="ternjs-是-js-代码分析引擎" tabindex="-1"><a class="header-anchor" href="#ternjs-是-js-代码分析引擎" aria-hidden="true">#</a> <s>ternjs 是 JS 代码分析引擎</s></h2><p>自动完成|函数参数提示|查询表达示类型|查找定义|自动重构(改名)</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>:h tern_map_keys\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="leaderf" tabindex="-1"><a class="header-anchor" href="#leaderf" aria-hidden="true">#</a> LeaderF</h2><p><code>ctrl f</code> 切换路径搜索和名字搜索，名字不惟一时，适合路径查找，如果输入关键词后，内容很多，按些键切换模式 <code>ctrl u</code> 清除，重新输入关键字 &#39;ind;mock&#39; 文件名加目录名 &#39;ind js&#39; 多个关键字匹配文件名</p><h2 id="创建便携-vim" tabindex="-1"><a class="header-anchor" href="#创建便携-vim" aria-hidden="true">#</a> 创建便携 vim</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>bash &lt;(curl -L https://raw.githubusercontent.com/junegunn/myvim/master/myvim)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',21),_=t("会创建可执行文件，所它放到需要的机器，添加执行权限运行即可 "),y={href:"https://junegunn.kr/2014/10/creating-portable-vim-environment",target:"_blank",rel:"noopener noreferrer"},j=t("Creating portable Vim environment"),F=r("h2",{id:"coc",tabindex:"-1"},[r("a",{class:"header-anchor",href:"#coc","aria-hidden":"true"},"#"),t(" coc")],-1),z={href:"https://github.com/vuhuucuong/dotfiles/blob/master/.vimrc",target:"_blank",rel:"noopener noreferrer"},C=t("dotfiles/.vimrc at master · vuhuucuong/dotfiles"),S={href:"https://medium.freecodecamp.org/a-guide-to-modern-web-development-with-neo-vim-333f7efbf8e2",target:"_blank",rel:"noopener noreferrer"},T=t("A guide to modern Web Development with (Neo)vim – freeCodeCamp.org"),M={href:"https://github.com/ctaylo21/jarvis/blob/master/config/nvim/init.vim",target:"_blank",rel:"noopener noreferrer"},V=t("jarvis/init.vim at master · ctaylo21/jarvis"),G=r("p",null,"配合 snip",-1),I=r("p",null,[r("code",null,"ctrl-y")],-1),L={href:"https://github.com/neoclide/coc.nvim/wiki/Completion-with-sources#improve-the-completion-experience",target:"_blank",rel:"noopener noreferrer"},O=t("Completion with sources · neoclide/coc.nvim Wiki"),R=r("p",null,"指定类型使用，markdown 打字卡",-1),W={href:"https://github.com/neoclide/coc.nvim/issues/349#issuecomment-455332882",target:"_blank",rel:"noopener noreferrer"},q=t("Disable coc.nvim per filetype (i.e. a filetype whitelist or blacklist) · Issue #349 · neoclide/coc.nvim"),A=i('<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>&quot; Remap <span class="token keyword">for</span> <span class="token function">rename</span> current word\nnmap <span class="token operator">&lt;</span>F<span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span> <span class="token operator">&lt;</span>Plug<span class="token operator">&gt;</span><span class="token punctuation">(</span>coc-rename<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>',1),D={href:"https://gist.github.com/benawad/b768f5a5bbd92c8baabd363b7e79786f#file-init-vim-L178",target:"_blank",rel:"noopener noreferrer"},N=t("init.vim"),P=i('<p><code>:CocInstall coc-explorer</code></p><p>定义跳转 GoTo 查看 <code>~/.vimrc</code></p><h2 id="note-plugin" tabindex="-1"><a class="header-anchor" href="#note-plugin" aria-hidden="true">#</a> note plugin</h2><h3 id="正面观点" tabindex="-1"><a class="header-anchor" href="#正面观点" aria-hidden="true">#</a> 正面观点</h3><ul><li>方便导航</li><li>思维导图形象，但搜索差，不宜保存长久笔记</li><li>设置多个 wiki</li></ul><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>= My knowledge base =\n    * [Tasks](Tasks) -- things to be done _yesterday_!!!\n    * Project Gutenberg -- good books are power.\n    * Scratchpad -- various temporary stuff.\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>',6),U={href:"https://www.reddit.com/r/vim/comments/6bl4al/how_does_vimwiki_compare_to_emacs_org_mode/dhnn3i6?utm_source=share&utm_medium=web2x",target:"_blank",rel:"noopener noreferrer"},B=t("How does vimwiki compare to emac's org mode? : vim"),H={href:"http://thedarnedestthing.com/vimwiki%2520cheatsheet",target:"_blank",rel:"noopener noreferrer"},J=t("vimwiki cheatsheet"),E={href:"https://jamesbvaughan.com/markdown-pandoc-notes/",target:"_blank",rel:"noopener noreferrer"},Z=t("How I Take Notes With Vim, Markdown, and Pandoc - things james does"),K={href:"https://void-shana.moe/linux/zh-taking-notes-with-vim.html",target:"_blank",rel:"noopener noreferrer"},X=t("将 vim 作为日常笔记本使用 – VOID001's WOWO"),Q=r("h3",{id:"反面观点",tabindex:"-1"},[r("a",{class:"header-anchor",href:"#反面观点","aria-hidden":"true"},"#"),t(" 反面观点")],-1),Y=r("p",null,"认为不需要 vimwiki",-1),$=r("li",null,[t("链接跳转用"),r("code",null,"gf")],-1),ee=r("li",null,[r("code",null,"grep -Ri todo . > todos")],-1),ae=t("日志不方便 "),ne={href:"http://joereynoldsaudio.com/2018/07/07/you-dont-need-vimwiki.html",target:"_blank",rel:"noopener noreferrer"},re=t("Joe Reynolds Audio"),se=r("p",null,[t("查找，"),r("code",null,"#"),t("后向匹配，"),r("code",null,"g*"),t("非精确匹配")],-1),te=r("h2",{id:"coc-typescript",tabindex:"-1"},[r("a",{class:"header-anchor",href:"#coc-typescript","aria-hidden":"true"},"#"),t(" Coc Typescript")],-1),ie={href:"https://www.vimfromscratch.com/articles/vim-for-javascript-and-react-in-2019/",target:"_blank",rel:"noopener noreferrer"},le=t("Vim for JavaScript and React in 2019 | Vim From Scratch"),de=i('<table><thead><tr><th>按键</th><th>功能</th></tr></thead><tbody><tr><td>gd</td><td>跳转定义</td></tr><tr><td>gy</td><td>跳转类型定义</td></tr><tr><td>gi</td><td>跳转实现</td></tr><tr><td>gr</td><td>跳转引用</td></tr><tr><td>leader ac</td><td>代码动作</td></tr><tr><td>leader a</td><td>可视模式，已选代码动作</td></tr><tr><td>leader qf</td><td>修复当前</td></tr><tr><td>K</td><td>查看文档</td></tr><tr><td>c-j</td><td>插入模式，snip 展开</td></tr></tbody></table><h2 id="coc-snippets" tabindex="-1"><a class="header-anchor" href="#coc-snippets" aria-hidden="true">#</a> Coc snippets</h2><p><code>c-j</code> 展开 <code>c-j``c-k</code> 上、下一个编辑点</p><p>查看当前 buffer 关联 <code>:CocList snippets</code></p><p>可以不安装 ultisnips</p><p>问题：编写 <code>useS</code> 可自动 import，但是对编辑点支持有限 解决：为了使用 virtual placeholder，改用 ultisnips + coc-ultisnips，不使用 coc-snippets</p><p>react snippets 位置 <code>~/.vim/plugged/vim-snippets/UltiSnips/javascript_react.snippets</code></p><h2 id="表格支持" tabindex="-1"><a class="header-anchor" href="#表格支持" aria-hidden="true">#</a> 表格支持</h2><p><code>junegunn/vim-easy-align</code></p><p><code>&lt;leader&gt;\\</code> Align GitHub-flavored Markdown tables</p>',10),oe=t("插件 "),ce={href:"https://github.com/dhruvasagar/vim-table-mode",target:"_blank",rel:"noopener noreferrer"},pe=t("dhruvasagar/vim-table-mode: VIM Table Mode for instant table creation."),he=i('<p>使用：</p><p><code>leader tm</code></p><p><code>||</code>输入分割线</p><p>csv 转换 <code>leadet tt</code></p><pre><code>```\nh,h,h\n||\na,a,a\n\na,b\n--\nc,d\ne,f\n```\n</code></pre><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>:[range]w !eslint --stdin\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="vim-task" tabindex="-1"><a class="header-anchor" href="#vim-task" aria-hidden="true">#</a> vim-task</h2><ul><li>简单专注，不用离开 Vim</li><li>快捷键<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>n/N 创建\nd(one) 切换完成\nx(cancel) 取消\na(rchive) 存档\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li></ul><h2 id="翻译" tabindex="-1"><a class="header-anchor" href="#翻译" aria-hidden="true">#</a> 翻译</h2><p><code>:Translate -w test</code></p>',10),ue={href:"https://zhuanlan.zhihu.com/p/58816186",target:"_blank",rel:"noopener noreferrer"},me=t("VIM 插件推荐 - 知乎"),be=r("h2",{id:"fugitive",tabindex:"-1"},[r("a",{class:"header-anchor",href:"#fugitive","aria-hidden":"true"},"#"),t(" fugitive")],-1),ge=t("为什么用，命令行 git blame 需要记住文件名、行数 Gmove 处理了 buffer，避免返回时修改原文件 完整实现 "),fe={href:"http://vimcasts.org/blog/2011/05/the-fugitive-series/",target:"_blank",rel:"noopener noreferrer"},ve=t("The Fugitive Series - a retrospective"),xe=i('<ul><li>md new todo<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>au Filetype markdown set com=s1:/*,mb:*,ex:*/,://,b:#,:%,:XCOMM,n:&gt;,b:-\\ \\[\\ \\]\nau Filetype markdown set formatoptions=tcroqln\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>会影响原功能<code>-</code>，暂时使用复制吧</li></ul><h2 id="字符包围" tabindex="-1"><a class="header-anchor" href="#字符包围" aria-hidden="true">#</a> 字符包围</h2><ul><li>单词两侧加空格 <code>ysiw&lt;space&gt;&lt;space&gt;</code> 分解：you surround inner word with space</li><li>y 是添加包围符的动作，注意空格打两个</li><li>拓展，如何删除两边空格，<code>ds&lt;space&gt;&lt;space&gt;</code></li><li>小写 s 表示不同行，同行使用大写 S</li><li>查看帮助：<code>h surr&lt;tab&gt;</code></li></ul><h2 id="ctrlsf" tabindex="-1"><a class="header-anchor" href="#ctrlsf" aria-hidden="true">#</a> ctrlsf</h2><p>搜索、查看、编辑</p><p>GLOB search <code>:CtrlSF -G *.pug svg</code> 在所有 pug 文件中，查找 svg</p><p>插件一般不支持工具的原生命令行参数，如果要用完整命令行，<code>Leaderf rg</code></p><h2 id="tmp" tabindex="-1"><a class="header-anchor" href="#tmp" aria-hidden="true">#</a> tmp</h2><ul><li><code>set spell</code> 拼写检查，比如记不清楚某个单词拼写，可以新开 buffer，然后 <code>z=</code>，<code>num &lt;cr&gt;</code></li></ul>',9);l.render=function(t,i){const l=e("OutboundLink");return a(),n(s,null,[d,o,r("p",null,[r("a",c,[p,r(l)])]),h,r("ul",null,[u,r("li",null,[m,r("a",b,[g,r(l)])])]),f,r("p",null,[v,r("a",x,[k,r(l)])]),w,r("p",null,[_,r("a",y,[j,r(l)])]),F,r("p",null,[r("a",z,[C,r(l)]),r("a",S,[T,r(l)])]),r("p",null,[r("a",M,[V,r(l)])]),G,I,r("p",null,[r("a",L,[O,r(l)])]),R,r("p",null,[r("a",W,[q,r(l)])]),A,r("p",null,[r("a",D,[N,r(l)])]),P,r("p",null,[r("a",U,[B,r(l)]),r("a",H,[J,r(l)]),r("a",E,[Z,r(l)]),r("a",K,[X,r(l)])]),Q,Y,r("ul",null,[$,ee,r("li",null,[ae,r("a",ne,[re,r(l)])])]),se,te,r("p",null,[r("a",ie,[le,r(l)])]),de,r("p",null,[oe,r("a",ce,[pe,r(l)])]),he,r("p",null,[r("a",ue,[me,r(l)])]),be,r("p",null,[ge,r("a",fe,[ve,r(l)])]),xe],64)};export default l;
