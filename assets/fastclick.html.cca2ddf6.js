import{_ as n,r as o,o as i,c,a as e,b as a,F as r,e as l,d as t}from"./app.b05e8536.js";const d={},h=l(`<h1 id="fast-click" tabindex="-1"><a class="header-anchor" href="#fast-click" aria-hidden="true">#</a> fast click</h1><h2 id="_300ms-\u5EF6\u65F6\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#_300ms-\u5EF6\u65F6\u95EE\u9898" aria-hidden="true">#</a> 300ms \u5EF6\u65F6\u95EE\u9898</h2><p>\u5728\u79FB\u52A8\u7AEF\u7684 web \u4E0A\u5B58\u5728\u8FD9\u6837\u4E00\u4E2A\u95EE\u9898\uFF1A\u4F60\u7ED9\u67D0\u4E2A\u5143\u7D20\u7ED1\u5B9A\u4E0A click \u4E8B\u4EF6\uFF0C\u5F53\u4F60\u70B9\u51FB\u8FD9\u4E2A\u5143\u7D20\u7684\u65F6\u5019\uFF0C\u4E8B\u4EF6\u5C06\u5728 300ms \u4E4B\u540E\u624D\u5F97\u4EE5\u6267\u884C</p><p>300ms \u6765\u6E90\uFF0C\u5728\u79FB\u52A8\u8BBE\u5907\u8BBF\u95EE PC \u9875\u9762\u9700\u8981\u653E\u5927\uFF0C\u4E3A\u4E86\u8BC6\u522B\u4E24\u6B21 tap \u7F29\u653E\u624B\u52BF\uFF0C\u800C\u7ED9\u70B9\u51FB\u4E8B\u4EF6\u589E\u52A0\u7684\u5EF6\u65F6\u3002</p><p>Android Chrome \u5BF9\u4E8E\u8BBE\u7F6E<code>width=device-width</code>\u5373\u4E13\u4E3A\u79FB\u52A8\u8BBE\u8BA1\u7684\u9875\u9762\uFF0C\u5219\u4E0D\u4F1A\u542F\u7528 300ms \u5EF6\u8FDF\u3002</p><h2 id="fastclick" tabindex="-1"><a class="header-anchor" href="#fastclick" aria-hidden="true">#</a> fastclick</h2><p>\u526F\u4F5C\u7528\u8F83\u591A</p><p>\u5728 chrome \u4E0A\u8C03\u8BD5\u7684\u65F6\u5019\uFF0C\u65E0\u6CD5\u70B9\u51FB\uFF0C\u89E3\u51B3\u662F\u5207\u5230 android \u8BBE\u5907\u6765\u8C03\u8BD5</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">import</span> FastClick <span class="token keyword">from</span> <span class="token string">&#39;fastclick&#39;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&#39;ontouchstart&#39;</span> <span class="token keyword">in</span> window<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  FastClick<span class="token punctuation">.</span><span class="token function">attach</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>body<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="hammer-time" tabindex="-1"><a class="header-anchor" href="#hammer-time" aria-hidden="true">#</a> hammer-time</h2><p>\u624B\u52BF\u63D2\u4EF6\uFF0C\u53EF\u517C\u7528\u4E8E\u66FF\u4EE3 fastclick</p>`,11),p={href:"https://github.com/youngwind/blog/issues/77",target:"_blank",rel:"noopener noreferrer"},u=t("\u5229\u7528 hammer.js \u89E3\u51B3 300ms \u5EF6\u65F6 \xB7 Issue #77 \xB7 youngwind/blog"),m={href:"https://github.com/vuejs/vue-touch/tree/next",target:"_blank",rel:"noopener noreferrer"},_=t("vuejs/vue-touch at next"),k=t(" \u5728 vue \u4E2D\uFF0C\u7528 v-touch \u6307\u4EE4\u66FF\u4EE3 v-click\uFF0C\u4EE5\u89E3\u51B3 300ms \u95EE\u9898"),f={id:"github-meckodo-vue-tap-vue-\u7684-tap-\u624B\u52BF\u63D2\u4EF6",tabindex:"-1"},g=e("a",{class:"header-anchor",href:"#github-meckodo-vue-tap-vue-\u7684-tap-\u624B\u52BF\u63D2\u4EF6","aria-hidden":"true"},"#",-1),b=t(),v={href:"https://github.com/MeCKodo/vue-tap",target:"_blank",rel:"noopener noreferrer"},w=t("GitHub - MeCKodo/vue-tap: vue \u7684 tap \u624B\u52BF\u63D2\u4EF6"),y=e("p",null,"\u53EF\u4EE5\u89C4\u907F fastclick \u8DDF vue click \u4E8B\u4EF6\u51B2\u7A81\u7684\u95EE\u9898.",-1),x=e("h2",{id:"docs",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#docs","aria-hidden":"true"},"#"),t(" docs")],-1),j=e("p",null,"Click is delayed on mobile devices for double tap A major problem with touch on mobile devices today is that the click event is generally delayed by ~300ms in order to recognize the double tap to zoom gesture without sending click events on double tap. The generally accepted solution is to use a fast-click library (such as FTLabs FastClick) which generates \u2018click\u2019 events on touchend. This has a number of disadvantages including:",-1),C=e("ul",null,[e("li",null,"Threaded scrolling is disabled"),e("li",null,"No way to get touch adjustment"),e("li",null,"No way to get tap supression (i.e. a tap while a fling is in progress should stop the fling, not send a click event). A Netflix engineer has raised this as a major problem for them")],-1),I=e("p",null,"We\u2019ve improved the situation in chrome Android by disabling the click delay for width=device-width sites, and there is ongoing debate for how we might improve it further.",-1),z=e("p",null,"IE10 solution The -ms-touch-action CSS property lets you specify explicitly whether double tap to zoom is enabled on given elements. When double tap to zoom is disabled, so is the click delay (eg. see discussion here). Unfortunately, anything relating to gestures is out of scope for the W3C standard version of pointer events. Luckily we were able to add \u2018manipulation\u2019 (which disables double-tap without disabling pinch-zoom) within these constraints.",-1),F={href:"https://docs.google.com/document/d/12-HPlSIF7-ISY8TQHtuQ3IqDi-isZVI0Yzv5zwl90VU/edit#heading=h.qwzwdq9jbvjb",target:"_blank",rel:"noopener noreferrer"},N=t("Issues with touch events - Google \u6587\u6863");function T(V,S){const s=o("ExternalLinkIcon");return i(),c(r,null,[h,e("p",null,[e("a",p,[u,a(s)])]),e("p",null,[e("a",m,[_,a(s)]),k]),e("h2",f,[g,b,e("a",v,[w,a(s)])]),y,x,j,C,I,z,e("p",null,[e("a",F,[N,a(s)])])],64)}var E=n(d,[["render",T],["__file","fastclick.html.vue"]]);export{E as default};
