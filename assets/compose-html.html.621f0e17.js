import{d as n}from"./app.31fc93bc.js";const s={},a=n('<h1 id="函数合成" tabindex="-1"><a class="header-anchor" href="#函数合成" aria-hidden="true">#</a> 函数合成</h1><p>优点：</p><ul><li>组合函数，高阶性</li><li>没有硬编码，灵活性</li><li>函数拆分</li></ul><p>缺点：</p><ul><li>性能</li><li>代码冗余</li><li>可读性</li></ul><h2 id="写法-1" tabindex="-1"><a class="header-anchor" href="#写法-1" aria-hidden="true">#</a> 写法 1</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>document.body.innerHTML = &#39;&lt;h1&gt;Hello&lt;/h1&gt;&#39;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="写法-2" tabindex="-1"><a class="header-anchor" href="#写法-2" aria-hidden="true">#</a> 写法 2</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">compose</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>fns</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token parameter">value</span> <span class="token operator">=&gt;</span> fns<span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">acc<span class="token punctuation">,</span> fn</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">fn</span><span class="token punctuation">(</span>acc<span class="token punctuation">)</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">write</span> <span class="token operator">=</span> <span class="token parameter">value</span> <span class="token operator">=&gt;</span> document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token function-variable function">createNode</span> <span class="token operator">=</span> <span class="token parameter">text</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;h1&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>text<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;h1&gt;</span><span class="token template-punctuation string">`</span></span>\n<span class="token punctuation">}</span>\n<span class="token keyword">const</span> <span class="token function-variable function">setMsg</span> <span class="token operator">=</span> <span class="token parameter">msg</span> <span class="token operator">=&gt;</span> msg\n\n<span class="token comment">// 新函数</span>\n<span class="token keyword">const</span> pringMsg <span class="token operator">=</span> <span class="token function">compose</span><span class="token punctuation">(</span>\n  write<span class="token punctuation">,</span>\n  createNode<span class="token punctuation">,</span>\n  setMsg\n<span class="token punctuation">)</span>\n\n<span class="token function">pringMsg</span><span class="token punctuation">(</span><span class="token string">&#39;Hello1&#39;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div>',9);s.render=function(n,s){return a};export default s;
