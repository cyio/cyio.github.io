import{_ as l,r as o,o as u,c as i,a as n,b as a,w as p,F as r,d as s,e as c}from"./app.2f4e902b.js";const k={},m=n("h1",{id:"\u5B57\u7B26\u4E32",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u5B57\u7B26\u4E32","aria-hidden":"true"},"#"),s(" \u5B57\u7B26\u4E32")],-1),d={class:"table-of-contents"},b=s("\u5224\u65AD\u5B57\u7B26\u4E32\u662F\u5426\u4EE5\u7ED9\u5B9A\u5B57\u7B26\u5F00\u5934"),g=s("\u5B9E\u73B0 repeat"),h=s("\u8F6C\u4E3A\u6570\u7EC4"),f=s("replace"),_=s("length"),x=c(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> stringValue <span class="token operator">=</span> <span class="token string">&quot;Hello World&quot;</span><span class="token punctuation">;</span>
stringValue<span class="token punctuation">.</span>length <span class="token comment">//  &quot;11&quot;</span>
stringValue<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">//  &quot;e&quot; \u5B57\u7B26</span>
stringValue<span class="token punctuation">.</span><span class="token function">charCodeAt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">//  &quot;101&quot; \u5B57\u7B26\u7F16\u7801</span>
stringValue<span class="token punctuation">.</span><span class="token function">fromCharCode</span><span class="token punctuation">(</span><span class="token number">101</span><span class="token punctuation">)</span> <span class="token comment">//  &quot;e&quot; \u4E0A\u4E2A\u65B9\u6CD5\u7684\u9006\u5411</span>
stringValue<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token comment">//  &quot;e&quot;</span>

<span class="token comment">// concat()\u7528\u4E8E\u62FC\u63A5\u5B57\u7B26\u4E32\uFF0C\u53EF\u63A5\u591A\u4E2A\u53C2\u6570\uFF0C\u4F46\u5728\u5B9E\u8DF5\u4E2D\u4F7F\u7528\u52A0\u53F7\u64CD\u4F5C\u7B26\uFF08+\uFF09\u66F4\u65B9\u4FBF</span>
stringValue<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">&quot; get&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;it!&quot;</span><span class="token punctuation">)</span>   

<span class="token comment">// \u628A\u5B57\u7B26\u4E32\u7F16\u7801\u4E3Abase64</span>
window<span class="token punctuation">.</span><span class="token function">btoa</span><span class="token punctuation">(</span><span class="token string">&#39;abc&#39;</span><span class="token punctuation">)</span> <span class="token comment">// &#39;YWJj&#39;  </span>

<span class="token comment">// \u6C49\u5B57\u9700\u8981\u5148\u8FDB\u884C UTF-8 \u7F16\u7801</span>
<span class="token function">btoa</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0xe6</span><span class="token punctuation">,</span> <span class="token number">0x88</span><span class="token punctuation">,</span> <span class="token number">0x91</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">code</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
  <span class="token keyword">return</span> String<span class="token punctuation">.</span><span class="token function">fromCharCode</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment">// &quot;5oiR&quot; \u6211</span>
<span class="token comment">// \u5728\u6D4F\u89C8\u5668\u4E2D\u6253\u5F00 data:text/html;charset=utf-8;base64,5oiR</span>

<span class="token keyword">function</span> <span class="token function">base64</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
  <span class="token keyword">return</span> <span class="token function">btoa</span><span class="token punctuation">(</span><span class="token function">encodeURI</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">%([0-9A-F]{2})</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span>
  <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">str<span class="token punctuation">,</span> h</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> String<span class="token punctuation">.</span><span class="token function">fromCharCode</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span>h<span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u5B57\u7B26\u4E32\u5339\u914D\u66FF\u6362</span>
<span class="token comment">// \u4EE5 jpe?g \u7B49\u7ED3\u5C3E\u7684 url</span>
<span class="token keyword">let</span> url <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(.*?).(jpe?g|png|webp)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">)</span>
<span class="token comment">// \u63D0\u53D6\u540E\u7F00</span>
<span class="token keyword">let</span> last <span class="token operator">=</span> url<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">.(jpe?g|png|webp)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">)</span>
<span class="token comment">// \u66FF\u6362\u6DFB\u52A0\u4E00\u4E9B\u5B57\u7B26</span>
<span class="token keyword">let</span> newUrl <span class="token operator">=</span> url<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>last<span class="token punctuation">,</span> i <span class="token operator">+</span> last<span class="token punctuation">)</span>

<span class="token comment">// \u7528\u53CD\u659C\u6760\u8F6C\u4E49\u5F15\u53F7</span>
<span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token string">&#39;\\&#39;Mike\\&#39;&#39;</span> <span class="token comment">// &quot;&#39;Mike&#39;&quot;</span>

<span class="token comment">// \u5185\u90E8\u7528\u5355\u5F15\u53F7\uFF0C\u5916\u90E8\u7528\u53CC\u5F15\u53F7</span>

<span class="token comment">// parseInt(str, radix) \u4E0D\u4EC5\u4EC5\u53D6\u6574\uFF0C\u4F1A\u628A\u7B2C\u4E00\u4E2A\u975E\u6570\u5B57\u53CA\u5F80\u540E\u90E8\u5206\u53BB\u6389</span>
<span class="token comment">// \u4F20\u5165\u503C\u4E0D\u662F\u5B57\u7B26\u4E32\u4F1A\u8F6C\u6362\uFF0C\u7B2C\u4E8C\u53C2\u6570\u662F\u57FA\u6570\uFF08\u8FDB\u5236\uFF0C\u603B\u662F\u660E\u786E\u752810\uFF0C\u6D4F\u89C8\u5668\u5B9E\u73B0\u4E0D\u4E00\u81F4,0\u5F00\u5934\u53EF\u80FD\u88AB\u5F53\u4F5C8\u8FDB\u5236\uFF09, \u8FD4\u56DE\u6570\u5B57</span>
<span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">&#39;1-2&#39;</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token comment">// 1</span>
<span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">&#39;1rem&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br></div></div><h2 id="\u5224\u65AD\u5B57\u7B26\u4E32\u662F\u5426\u4EE5\u7ED9\u5B9A\u5B57\u7B26\u5F00\u5934" tabindex="-1"><a class="header-anchor" href="#\u5224\u65AD\u5B57\u7B26\u4E32\u662F\u5426\u4EE5\u7ED9\u5B9A\u5B57\u7B26\u5F00\u5934" aria-hidden="true">#</a> \u5224\u65AD\u5B57\u7B26\u4E32\u662F\u5426\u4EE5\u7ED9\u5B9A\u5B57\u7B26\u5F00\u5934</h2><p>\u7528<code>indexOf</code>\u65B9\u6CD5\u5224\u65AD\uFF0C\u8FD4\u56DE\u4E3A 0\uFF0C\u5219\u662F\u5728\u5F00\u5934\uFF0C \u5982</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token string">&#39;github&#39;</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;git&#39;</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span> <span class="token comment">// true</span>
</code></pre></div><p>\u6709\u4E86ES6\uFF0C\u53EF\u4EE5\u8FD9\u6837</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token string">&#39;github&#39;</span><span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&#39;git&#39;</span><span class="token punctuation">)</span>
<span class="token string">&#39;github&#39;</span><span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&#39;hub&#39;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>  <span class="token comment">// \u53EF\u4EE5\u6307\u5B9A\u4F4D\u7F6E</span>
</code></pre></div><h2 id="\u5B9E\u73B0-repeat" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0-repeat" aria-hidden="true">#</a> \u5B9E\u73B0 repeat</h2><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// \u5B9E\u73B0\u4E00\uFF0C</span>
<span class="token comment">// \u7A7A + \u5B57\u7B26\u4E32\uFF0C\u8FD9\u91CC\u5B57\u7B26\u4E32\u4F5C\u4E3A\u4E86\u62FC\u63A5\u7B26</span>
<span class="token comment">// n \u4E2A\u62FC\u63A5\u7B26\uFF0C\u9700\u8981 n + 1 \u4E2A\u7A7A</span>
<span class="token class-name">String</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">repeatString1</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">Array</span><span class="token punctuation">(</span>n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;ni&#39;</span><span class="token punctuation">.</span><span class="token function">repeatString1</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u5B9E\u73B0\u4E8C fill \u4E0D\u4F20\u4F4D\u7F6E\u53C2\u6570\uFF0C\u586B\u5145\u5168\u90E8</span>
<span class="token class-name">String</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">repeatString2</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">Array</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;ni&#39;</span><span class="token punctuation">.</span><span class="token function">repeatString2</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="\u8F6C\u4E3A\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u8F6C\u4E3A\u6570\u7EC4" aria-hidden="true">#</a> \u8F6C\u4E3A\u6570\u7EC4</h2><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> string <span class="token operator">=</span> <span class="token string">&#39;word&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// Option 1</span>
string<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Option 2</span>
<span class="token punctuation">[</span><span class="token operator">...</span>string<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// Option 3</span>
Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Option 4</span>
Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> string<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Result:</span>
<span class="token comment">// [&#39;w&#39;, &#39;o&#39;, &#39;r&#39;, &#39;d&#39;]</span>
</code></pre></div><h2 id="replace" tabindex="-1"><a class="header-anchor" href="#replace" aria-hidden="true">#</a> replace</h2>`,11),v=n("code",null,"$1",-1),w=s(" \u4EC5\u7B2C\u4E8C\u53C2\u6570\u4E3A\u5B57\u7B26\u4E32\u65F6\u53EF\u7528 "),j={href:"https://www.jianshu.com/p/724e85c0941f",target:"_blank",rel:"noopener noreferrer"},y=s("js-replace\u7684\u9AD8\u9636\u7528\u6CD5,\u4F60\u77E5\u9053\u5417 - \u7B80\u4E66"),q=c(`<p>\u5F53 replaceValue \u662F\u5B57\u7B26\u4E32\u65F6\uFF0C\u7F8E\u5143\u7B26\u6709\u7279\u6B8A\u4F5C\u7528</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// $\` \u548C $&#39; \u5206\u522B\u8868\u793AsearchValue\u4E4B\u524D\u548C\u4E4B\u540E\u7684\u5185\u5BB9\`</span>
<span class="token comment">// $$ \u8F6C\u4E49\u81EA\u8EAB</span>

<span class="token string">&#39;firefox&#39;</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&#39;re&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;$\`&#39;</span><span class="token punctuation">)</span> <span class="token comment">// &quot;fififox&quot;</span>
</code></pre></div><h2 id="length" tabindex="-1"><a class="header-anchor" href="#length" aria-hidden="true">#</a> length</h2><p>\u6C49\u5B57\u53D6 length \u4E0D\u51C6\u786E</p><p>ES6 \u53EF\u7528<code>Array.from().length</code>\u89E3\u51B3</p>`,5),V={href:"https://zhuanlan.zhihu.com/p/536017344",target:"_blank",rel:"noopener noreferrer"},S=s("javascript\u8BED\u8A00\u4E2D\u7684\u5B57\u7B26\u7F16\u7801 - \u77E5\u4E4E");function C(A,I){const t=o("RouterLink"),e=o("ExternalLinkIcon");return u(),i(r,null,[m,n("nav",d,[n("ul",null,[n("li",null,[a(t,{to:"#\u5224\u65AD\u5B57\u7B26\u4E32\u662F\u5426\u4EE5\u7ED9\u5B9A\u5B57\u7B26\u5F00\u5934"},{default:p(()=>[b]),_:1})]),n("li",null,[a(t,{to:"#\u5B9E\u73B0-repeat"},{default:p(()=>[g]),_:1})]),n("li",null,[a(t,{to:"#\u8F6C\u4E3A\u6570\u7EC4"},{default:p(()=>[h]),_:1})]),n("li",null,[a(t,{to:"#replace"},{default:p(()=>[f]),_:1})]),n("li",null,[a(t,{to:"#length"},{default:p(()=>[_]),_:1})])])]),x,n("ul",null,[n("li",null,[v,w,n("a",j,[y,a(e)])])]),q,n("p",null,[n("a",V,[S,a(e)])])],64)}var R=l(k,[["render",C],["__file","string.html.vue"]]);export{R as default};
