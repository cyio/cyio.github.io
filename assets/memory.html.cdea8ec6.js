import{d as a}from"./app.31fc93bc.js";const e={},n=a('<h1 id="内存管理" tabindex="-1"><a class="header-anchor" href="#内存管理" aria-hidden="true">#</a> 内存管理</h1><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>    memory\n     /  \\\nstack     heap\nfn/local  obj/global\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>栈空间，用完回收，连续存储，先进后出</p><p>堆空间有老生代、新生代</p><p>新生代，空间小，速度快，但空间利用率低，Scanvage算法</p><p>老生代，新生代对象多次回收仍存活，空间大，标记清除和标记整理</p><p>如果一个值不再需要了，引用数却不为0，垃圾回收机制无法释放这块内存，从而导致内存泄漏。</p><p>如果你要往对象上添加数据，又不想干扰垃圾回收机制，就可以使用 WeakMap。</p>',8);e.render=function(a,e){return n};export default e;
