import{_ as l,r as e,o as u,c as r,a as n,b as a,w as t,F as i,d as s,e as c}from"./app.db3d8f78.js";const k={},b=n("h1",{id:"\u6392\u5E8F",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u6392\u5E8F","aria-hidden":"true"},"#"),s(" \u6392\u5E8F")],-1),m={class:"table-of-contents"},d=s("\u5192\u6CE1\u6392\u5E8F"),h=s("\u9009\u62E9\u6392\u5E8F"),f=s("\u5FEB\u901F\u6392\u5E8F\uFF08\u5FEB\u6392\uFF09"),g=s("\u63D2\u5165\u6392\u5E8F"),w=s("\u5FEB\u901F\u9009\u62E9"),y=s("\u5F52\u5E76\u6392\u5E8F"),_=c(`<h2 id="\u5192\u6CE1\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u5192\u6CE1\u6392\u5E8F" aria-hidden="true">#</a> \u5192\u6CE1\u6392\u5E8F</h2><ol><li>\u76F8\u90BB\u5143\u7D20\u7F6E\u6362\u4F4D\u7F6E\uFF0C\u4ECE\u5934\u5230\u5C3E</li><li>\u7136\u540E\u4ECE\u7B2C\u4E8C\u4E2A\u5143\u7D20\u5F00\u59CB\uFF0C\u91CD\u590D\u7B2C\u4E00\u6B65</li></ol><p>\u7A7A\u95F4\u590D\u6742\u5EA6 O(n^2)</p><p>\u4F18\u5316\uFF1A\u6709\u5E8F\u6570\u636E\u53EF\u4EE5\u6807\u8BB0\u5224\u65AD\uFF0C\u5C06\u65F6\u95F4\u964D\u5230 O(n)</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token comment">// 1 4 5 2 3</span>
  <span class="token comment">// 1 4 2 5 3</span>
  <span class="token comment">// 1 2 4 3 5</span>
  <span class="token comment">// 1 2 3 4 5</span>
<span class="token comment">// \u4E86\u89E3\u539F\u7406\u540E\u5982\u4F55\u601D\u8003\uFF0C\u4ECE\u5177\u4F53\u5230\u62BD\u8C61</span>
<span class="token comment">// \u5185\u90E8\u662F\u7F6E\u6362\u5FAA\u73AF\uFF0C\u5916\u90E8\u662F\u91CD\u590D\u5FAA\u73AF</span>
<span class="token comment">// \u5185\u5FAA\u73AF\uFF0C\u51CF\u6389\u5DF2\u7ECF\u6392\u597D\u7684\uFF0C\u5F53 i \u4E3A 1 \u65F6\uFF0Cj &lt; arr.length - 1</span>
<span class="token comment">// \u5C0F\u4E8E\u7B49\u4E8E\u4E0D\u52A8\uFF0C\u5927\u4E8E\u65F6\u7F6E\u6362</span>
<span class="token keyword">function</span> <span class="token function">bubbleSort</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> i<span class="token punctuation">,</span> j
  <span class="token keyword">let</span> n <span class="token operator">=</span> arr<span class="token punctuation">.</span>length
  <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u6CE8\u610F\u8FB9\u754C\u5904\u7406</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>j <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> tmp <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span>
        arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
        arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> tmp
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> arr
<span class="token punctuation">}</span>
<span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token function">bubbleSort</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>


<span class="token comment">// \u4F18\u5316</span>
<span class="token keyword">function</span> <span class="token function">bubbleSort</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> i<span class="token punctuation">,</span> j
  <span class="token keyword">let</span> n <span class="token operator">=</span> arr<span class="token punctuation">.</span>length
  <span class="token keyword">let</span> isSorted <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token comment">// flag</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u6CE8\u610F\u8FB9\u754C\u5904\u7406</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>j <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> tmp <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span>
        arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
        arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> tmp
        isSorted <span class="token operator">=</span> <span class="token boolean">false</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>isSorted<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">break</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> arr
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br></div></div><p>\u5B57\u7B26\u4E32\u6309\u957F\u5EA6\u6392\u5E8F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">function</span> <span class="token function">strSort</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// if (arr[i] &gt; arr[j]) {</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>length <span class="token operator">&gt;</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">let</span> tmp <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
          arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span>
          arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> tmp
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> arr
  <span class="token punctuation">}</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">strSort</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;abcd&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;abc&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;abd&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token comment">// expect: [&quot;a&quot;, &quot;ab&quot;, &quot;abc&quot;, &quot;abcd&quot;]</span>

  <span class="token comment">// \u5FEB\u6392 [...sort(left), mid, ...sort(right)]</span>
  <span class="token keyword">function</span> <span class="token function">strSort</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> arr

    <span class="token keyword">let</span> left <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">let</span> right <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">let</span> midIndex <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>
    <span class="token keyword">let</span> mid <span class="token operator">=</span> arr<span class="token punctuation">[</span>midIndex<span class="token punctuation">]</span>


    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> midIndex<span class="token punctuation">)</span> <span class="token keyword">continue</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>length <span class="token operator">&lt;</span> mid<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">//       if (arr[i] &gt; mid) {</span>
        left<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">(</span>
        right<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
      <span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token function">strSort</span><span class="token punctuation">(</span>left<span class="token punctuation">)</span><span class="token punctuation">,</span> mid<span class="token punctuation">,</span> <span class="token operator">...</span><span class="token function">strSort</span><span class="token punctuation">(</span>right<span class="token punctuation">)</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">strSort</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;abcd&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;abc&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;abd&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br></div></div><h2 id="\u9009\u62E9\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u9009\u62E9\u6392\u5E8F" aria-hidden="true">#</a> \u9009\u62E9\u6392\u5E8F</h2><p>\u9009\u62E9\u5143\u7D20\u7F6E\u6362\u4F4D\u7F6E</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5982\u4F55\u5728\u672A\u6392\u5E8F\u5143\u7D20\u4E2D\u627E\u5230\u6700\u5C0F\u503C</span>
<span class="token comment">// \u5916\u5FAA\u73AF\u7684 i \u8868\u793A\u5F53\u524D\u4F4D\u7F6E\uFF0Cmin \u8868\u793A\u6700\u5C0F\u503C\u7684\u4F4D\u7F6E</span>
<span class="token comment">// \u5185\u5FAA\u73AF\u53EA\u67E5\u627E\u6700\u5C0F\u503C\uFF0C\u5185\u5FAA\u73AF\u5B8C\u6210\u540E\u5982\u679C\u6700\u5C0F\u503C\u4F4D\u7F6E\u4E0E\u5F53\u524D\u4F4D\u7F6E\u4E0D\u540C\uFF0C\u5219\u8FDB\u884C\u7F6E\u6362</span>
<span class="token keyword">function</span> <span class="token function">selectionSort</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> selected<span class="token punctuation">,</span> tmp
  <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    selected <span class="token operator">=</span> i
    <span class="token keyword">for</span> <span class="token punctuation">(</span>j <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>selected<span class="token punctuation">]</span> <span class="token operator">&gt;</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        selected <span class="token operator">=</span> j
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">!==</span> selected<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      tmp <span class="token operator">=</span> arr<span class="token punctuation">[</span>selected<span class="token punctuation">]</span>
      arr<span class="token punctuation">[</span>selected<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
      arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> tmp
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> arr
<span class="token punctuation">}</span>
<span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token function">selectionSort</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h2 id="\u5FEB\u901F\u6392\u5E8F-\u5FEB\u6392" tabindex="-1"><a class="header-anchor" href="#\u5FEB\u901F\u6392\u5E8F-\u5FEB\u6392" aria-hidden="true">#</a> \u5FEB\u901F\u6392\u5E8F\uFF08\u5FEB\u6392\uFF09</h2><p>\u5FEB\u901F\u6392\u5E8F\u4F7F\u7528\u5206\u6CBB\u6CD5\uFF08Divide and conquer\uFF09\u7B56\u7565\u6765\u628A\u4E00\u4E2A\u5E8F\u5217\uFF08list\uFF09\u5206\u4E3A\u8F83\u5C0F\u548C\u8F83\u5927\u76842\u4E2A\u5B50\u5E8F\u5217\uFF0C\u7136\u540E\u9012\u5F52\u5730\u6392\u5E8F\u4E24\u4E2A\u5B50\u5E8F\u5217\u3002</p><ol><li>\u627E\u51FA\u57FA\u51C6\u503C</li><li>\u9012\u5F52\u5F62\u5F0F\uFF1A[...fn(left), pivot, ...fn(right)]</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5148\u8003\u8651\u4E3B\u8981\u529F\u80FD\uFF0C\u518D\u8003\u8651\u8FB9\u754C\u60C5\u51B5</span>
<span class="token comment">// \u6CE8\u610F\u6700\u540E\u6570\u7EC4\u5408\u5E76\u7528\u4E86\u9012\u5F52\uFF0C\u7ED3\u675F\u6761\u4EF6\u662F\u4F20\u5165\u7684\u6570\u7EC4\u53EA\u5269\u4E0B\u4E00\u4E2A\u503C</span>
<span class="token comment">// \u662F\u5426\u5047\u5B9A\u4E86\u6570\u7EC4\u6CA1\u6709\u91CD\u590D\u9879\uFF0C\u5982\u679C\u6709\u91CD\u590D\u9879\u5982\u4F55\u5904\u7406</span>
<span class="token comment">// \u65B9\u6CD51\uFF1A\u5C06 pivot \u4ECE\u4E2D\u95F4\u53D6\u51FA\uFF0C\u4E0E\u5269\u4F59\u6BD4\u8F83</span>
<span class="token comment">// \u65B9\u6CD52\uFF1A\u5C06 pivot \u4ECE\u5F00\u5934pop\uFF0C\u4E0E\u5269\u4F59\u6BD4\u8F83</span>
<span class="token keyword">function</span> <span class="token function">quickSort</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> arr

  <span class="token keyword">let</span> left <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">let</span> right <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token comment">// let pivot = arr[arr.length - 1]</span>
  <span class="token comment">// for (let i = 0; i &lt; arr.length - 1; i++) {</span>
  <span class="token comment">// \u6539\u8FDB\uFF0C\u4E0D\u8981\u4F9D\u8D56\u6700\u540E\u4E00\u4E2A\u503C\uFF0C\u6CE8\u610F pivot \u8868\u793A\u57FA\u51C6\u503C\uFF0C\u8FD8\u9700\u8981\u63D0\u524D\u7B97\u4E0B privotIndex</span>
  <span class="token keyword">let</span> pivotIndex <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>
  <span class="token comment">// \u8FD9\u91CC\u5207\u4E00\u4E2A\u6570\u51FA\u6765\u3002\u6570\u636E\u5C31\u4F1A\u51CF\u5C11\u3002\u5426\u5219\u50CF [1, 1] \u4F1A\u65E0\u9650\u5FAA\u73AF\u4E0B\u53BB</span>
  <span class="token keyword">let</span> pivot <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>pivotIndex<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token comment">// splice \u8FD4\u56DE\u7684\u662F\u6570\u7EC4</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;</span> pivot<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      left<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      right<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token function">quickSort</span><span class="token punctuation">(</span>left<span class="token punctuation">)</span><span class="token punctuation">,</span> pivot<span class="token punctuation">,</span> <span class="token operator">...</span><span class="token function">quickSort</span><span class="token punctuation">(</span>right<span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">85</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">63</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">,</span> <span class="token number">96</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">quickSort</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><h2 id="\u63D2\u5165\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u63D2\u5165\u6392\u5E8F" aria-hidden="true">#</a> \u63D2\u5165\u6392\u5E8F</h2><p>\u63CF\u8FF0\uFF1A</p><ol><li>\u5F80\u524D\u6570\u724C\uFF0C\u4E0D\u65AD\u6BD4\u8F83\u79FB\u52A8\u5143\u7D20\uFF0C\u627E\u5230\u6700\u7EC8\u63D2\u5165\u4F4D\u7F6E\u65F6\u63D2\u5165</li><li>\u4E0B\u4E00\u4E2A\u6570</li></ol><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// \u5C06\u503C\u5728\u6570\u7EC4\u524D\u63D2\u5165</span>
<span class="token comment">// \u79FB\u9664\u67D0\u4E2A\u4F4D\u7F6E\u7684\u503C</span>
<span class="token keyword">function</span> <span class="token function">insertionSort</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> j <span class="token operator">=</span> i
    <span class="token keyword">let</span> cur <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>j <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> arr<span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> cur<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>
      j<span class="token operator">--</span>
    <span class="token punctuation">}</span>
    arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> cur
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> arr
<span class="token punctuation">}</span>
<span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token function">insertionSort</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;abc&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;zfd&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;sad&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;eng&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
</code></pre></div>`,18),v={href:"https://www.mybj123.com/4925.html",target:"_blank",rel:"noopener noreferrer"},j=s("\u524D\u7AEF\u5F00\u53D1\u5FC5\u4F1A\u7684JS\u7B97\u6CD5\u4E4B\u63D2\u5165\u6392\u5E8F-\u7801\u4E91\u7B14\u8BB0"),x=n("h2",{id:"\u5FEB\u901F\u9009\u62E9",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u5FEB\u901F\u9009\u62E9","aria-hidden":"true"},"#"),s(" \u5FEB\u901F\u9009\u62E9")],-1),S=n("p",null,"\u5206\u533A\u51FD\u6570\uFF0C\u8FD4\u56DE index",-1),q=n("p",null,"\u53D1\u73B0\u5C0F\u4E8E k element\uFF0C\u4E0E\u5F53\u524D\u533A\u95F4\u4EA4\u6362",-1),I=n("p",null,"\u5FEB\u901F\u9009\u62E9\u4E00\u822C\u662F\u4EE5\u539F\u5730\u7B97\u6CD5\u7684\u65B9\u5F0F\u5B9E\u73B0\uFF0C\u9664\u4E86\u9009\u51FA\u7B2Ck\u5C0F\u7684\u5143\u7D20\uFF0C\u6570\u636E\u4E5F\u5F97\u5230\u4E86\u90E8\u5206\u5730\u6392\u5E8F\u3002",-1),E=n("div",{class:"language-text ext-text"},[n("pre",{class:"language-text"},[n("code",null,`i   1 3 5 9 4 6
t 5
        i   j           // 1 3 4 9 5 6
`)])],-1),L={href:"https://youtu.be/v-1EGgaTFuw?t=1221",target:"_blank",rel:"noopener noreferrer"},N=s("Quick Sort and Quick Select - YouTube"),V=s(" https://leetcode.cn/problems/kth-largest-element-in-an-array/solution/javascriptsi-chong-fang-shi-jie-topkwen-ti-by-user/"),z=n("h2",{id:"\u5F52\u5E76\u6392\u5E8F",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u5F52\u5E76\u6392\u5E8F","aria-hidden":"true"},"#"),s(" \u5F52\u5E76\u6392\u5E8F")],-1),B=n("div",{class:"language-text ext-text"},[n("pre",{class:"language-text"},[n("code",null,`\u9012\u63A8\u516C\u5F0F\uFF1A
merge_sort(p\u2026r) = merge(merge_sort(p\u2026q), merge_sort(q+1\u2026r))

\u7EC8\u6B62\u6761\u4EF6\uFF1A
p >= r \u4E0D\u7528\u518D\u7EE7\u7EED\u5206\u89E3
`)])],-1),F=n("ol",null,[n("li",null,"\u5206\u7EC4"),n("li",null,"\u5408\u5E76\uFF1A\u5982\u4F55\u5408\u5E76\u4E24\u4E2A\u6709\u5E8F\u6570\u7EC4\uFF08leetcode 88 \u662F\u8981\u6C42\u539F\u5730\u4FEE\u6539\uFF09")],-1),M={href:"https://zhuanlan.zhihu.com/p/95080265",target:"_blank",rel:"noopener noreferrer"},T=s("\u6392\u5E8F\u7B97\u6CD5\u4E4B\u2014\u2014\u5F52\u5E76\u6392\u5E8F\u548C\u5FEB\u901F\u6392\u5E8F - \u77E5\u4E4E"),C=c(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token parameter">left<span class="token punctuation">,</span> right</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span><span class="token punctuation">(</span>left<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> right<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>left<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> right<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>left<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>right<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> result<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span> right<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">mergeSort</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">&lt;=</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
  <span class="token keyword">var</span> middle <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> left <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> middle<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> right <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>middle<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> ret <span class="token operator">=</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token function">mergeSort</span><span class="token punctuation">(</span>left<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">mergeSort</span><span class="token punctuation">(</span>right<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ret<span class="token punctuation">)</span>
  <span class="token keyword">return</span> ret
<span class="token punctuation">}</span>

<span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">56</span><span class="token punctuation">,</span> <span class="token number">78</span><span class="token punctuation">,</span> <span class="token number">76</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">36</span><span class="token punctuation">]</span> 
<span class="token keyword">let</span> d <span class="token operator">=</span> <span class="token function">mergeSort</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div>`,1);function O(Q,R){const p=e("RouterLink"),o=e("ExternalLinkIcon");return u(),r(i,null,[b,n("nav",m,[n("ul",null,[n("li",null,[a(p,{to:"#\u5192\u6CE1\u6392\u5E8F"},{default:t(()=>[d]),_:1})]),n("li",null,[a(p,{to:"#\u9009\u62E9\u6392\u5E8F"},{default:t(()=>[h]),_:1})]),n("li",null,[a(p,{to:"#\u5FEB\u901F\u6392\u5E8F-\u5FEB\u6392"},{default:t(()=>[f]),_:1})]),n("li",null,[a(p,{to:"#\u63D2\u5165\u6392\u5E8F"},{default:t(()=>[g]),_:1})]),n("li",null,[a(p,{to:"#\u5FEB\u901F\u9009\u62E9"},{default:t(()=>[w]),_:1})]),n("li",null,[a(p,{to:"#\u5F52\u5E76\u6392\u5E8F"},{default:t(()=>[y]),_:1})])])]),_,n("p",null,[n("a",v,[j,a(o)])]),x,S,q,I,E,n("p",null,[n("a",L,[N,a(o)]),V]),z,B,F,n("p",null,[n("a",M,[T,a(o)])]),C],64)}var G=l(k,[["render",O],["__file","sort.html.vue"]]);export{G as default};
