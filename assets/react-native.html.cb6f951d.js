import{r as n,o as a,c as s,a as e,w as t,F as l,b as p,d as o}from"./app.09b8f80a.js";const i={},r=e("h1",{id:"react-native",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#react-native","aria-hidden":"true"},"#"),p(" React Native")],-1),c={class:"table-of-contents"},u=p("布局及样式"),d=p("学习官方 movie tutorial"),b=p("编译官方 UIexplorer"),h=p("andorid ide 模拟器"),k=p("全局变量"),m=p("iOS 模拟器"),g=p("android 下 lineHeight 贴底"),v=p("垂直居中"),f=p("存储"),x=p("FlatList"),w=p("手势"),y=p("ISSUES"),j=p("webview 不起作用"),_=p("路由导航问题"),S=p("antdesign"),T=p("html 渲染"),A=p("tabs/webview 高度适应"),R=p("map/迭代器中的 this"),N=p("迭代中的事件绑定"),I=p("npm 依赖定制"),D=p("react-native-video"),q=p("复制第三方库插件"),C=p("Warning: Cannot update during an existing state transition"),E=p("找不到 state 中的属性"),V=p("global 定义的全局变量在某些 js 文件中找不到，尽管打印 global 展开能看到"),O=p("如何动态改变 tab nav 的 scene"),P=p("在插件中打印"),L=p("UnhandledPromiseRejectionWarning: Unhandled promise rejection"),H=p("Raw Text must be wrapped in an explicit<Text>component · Issue #186 · GeekyAnts/NativeBase"),U=p("iOS"),M=p("安卓全屏实现"),W=p("升级 react-native"),B=p("codepush"),K=p("expo"),z=p("ios 真机调试"),$=p("CANNOT TRANSLATE guest DNS ip"),F=p("example 的 name 重复提示"),G=p("native 代码转换到 react"),J=p("模拟器没声音？"),Y=p("自己托管的视频文件在 iOS 下无法播放"),X=p("安装"),Q=p("linux 下为 android 模拟器设置打开 dev menu 快捷键"),Z=o('<h2 id="布局及样式" tabindex="-1"><a class="header-anchor" href="#布局及样式" aria-hidden="true">#</a> 布局及样式</h2><ul><li><p>默认就是<code>flex</code>，所以不需要<code>display:flex</code></p></li><li><p>最好不要在 render 里内联样式，因为会重复创建，而 StyleSheet.create 方法不会</p></li><li><p>在浏览器的开发者工具中调试只有 console 输出，以及在 source 项中断点调试 js 脚本。</p></li><li><p>在 Android 上使用 ProgressBar 替代 iOS 中的 ActivityIndicator</p></li><li><p>丢帧的出现</p><ul><li>iOS 设备提供了每秒 60 的帧率，这就留给了开发者和 UI 系统大约 16.67ms 来完成生成一张静态图片（帧）所需要的所有工作。如果在这分派的 16.67ms 之内没有能够完成这些工作，就会引发‘丢帧’的后果，使界面表现的不够流畅。</li><li>由 JavaScript 线程所控制，线程太忙时，出现卡帧。比如页面切换动画。</li></ul></li><li><p>载入中组件</p><ul><li>引入 DrawerLayoutAndroid, ProgressBarAndroid,</li><li>模板<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">&lt;</span>DrawerLayoutAndroid renderNavigationView<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token operator">&lt;</span>Text<span class="token operator">&gt;</span>React Native<span class="token operator">&lt;</span><span class="token operator">/</span>Text<span class="token operator">&gt;</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>\n  <span class="token operator">&lt;</span>ProgressBarAndroid <span class="token operator">/</span><span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>DrawerLayoutAndroid<span class="token operator">&gt;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li></ul></li><li><p>活动指示器 ActivityIndicator,</p></li><li><p>按钮组件</p><ul><li>引入 TouchableHighlight</li><li>模板</li><li>测试时可用 Button，写起来简单<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">&lt;</span>TouchableHighlight onPress<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>onPress<span class="token punctuation">}</span><span class="token operator">&gt;</span>\n  <span class="token operator">&lt;</span>Text style<span class="token operator">=</span><span class="token punctuation">{</span>styles<span class="token punctuation">.</span>instructions<span class="token punctuation">}</span><span class="token operator">&gt;</span>Touch<span class="token operator">&lt;</span><span class="token operator">/</span>Text<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>TouchableHighlight<span class="token operator">&gt;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li></ul></li><li><p>StyleSheet.create 方法里边属性名的引号可选，而属性值除数字外是必加的</p></li><li><p>查看编译后的源代码 http://localhost:8081/index.android.bundle</p></li><li><p>Toast 组件</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//ios</span>\n<span class="token function">alert</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token comment">//android</span>\n<span class="token keyword">var</span> <span class="token punctuation">{</span> ToastAndroid <span class="token punctuation">}</span> <span class="token operator">=</span> React\n\nToastAndroid<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token string">&#39;提示的信息&#39;</span><span class="token punctuation">,</span> ToastAndroid<span class="token punctuation">.</span><span class="token constant">SHORT</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></li><li><p>如何判断设备是 ios 还是 android，也可用第三方 device 插件</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token punctuation">{</span> Platform <span class="token punctuation">}</span> <span class="token operator">=</span> React\n\n<span class="token keyword">if</span> <span class="token punctuation">(</span>Platform<span class="token punctuation">.</span><span class="token constant">OS</span> <span class="token operator">===</span> <span class="token string">&#39;ios&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">//ios相关操作</span>\n<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n  <span class="token comment">//android相关操作</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></li><li><p>ScrollView</p><ul><li>属性</li></ul><p><code>keyboardShouldPersistTaps bool</code></p><p><code>false</code>: 点击输入框外部，键盘收回 <code>true</code>: 点击输入框外部，键盘不收回，只能通过点击键盘上的返回键收回。</p><p><code>keyboardDismissMode enum(&quot;none&quot;, &#39;interactive&#39;, &#39;on-drag&#39;)</code></p><ul><li>滑动 ScrollView 时，对键盘的影响</li></ul><p><code>none</code>: 滑动 ScrollView 对键盘没有影响 <code>interactive</code>: 向下滑动 ScrollView 时，可以使 ScrollView 收回（很奇怪的属性） <code>on-drag</code>: 拖动 ScrollView 时，键盘收回</p></li><li><p>样式写多个类用数组</p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>\n  <span class="token punctuation">;</span><span class="token punctuation">[</span>styles<span class="token punctuation">.</span>container<span class="token punctuation">,</span> <span class="token punctuation">{</span> backgroundColor<span class="token operator">:</span> <span class="token string">&#39;#ccc&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>动态样式</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> myColor <span class="token operator">=</span> <span class="token function">randomColor</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token operator">&lt;</span>View style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token function">jewelStyle</span><span class="token punctuation">(</span>myColor<span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span>\n\n<span class="token function-variable function">jewelStyle</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">myColor</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n   <span class="token keyword">return</span> <span class="token punctuation">{</span>\n     borderRadius<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n     background<span class="token operator">:</span> myColor<span class="token punctuation">,</span>\n   <span class="token punctuation">}</span>\n <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><ul><li>webstorm live 模板</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>\n\n<span class="token keyword">class</span> $className$ <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> $content$\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> $className$\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><ul><li>Image 图片组件</li></ul><p>resizeMode 有三种样式 contain, cover, stretch</p><p>通过嵌套来实现背景图片</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Image</span></span> <span class="token attr-name">source</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">\n  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Text</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Inside</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Text</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">\n</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Image</span></span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>props 和 state，一静一动</li><li>使用 dimensions.get(&quot;window&quot;)可以获取到当前 viewport 的大小，这个值可能会根据屏幕横竖来动态改变。</li><li>react native 里面没有 float 的用法，是根据 flex 来布局，alignItems 和 justifyContent 分别决定子元素的布局，而 flexDirection 决定子元素的排列方式垂直还是水平，flex:number 决定子元素所占的比例，alignSelf 决定元素本事的布局，子 view 会默认根据父 view 来 absolute，这里有个技巧，如果想让子 view 实现 100% 的效果可以设置 left：0 ,right :0,同理 height 可以用 top:0,bottom:0。</li><li>使用 text 的 numberOfLines 可以实现文本截取省略号，即 css 的 text-overflow 属性。</li><li>默认情况下如果元素超过了父元素，是不可以滚动的，必须在外部套一个<code>&lt;ScrollView&gt;</code>才可以。</li><li>drawable 目录，那个呢？ \\android\\app\\src\\main\\res\\drawable-hdpi\\</li></ul>',12),nn={href:"http://blog.csdn.net/sbsujjbcy/article/details/49981529",target:"_blank",rel:"noopener noreferrer"},an=p("Android React Native 加载图片资源的正确姿势 - 安卓弟的专栏 - 博客频道 - CSDN.NET"),sn=o('<div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">View</span></span>\n  <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span>\n    styles<span class="token punctuation">.</span>base<span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      width<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>width<span class="token punctuation">,</span>\n      height<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>width <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>aspectRatio\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span><span class="token punctuation">}</span></span>\n<span class="token punctuation">/&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>',1),en={href:"http://blog.csdn.net/sbsujjbcy/article/details/50017029",target:"_blank",rel:"noopener noreferrer"},tn=p("Andriod React Native 样式表中可用样式属性 - 安卓弟的专栏 - 博客频道 - CSDN.NET"),ln=o('<h2 id="学习官方-movie-tutorial" tabindex="-1"><a class="header-anchor" href="#学习官方-movie-tutorial" aria-hidden="true">#</a> 学习官方 movie tutorial</h2><ul><li>首先确定界面元素</li><li>确定布局和基础样式</li><li>用临时数据测试界面</li><li>编写 fetch 函数，获取 movie 数据</li><li>组件渲染后，执行 fetch</li><li>fetch 成功后，用 setState 方法赋值</li><li>初始化 movie</li><li>添加判断，movie 为 null 时，先载入 loading，然后渲染数据</li><li>加入 ListView 组件</li></ul><h2 id="编译官方-uiexplorer" tabindex="-1"><a class="header-anchor" href="#编译官方-uiexplorer" aria-hidden="true">#</a> 编译官方 UIexplorer</h2><p>https://github.com/facebook/react-native/tree/master/Examples/UIExplorer/js</p><ul><li><p>安装 Android NDK</p></li><li><p>在项目根目录下创建<code>local.properties</code>文件</p></li><li><p>运行如下命令（不需要进入 UIExplorer 目录）</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> react-native\n./gradlew :Examples:UIExplorer:android:app:installDebug\n./packager/packager.sh\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li><li><p>tint color 给图片的不透明区域着色，支持下载的图片</p></li><li><p>TouchableNativeFeedback Android 下原生的点击效果，目前只支持在一个 view 下嵌套 text</p></li></ul><p>开发过程中引入外部组件，需要重启 packager，报错提示就是这个意思。</p>',6),pn={href:"https://facebook.github.io/react-native/docs/signed-apk-android.html#content",target:"_blank",rel:"noopener noreferrer"},on=p("Generating Signed APK – React Native | A framework for building native apps using React"),rn=e("ul",null,[e("li",null,"父容器要求设置尺寸，否则子内容无法显示"),e("li",null,"flex 默认为列"),e("li",null,[p("省略写法 "),e("code",null,"onChangeText={(text) => this.setState({text})}")])],-1),cn=e("h3",{id:"andorid-ide-模拟器",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#andorid-ide-模拟器","aria-hidden":"true"},"#"),p(" andorid ide 模拟器")],-1),un={href:"https://my.oschina.net/u/2608182/blog/884004",target:"_blank",rel:"noopener noreferrer"},dn=p("关于在 Android SDK 中找不到 Android Support Library 的问题 - 帅得拖网速"),bn=o("<li><p>Intel x86 Emulator Accelerator 不兼容 linux</p></li><li><p>模拟器使用和真机差不多，设置地址端口，<code>ctrl - m</code>打开菜单，有时不灵，在命令行中运行，<code>adb shell input keyevent 82</code></p></li><li><p>命令行 列出 emulator -list-avds 启动 emulator @avd_name [ {-option [value]} … ] 有 bug，先进入目录 cd &quot;$(dirname &quot;$(which emulator)&quot;)&quot;</p></li><li><p>view 上不能设置 color fontSize</p></li><li><p>非原生组件才需要考虑固定定位问题</p></li><li><p>positon : &#39;absolute&#39;定位方式是相对于父级元素，不管父级是否具有 relative</p></li><li><p>顶栏左中右结构，标题居中由容器设置，两边用绝对定位</p></li>",7),hn=p("固定定位 "),kn={href:"http://stackoverflow.com/questions/29447715/react-native-fixed-footer",target:"_blank",rel:"noopener noreferrer"},mn=p("React Native fixed footer - Stack Overflow"),gn=e("li",null,[e("p",null,"解构")],-1),vn=o('<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">let</span> <span class="token punctuation">{</span> source<span class="token punctuation">,</span> storyIndex<span class="token punctuation">,</span> state<span class="token punctuation">,</span> onEnd <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>',1),fn=p("需要自己实现视频控制 "),xn={href:"https://medium.com/@cubbuk/video-player-with-controllers-using-react-native-72e35d7ab469",target:"_blank",rel:"noopener noreferrer"},wn=p("Video player with controllers using React Native – cubbuk – Medium"),yn={href:"https://github.com/inProgress-team/react-native-youtube",target:"_blank",rel:"noopener noreferrer"},jn=p("inProgress-team/react-native-youtube: A <YouTube/>\\ component for React Native."),_n=e("li",null,"加载视频时热更新可能会卡住，回到桌面，再打开一般就会好",-1),Sn=p("改端口涉及到 debug，需要改 AppDelegate.m，主项目最好别改，如果要修改参考 "),Tn={href:"https://differential.com/insights/intro-to-debugging-react-native-ios-and-android/",target:"_blank",rel:"noopener noreferrer"},An=p("Intro to Debugging React Native (iOS and Android) - Differential"),Rn=e("li",null,"注释，一般注释, 用 {} 包围",-1),Nn=o('<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>{/* code */}\n\n&quot; not work\nPlug &#39;scrooloose/nerdcommenter&#39;\nlet g:NERDCustomDelimiters = { &#39;javascript.jsx&#39;: { &#39;left&#39;: &#39;//&#39;, &#39;leftAlt&#39;: &#39;/*&#39;, &#39;rightAlt&#39;: &#39;*/&#39; } }\nlet NERD_javascript_alt_style=1\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="全局变量" tabindex="-1"><a class="header-anchor" href="#全局变量" aria-hidden="true">#</a> 全局变量</h2><p>使用 global，其类似 web 中的 window 例如</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>global<span class="token punctuation">.</span>userToken <span class="token operator">=</span> <span class="token string">&#39;***&#39;</span>\n\n<span class="token comment">//则在其他地方可以读取</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>userToken<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>如果需要持久化的存储，推荐使用 https://github.com/sunnylqm/react-native-storage</p><h2 id="ios-模拟器" tabindex="-1"><a class="header-anchor" href="#ios-模拟器" aria-hidden="true">#</a> iOS 模拟器</h2><p>打开后台　 Shift + Command + h * 2 返回桌面 Command + D 刷新 Command + R</p><p>确认 ss 代理不是全局</p><h2 id="android-下-lineheight-贴底" tabindex="-1"><a class="header-anchor" href="#android-下-lineheight-贴底" aria-hidden="true">#</a> android 下 lineHeight 贴底</h2><h2 id="垂直居中" tabindex="-1"><a class="header-anchor" href="#垂直居中" aria-hidden="true">#</a> 垂直居中</h2><p>给父容器<code>alignItems: &#39;center&#39;</code> android<code>textAlignVertical</code></p><p>image 没有 onPress，text 有 数组节点必须有 key，可随意给个值</p><h2 id="存储" tabindex="-1"><a class="header-anchor" href="#存储" aria-hidden="true">#</a> 存储</h2>',13),In={href:"https://github.com/WeHIT/wiki/issues/17",target:"_blank",rel:"noopener noreferrer"},Dn=p("Storage 封装 · Issue #17 · WeHIT/wiki"),qn=o('<ul><li>borderRadius 直接作用于里面有 Img 的元素不生效，需要加<code>overflow: &#39;hidden&#39;</code></li><li>百分比宽度<code>width: (Dimensions.get(&#39;window&#39;).width - 30) / 3</code></li></ul><h2 id="flatlist" tabindex="-1"><a class="header-anchor" href="#flatlist" aria-hidden="true">#</a> FlatList</h2><ul><li>性能更好，ListView 当数据多时会慢，而 FlatList 内存控制与数据大小基本无关</li><li>数据为数组即可，而 ListView 需要格式化数据</li><li>处理 key 与其它不同，<code>keyExtractor={(item, index) =&gt; item.id}</code></li></ul>',3),Cn={href:"https://github.com/cooperka/react-native-immutable-list-view#example-usage",target:"_blank",rel:"noopener noreferrer"},En=p("cooperka/react-native-immutable-list-view: A drop-in replacement for React Native's ListView."),Vn=o('<h2 id="手势" tabindex="-1"><a class="header-anchor" href="#手势" aria-hidden="true">#</a> 手势</h2><p>响应手势的基本单位是 responder 一个 React Native 应用中只能存在一个 responder 响应 touch 或者 move 手势 -&gt; grant（被激活） -&gt; move -&gt; release(结束事件) 手势类型，距离绝对值比较，区域判断</p><h2 id="issues" tabindex="-1"><a class="header-anchor" href="#issues" aria-hidden="true">#</a> ISSUES</h2><h3 id="webview-不起作用" tabindex="-1"><a class="header-anchor" href="#webview-不起作用" aria-hidden="true">#</a> webview 不起作用</h3><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">WebView</span></span>\n  <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n    backgroundColor<span class="token operator">:</span> <span class="token string">&#39;red&#39;</span><span class="token punctuation">,</span>\n    height<span class="token operator">:</span> <span class="token number">100</span>\n  <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n  <span class="token attr-name">source</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> html<span class="token operator">:</span> <span class="token string">&#39;&lt;h1&gt;Hello&lt;/h1&gt;&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n  <span class="token attr-name">scalesPageToFit</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">true</span><span class="token punctuation">}</span></span>\n<span class="token punctuation">/&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>可能跟插件容器有关 ScrollableTabView, 改用普通 view 没问题了</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> ScrollableTabView<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  DefaultTabBar\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react-native-scrollable-tab-view&#39;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="路由导航问题" tabindex="-1"><a class="header-anchor" href="#路由导航问题" aria-hidden="true">#</a> 路由导航问题</h3><p>旧代码　参见 HeaderBar.js 调用:</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">HeaderBar</span></span>\n  <span class="token comment">// leftIconAction={alert(&#39;debug&#39;)}</span>\n  <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>课程详情<span class="token punctuation">&quot;</span></span>\n  <span class="token attr-name">leftIcon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../images/back_dark.png&#39;</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n  <span class="token attr-name">rightIcon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../images/back_dark.png&#39;</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n<span class="token punctuation">/&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>原生不需要 react-router 刚开始用官方 react-navigation 高级用 react-native-router-flux</p><h3 id="antdesign" tabindex="-1"><a class="header-anchor" href="#antdesign" aria-hidden="true">#</a> antdesign</h3><h4 id="部分组件不成熟-增加复杂度" tabindex="-1"><a class="header-anchor" href="#部分组件不成熟-增加复杂度" aria-hidden="true">#</a> 部分组件不成熟，增加复杂度</h4><p>依然优先用原生 比如 tabs 每个 tab 是等高，而事实上不同 tab 内容不一样 发现不是 ant 的问题，原组件有问题</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>    &lt;Tabs defaultActiveKey=&quot;1&quot; onChange={onChange} onTabClick={onTabClick} activeTextColor=&#39;red&#39;&gt;\n      &lt;TabPane tab=&quot;简介&quot; key=&quot;1&quot; &gt;\n        &lt;View style={{ alignItems: &#39;center&#39;, justifyContent: &#39;center&#39; }}&gt;\n          &lt;Text&gt;{data.summury}&lt;/Text&gt;\n        &lt;/View&gt;\n      &lt;/TabPane&gt;\n      &lt;TabPane tab=&quot;概要&quot; key=&quot;2&quot;&gt;\n        &lt;View style={{ alignItems: &#39;center&#39;, justifyContent: &#39;center&#39; }}&gt;\n          &lt;HTMLView\n            value={data.post_content}\n            stylesheet={{ marginTop: 20 }}\n          /&gt;\n        &lt;/View&gt;\n      &lt;/TabPane&gt;\n      &lt;TabPane tab=&quot;提问&quot; key=&quot;3&quot;&gt;\n        &lt;View style={{ alignItems: &#39;center&#39;, justifyContent: &#39;center&#39; }}&gt;\n          &lt;Text&gt;选项卡三内容&lt;/Text&gt;\n        &lt;/View&gt;\n      &lt;/TabPane&gt;\n    &lt;/Tabs&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h4 id="定制麻烦-少用" tabindex="-1"><a class="header-anchor" href="#定制麻烦-少用" aria-hidden="true">#</a> 定制麻烦，少用</h4><p>定制主题色，需要 script，关注进展</p><p>https://github.com/ant-design/antd-mobile-samples/tree/master/rn-custom-ui</p><p>引用组件颜色定义文件，进行覆盖</p><p>react-native 结合 ant-Design- mobile, 发现有些组件样式不好调,... - 简书 http://www.jianshu.com/p/70b46e305914</p><ul><li>ant tabs 只能等高</li></ul><h3 id="html-渲染" tabindex="-1"><a class="header-anchor" href="#html-渲染" aria-hidden="true">#</a> html 渲染</h3><ol><li>webview</li><li>插件</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> HTMLView <span class="token keyword">from</span> <span class="token string">&#39;react-native-htmlview&#39;</span>\n\n<span class="token punctuation">;</span><span class="token operator">&lt;</span>HTMLView value<span class="token operator">=</span><span class="token punctuation">{</span>data<span class="token punctuation">.</span>post_content<span class="token punctuation">}</span> stylesheet<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginTop<span class="token operator">:</span> <span class="token number">20</span> <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="tabs-webview-高度适应" tabindex="-1"><a class="header-anchor" href="#tabs-webview-高度适应" aria-hidden="true">#</a> tabs/webview 高度适应</h3>',25),On={href:"https://github.com/skv-headless/react-native-scrollable-tab-view/issues/415",target:"_blank",rel:"noopener noreferrer"},Pn=p("Tab view always has the height equal to height of the highest tab · Issue #415 · skv-headless/react-native-scrollable-tab-view"),Ln=e("p",null,"tabs 考虑手动实现",-1),Hn=p("webview 解决 "),Un={href:"https://www.zhihu.com/question/42864534/answer/115386718",target:"_blank",rel:"noopener noreferrer"},Mn=p("react native 里 webview 怎么设置高度自适应？ - 知乎"),Wn={href:"https://github.com/iou90/react-native-autoheight-webview",target:"_blank",rel:"noopener noreferrer"},Bn=p("iou90/react-native-autoheight-webview: An auto height webview for React Native"),Kn=p("通信，更复杂 "),zn={href:"https://github.com/alinz/react-native-webview-bridge",target:"_blank",rel:"noopener noreferrer"},$n=p("alinz/react-native-webview-bridge: React Native Webview with Javascript Bridge"),Fn=o('<h3 id="map-迭代器中的-this" tabindex="-1"><a class="header-anchor" href="#map-迭代器中的-this" aria-hidden="true">#</a> map/迭代器中的 this</h3><p>你在 map 里使用 this，this 会指向当前的迭代对象，你需要在 map 里绑定“正确”的 this 注意是在 map 上绑，而不是里面，这样才能绑上外部环境也就是 class 中的 this bind 前可能不需要括号</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>ES6 形式不需要这么做？</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">s</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',5),Gn=p("详解三种方式 "),Jn={href:"http://stackoverflow.com/a/34938226/5657916",target:"_blank",rel:"noopener noreferrer"},Yn=p("reactjs - React onClick inside .map then change data in another sibling component - Stack Overflow"),Xn=o('<p>匿名函数，所以 context ? 优先用 ES6 箭头函数，ES5 则 forEach/map/filter 原生支持 context 作为可选参数，不需要 bind</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> o <span class="token operator">=</span> <span class="token punctuation">{</span>\n  s<span class="token operator">:</span> <span class="token string">&#39;hel&#39;</span><span class="token punctuation">,</span>\n  <span class="token function-variable function">f</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\no<span class="token punctuation">.</span><span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">[</span>\n    <span class="token comment">// 上面 this 指向定义函数的对象，而下面放到 map 中，this 发生变化，成了 window/global</span>\n    <span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;world&#39;</span><span class="token punctuation">)</span>\n  <span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>o<span class="token punctuation">.</span>f<span class="token punctuation">)</span>\n  <span class="token punctuation">[</span>\n    <span class="token comment">// 传入期望的 context，把 this 改回去</span>\n    <span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;world&#39;</span><span class="token punctuation">)</span>\n  <span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>o<span class="token punctuation">.</span>f<span class="token punctuation">,</span> o<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div>',2),Qn={href:"https://www.bennadel.com/blog/2876-you-don-t-need-to-use-bind-this-when-using-foreach-or-map-in-reactjs.htm",target:"_blank",rel:"noopener noreferrer"},Zn=p("You Don't Need To Use .bind( this ) When Using .forEach() Or .map() In ReactJS"),na=o('<h3 id="迭代中的事件绑定" tabindex="-1"><a class="header-anchor" href="#迭代中的事件绑定" aria-hidden="true">#</a> 迭代中的事件绑定</h3><p>渲染时全部执行完</p><h3 id="npm-依赖定制" tabindex="-1"><a class="header-anchor" href="#npm-依赖定制" aria-hidden="true">#</a> npm 依赖定制</h3><p>在 github 上 fork，并 clone 到本地 修改<code>package.json</code>中包的地址为自己的地址 删除<code>node_modules</code>原包文件夹，把自己的项目软链接过来</p><p>最后应该是使用<code>git submodule</code>来管理</p><h3 id="react-native-video" tabindex="-1"><a class="header-anchor" href="#react-native-video" aria-hidden="true">#</a> react-native-video</h3>',6),aa=p("全屏切换只支持 iOS，解决只能是自己写，通过布局隐藏和转屏间接实现 "),sa={href:"https://github.com/react-native-community/react-native-video/issues/392#issuecomment-262275119",target:"_blank",rel:"noopener noreferrer"},ea=p("How to use this.player.presentFullscreenPlayer() correctly. · Issue #392 · react-native-community/react-native-video"),ta=e("li",null,"参数传错，会导致无法播放",-1),la=e("li",null,"测试视频地址 http://pub.dotabocai.com/sample.mp4 http://vjs.zencdn.net/v/oceans.mp4",-1),pa=o('<h3 id="复制第三方库插件" tabindex="-1"><a class="header-anchor" href="#复制第三方库插件" aria-hidden="true">#</a> 复制第三方库插件</h3><ol><li>复制 render ，处理 props/functions</li><li>复制 style 替换变量，注意在另一个文件中</li></ol><h3 id="warning-cannot-update-during-an-existing-state-transition" tabindex="-1"><a class="header-anchor" href="#warning-cannot-update-during-an-existing-state-transition" aria-hidden="true">#</a> Warning: Cannot update during an existing state transition</h3><p><code>props</code>和<code>states</code>在渲染的时候更改</p>',4),oa=p("解决一: bind this 后放到 constuctor 解决二：改写成匿名函数 "),ia={href:"https://facebook.github.io/react/docs/react-component.html#setstate",target:"_blank",rel:"noopener noreferrer"},ra=p("React.Component - React"),ca=o('<h3 id="找不到-state-中的属性" tabindex="-1"><a class="header-anchor" href="#找不到-state-中的属性" aria-hidden="true">#</a> 找不到 state 中的属性</h3><p>如果修改路由内容，可能雪要重新打包</p><h3 id="global-定义的全局变量在某些-js-文件中找不到-尽管打印-global-展开能看到" tabindex="-1"><a class="header-anchor" href="#global-定义的全局变量在某些-js-文件中找不到-尽管打印-global-展开能看到" aria-hidden="true">#</a> global 定义的全局变量在某些 js 文件中找不到，尽管打印 global 展开能看到</h3><p>可能是环境不同，推荐定义一个文件处理，限制影响范围</p><h3 id="如何动态改变-tab-nav-的-scene" tabindex="-1"><a class="header-anchor" href="#如何动态改变-tab-nav-的-scene" aria-hidden="true">#</a> 如何动态改变 tab nav 的 scene</h3><p>转变思路，在页面组件中判断处理</p><h3 id="在插件中打印" tabindex="-1"><a class="header-anchor" href="#在插件中打印" aria-hidden="true">#</a> 在插件中打印</h3><p>用 warn ，log 和 error 不行</p><h3 id="unhandledpromiserejectionwarning-unhandled-promise-rejection" tabindex="-1"><a class="header-anchor" href="#unhandledpromiserejectionwarning-unhandled-promise-rejection" aria-hidden="true">#</a> UnhandledPromiseRejectionWarning: Unhandled promise rejection</h3>',9),ua=p("似乎是某些 RN 版本问题，无解 "),da={href:"https://github.com/mzabriskie/axios/issues/640#issuecomment-271588481",target:"_blank",rel:"noopener noreferrer"},ba=p("UnhandledPromiseRejectionWarning: Unhandled promise rejection · Issue #640 · mzabriskie/axios"),ha={id:"raw-text-must-be-wrapped-in-an-explicit-text-component-·-issue-186-·-geekyants-nativebase",tabindex:"-1"},ka=e("a",{class:"header-anchor",href:"#raw-text-must-be-wrapped-in-an-explicit-text-component-·-issue-186-·-geekyants-nativebase","aria-hidden":"true"},"#",-1),ma=p(),ga={href:"https://github.com/GeekyAnts/NativeBase/issues/186#issuecomment-268979620",target:"_blank",rel:"noopener noreferrer"},va=p("Raw Text must be wrapped in an explicit"),fa=e("code",null,"<Text>",-1),xa=p("component · Issue #186 · GeekyAnts/NativeBase"),wa=o('<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>\n  value <span class="token operator">&amp;&amp;</span> <span class="token operator">&lt;</span>Text<span class="token operator">&gt;</span>haha<span class="token operator">&lt;</span><span class="token operator">/</span>Text<span class="token operator">&gt;</span>j\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>这里要求布尔值，而<code>value</code>可能是字符串，会报错提示用<code>Text</code>包起来，用<code>!!</code>转换一下</p><h3 id="ios" tabindex="-1"><a class="header-anchor" href="#ios" aria-hidden="true">#</a> iOS</h3>',3),ya=e("li",null,[e("p",null,"ssh 是否在同一网段 开 共享-远程登陆，才能连接 ssh")],-1),ja=p("允许 http localhost "),_a={href:"http://bbs.reactnative.cn/topic/1668/fetch-api%25E6%258A%25A5%25E9%2594%2599-type-error-network-request-failed/5",target:"_blank",rel:"noopener noreferrer"},Sa=p("fetch API 报错，Type Error: Network request failed | 论坛 - React Native 中文社区"),Ta=e("li",null,[e("p",null,[p("文字颜色继承 比如"),e("code",null,"image > text"),p("，解决是给"),e("code",null,"image"),p("背景透明")])],-1),Aa={href:"https://github.com/facebook/react-native/issues/7964",target:"_blank",rel:"noopener noreferrer"},Ra=p("iOS Text background color inheritance · Issue #7964 · facebook/react-native"),Na=e("ul",null,[e("li",null,"数字键盘无收起，需点空白处收起")],-1),Ia=e("p",null,[e("code",null,"always"),p("，键盘不会自动收起，ScrollView 也不会捕捉点击事件，但子组件可以捕获。")],-1),Da=e("h3",{id:"安卓全屏实现",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#安卓全屏实现","aria-hidden":"true"},"#"),p(" 安卓全屏实现")],-1),qa=p("https://stackoverflow.com/a/43382231/5657916 "),Ca={href:"https://www.bountysource.com/issues/38797648-controls-support-for-ios-fullscreen-support-for-android",target:"_blank",rel:"noopener noreferrer"},Ea=p('"controls" support for ios & "fullscreen" support for Android -'),Va={href:"https://medium.com/@cubbuk/video-player-with-controllers-using-react-native-72e35d7ab469",target:"_blank",rel:"noopener noreferrer"},Oa=p("Video player with controllers using React Native – cubbuk – Medium"),Pa=e("h3",{id:"升级-react-native",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#升级-react-native","aria-hidden":"true"},"#"),p(" 升级 react-native")],-1),La={href:"https://facebook.github.io/react-native/docs/upgrading.html",target:"_blank",rel:"noopener noreferrer"},Ha=p("Upgrading to new React Native versions"),Ua=o('<h3 id="codepush" tabindex="-1"><a class="header-anchor" href="#codepush" aria-hidden="true">#</a> codepush</h3><p>不同平台命名不能一样</p><p>流程上，除非再装新依赖，否则就不需要再打包了</p><h3 id="expo" tabindex="-1"><a class="header-anchor" href="#expo" aria-hidden="true">#</a> expo</h3><p>构建时不要选这个，因为要用原生模块</p><p>expo 的优点是不限制开发平台，可以在它的容器里跑，但只能用它提供的东西，外加纯 JS 模块 直接 react-native init</p><h3 id="ios-真机调试" tabindex="-1"><a class="header-anchor" href="#ios-真机调试" aria-hidden="true">#</a> ios 真机调试</h3><p>需要在 xcode 中打开项目中的 ios 目录，目标机器选择真机，然后点 build</p><p>无法开启 remote debug <code>&quot;node_modules/react-native/Libraries/WebSocket/RCTWebSocketExecutor.m&quot;</code></p>',9),Ma=p("签名失败，新项目需要刷新 "),Wa={href:"https://www.jianshu.com/p/cbe59138fca6",target:"_blank",rel:"noopener noreferrer"},Ba=p("iOS 10 关于 Xcode 8 无证书真机测试的问题 - 简书"),Ka=o('<h3 id="cannot-translate-guest-dns-ip" tabindex="-1"><a class="header-anchor" href="#cannot-translate-guest-dns-ip" aria-hidden="true">#</a> CANNOT TRANSLATE guest DNS ip</h3><p>app 联网有问题</p><p>React native breaks emulator networking · Issue #13340 · facebook/react-native https://github.com/facebook/react-native/issues/13340</p><h3 id="example-的-name-重复提示" tabindex="-1"><a class="header-anchor" href="#example-的-name-重复提示" aria-hidden="true">#</a> example 的 name 重复提示</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>npm uninstall react-native-windows\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',5),za={href:"https://github.com/react-native-community/react-native-video/issues/567",target:"_blank",rel:"noopener noreferrer"},$a=p("Naming collisions (not urgent) · Issue #567 · react-native-community/react-native-video"),Fa=o('<ul><li>最快的方式就是找 example，找 demo，直接看作为结果的 code，因为文档有的没有，有的滞后</li><li>调整依赖后单独提交<code>package.json</code>和<code>yarn.lock</code></li><li><code>static</code>定义的是类的方法，只有类能调用，而普通方法是实例的方法只有类实例能调用。变量也一样。</li></ul><h3 id="native-代码转换到-react" tabindex="-1"><a class="header-anchor" href="#native-代码转换到-react" aria-hidden="true">#</a> native 代码转换到 react</h3><p>没了组件，只保留 react 的导入即可 去掉<code>StyleSheet.create</code>，内联样式就是个对象</p><h3 id="模拟器没声音" tabindex="-1"><a class="header-anchor" href="#模拟器没声音" aria-hidden="true">#</a> 模拟器没声音？</h3><p>菜单找下声音输出，根据需要指定下</p><h3 id="自己托管的视频文件在-ios-下无法播放" tabindex="-1"><a class="header-anchor" href="#自己托管的视频文件在-ios-下无法播放" aria-hidden="true">#</a> 自己托管的视频文件在 iOS 下无法播放</h3><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h2>',7),Ga={href:"http://reactnative.cn/docs/0.31/getting-started.html",target:"_blank",rel:"noopener noreferrer"},Ja=p("搭建开发环境 - react native 中文网"),Ya=p(" 注意文档对 Android IDE 的部分设置，可能过时"),Xa=o('<ul><li><p>安装环境依赖</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>choco install jdk8\nchoco install vcredist2013\nchoco install android-sdk\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li><li><p>安装 android-sdk 环境 版本不够，需要手动在 SDK Manager 中升级</p></li><li><p>SDK Manager</p></li></ul>',1),Qa=p("加速 "),Za={href:"http://android-mirror.bugly.qq.com:8080/include/usage.html",target:"_blank",rel:"noopener noreferrer"},ns=p("Android development tools mirror."),as=e("li",null,[e("p",null,"看不到 Extras/Android Support Library 需要更新后重新打开 SDK Manager，才能看到")],-1),ss=o('<ul><li><p>设置环境变量</p><ul><li>新增 ANDROID_SDK_HOME</li></ul><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>C:\\Users\\galaxy\\AppData\\Local\\Android\\android-sdk\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li>修改 path</li></ul><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>%ANDROID_SDK_HOME%\\tools;%ANDROID_SDK_HOME%\\platform-tools;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li><li><p>安装 react-native 命令行工具</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>npm install -g react-native-cli\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li><li><p>初始化项目，会自动装 react-native，所以要等一会</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>react-native init reactDemo\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li><li><p>SDK location not found 根据终端提示，在 android 目录下新建文件 local.properties，写入 <code>sdk.dir = C\\:\\\\Users\\\\galaxy\\\\AppData\\\\Local\\\\Android\\\\android-sdk</code></p><pre><code>就是sdk路径，注意格式\n</code></pre></li></ul><p>注意 linux 下上述方法可能不太行，改用另一种方法，在终端中运行<code>export ANDROID_HOME=/home/oaker/d/cyio/Android/Sdk</code></p><ul><li>虚拟机设置(Genymotion) <ul><li>开启自动刷新，在 dev 菜单中找</li></ul></li></ul>',3),es={href:"http://reactnative.cn/docs/next/running-on-device-android.html",target:"_blank",rel:"noopener noreferrer"},ts=p("在设备上运行 - react native 中文网"),ls=p(" 注意 Andorid5.0 上下有所区别"),ps=o('<p>build 命令 <code>react-native run-android</code> 运行上述命令后，有些系统不能启动实时编译服务，手动启动 <code>react-native start</code></p><h3 id="linux-下为-android-模拟器设置打开-dev-menu-快捷键" tabindex="-1"><a class="header-anchor" href="#linux-下为-android-模拟器设置打开-dev-menu-快捷键" aria-hidden="true">#</a> linux 下为 android 模拟器设置打开 dev menu 快捷键</h3><p>设置快捷键的关键是执行命令中需要 adb 的完整路径</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">which</span> adb\nadb-path shell input keyevent <span class="token number">82</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>',4);i.render=function(p,o){const i=n("RouterLink"),os=n("OutboundLink");return a(),s(l,null,[r,e("nav",c,[e("ul",null,[e("li",null,[e(i,{to:"#布局及样式"},{default:t((()=>[u])),_:1})]),e("li",null,[e(i,{to:"#学习官方-movie-tutorial"},{default:t((()=>[d])),_:1})]),e("li",null,[e(i,{to:"#编译官方-uiexplorer"},{default:t((()=>[b])),_:1}),e("ul",null,[e("li",null,[e(i,{to:"#andorid-ide-模拟器"},{default:t((()=>[h])),_:1})])])]),e("li",null,[e(i,{to:"#全局变量"},{default:t((()=>[k])),_:1})]),e("li",null,[e(i,{to:"#ios-模拟器"},{default:t((()=>[m])),_:1})]),e("li",null,[e(i,{to:"#android-下-lineheight-贴底"},{default:t((()=>[g])),_:1})]),e("li",null,[e(i,{to:"#垂直居中"},{default:t((()=>[v])),_:1})]),e("li",null,[e(i,{to:"#存储"},{default:t((()=>[f])),_:1})]),e("li",null,[e(i,{to:"#flatlist"},{default:t((()=>[x])),_:1})]),e("li",null,[e(i,{to:"#手势"},{default:t((()=>[w])),_:1})]),e("li",null,[e(i,{to:"#issues"},{default:t((()=>[y])),_:1}),e("ul",null,[e("li",null,[e(i,{to:"#webview-不起作用"},{default:t((()=>[j])),_:1})]),e("li",null,[e(i,{to:"#路由导航问题"},{default:t((()=>[_])),_:1})]),e("li",null,[e(i,{to:"#antdesign"},{default:t((()=>[S])),_:1})]),e("li",null,[e(i,{to:"#html-渲染"},{default:t((()=>[T])),_:1})]),e("li",null,[e(i,{to:"#tabs-webview-高度适应"},{default:t((()=>[A])),_:1})]),e("li",null,[e(i,{to:"#map-迭代器中的-this"},{default:t((()=>[R])),_:1})]),e("li",null,[e(i,{to:"#迭代中的事件绑定"},{default:t((()=>[N])),_:1})]),e("li",null,[e(i,{to:"#npm-依赖定制"},{default:t((()=>[I])),_:1})]),e("li",null,[e(i,{to:"#react-native-video"},{default:t((()=>[D])),_:1})]),e("li",null,[e(i,{to:"#复制第三方库插件"},{default:t((()=>[q])),_:1})]),e("li",null,[e(i,{to:"#warning-cannot-update-during-an-existing-state-transition"},{default:t((()=>[C])),_:1})]),e("li",null,[e(i,{to:"#找不到-state-中的属性"},{default:t((()=>[E])),_:1})]),e("li",null,[e(i,{to:"#global-定义的全局变量在某些-js-文件中找不到-尽管打印-global-展开能看到"},{default:t((()=>[V])),_:1})]),e("li",null,[e(i,{to:"#如何动态改变-tab-nav-的-scene"},{default:t((()=>[O])),_:1})]),e("li",null,[e(i,{to:"#在插件中打印"},{default:t((()=>[P])),_:1})]),e("li",null,[e(i,{to:"#unhandledpromiserejectionwarning-unhandled-promise-rejection"},{default:t((()=>[L])),_:1})]),e("li",null,[e(i,{to:"#raw-text-must-be-wrapped-in-an-explicit-text-component-·-issue-186-·-geekyants-nativebase"},{default:t((()=>[H])),_:1})]),e("li",null,[e(i,{to:"#ios"},{default:t((()=>[U])),_:1})]),e("li",null,[e(i,{to:"#安卓全屏实现"},{default:t((()=>[M])),_:1})]),e("li",null,[e(i,{to:"#升级-react-native"},{default:t((()=>[W])),_:1})]),e("li",null,[e(i,{to:"#codepush"},{default:t((()=>[B])),_:1})]),e("li",null,[e(i,{to:"#expo"},{default:t((()=>[K])),_:1})]),e("li",null,[e(i,{to:"#ios-真机调试"},{default:t((()=>[z])),_:1})]),e("li",null,[e(i,{to:"#cannot-translate-guest-dns-ip"},{default:t((()=>[$])),_:1})]),e("li",null,[e(i,{to:"#example-的-name-重复提示"},{default:t((()=>[F])),_:1})]),e("li",null,[e(i,{to:"#native-代码转换到-react"},{default:t((()=>[G])),_:1})]),e("li",null,[e(i,{to:"#模拟器没声音"},{default:t((()=>[J])),_:1})]),e("li",null,[e(i,{to:"#自己托管的视频文件在-ios-下无法播放"},{default:t((()=>[Y])),_:1})])])]),e("li",null,[e(i,{to:"#安装"},{default:t((()=>[X])),_:1}),e("ul",null,[e("li",null,[e(i,{to:"#linux-下为-android-模拟器设置打开-dev-menu-快捷键"},{default:t((()=>[Q])),_:1})])])])])]),Z,e("p",null,[e("a",nn,[an,e(os)])]),sn,e("p",null,[e("a",en,[tn,e(os)])]),ln,e("p",null,[e("a",pn,[on,e(os)])]),rn,cn,e("ul",null,[e("li",null,[e("p",null,[e("a",un,[dn,e(os)])])]),bn,e("li",null,[e("p",null,[hn,e("a",kn,[mn,e(os)])])]),gn]),vn,e("ul",null,[e("li",null,[fn,e("a",xn,[wn,e(os)]),e("a",yn,[jn,e(os)])]),_n,e("li",null,[Sn,e("a",Tn,[An,e(os)])]),Rn]),Nn,e("p",null,[e("a",In,[Dn,e(os)])]),qn,e("p",null,[e("a",Cn,[En,e(os)])]),Vn,e("p",null,[e("a",On,[Pn,e(os)])]),Ln,e("p",null,[Hn,e("a",Un,[Mn,e(os)])]),e("p",null,[e("a",Wn,[Bn,e(os)])]),e("p",null,[Kn,e("a",zn,[$n,e(os)])]),Fn,e("p",null,[Gn,e("a",Jn,[Yn,e(os)])]),Xn,e("p",null,[e("a",Qn,[Zn,e(os)])]),na,e("ul",null,[e("li",null,[aa,e("a",sa,[ea,e(os)])]),ta,la]),pa,e("p",null,[oa,e("a",ia,[ra,e(os)])]),ca,e("p",null,[ua,e("a",da,[ba,e(os)])]),e("h3",ha,[ka,ma,e("a",ga,[va,fa,xa,e(os)])]),wa,e("ul",null,[ya,e("li",null,[e("p",null,[ja,e("a",_a,[Sa,e(os)])])]),Ta]),e("p",null,[e("a",Aa,[Ra,e(os)])]),Na,Ia,Da,e("p",null,[qa,e("a",Ca,[Ea,e(os)]),e("a",Va,[Oa,e(os)])]),Pa,e("p",null,[e("a",La,[Ha,e(os)])]),Ua,e("p",null,[Ma,e("a",Wa,[Ba,e(os)])]),Ka,e("p",null,[e("a",za,[$a,e(os)])]),Fa,e("p",null,[e("a",Ga,[Ja,e(os)]),Ya]),Xa,e("ul",null,[e("li",null,[e("p",null,[Qa,e("a",Za,[ns,e(os)])])]),as]),ss,e("p",null,[e("a",es,[ts,e(os)]),ls]),ps],64)};export default i;
