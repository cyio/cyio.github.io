import{_ as l,r as c,o as u,c as i,a as n,b as a,w as p,F as r,d as s,e as o}from"./app.70fa3a6f.js";const k={},d=n("h1",{id:"promise",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#promise","aria-hidden":"true"},"#"),s(" Promise")],-1),m={class:"table-of-contents"},h=s("\u6982\u5FF5"),b=s("\u8003\u5BDF"),f=s("Promise.all"),w=s("async/await"),_=s("\u9519\u8BEF\u5904\u7406"),y=s("await each"),g=s("\u590D\u6742\u5F02\u6B65\u4F9D\u8D56\u573A\u666F"),v=s("race \u65B9\u6CD5"),j=s("finally"),x=s("\u5176\u4ED6"),P=o(`<p><img src="https://img.cnb.workers.dev/?url=http://ww2.sinaimg.cn/large/4e5d3ea7ly1h0hvynxp8oj20nz0b0767.jpg" alt="image.png"></p><blockquote><p>\u91C7\u7528 promise \u53EF\u4EE5\u89E3\u51B3\u5F02\u6B65\u7F16\u7A0B\u7684\u903B\u8F91\u5D4C\u5957\u95EE\u9898</p></blockquote><blockquote><p>Type: Object</p></blockquote><blockquote><p>cb =&gt; then chain</p></blockquote><h2 id="\u6982\u5FF5" tabindex="-1"><a class="header-anchor" href="#\u6982\u5FF5" aria-hidden="true">#</a> \u6982\u5FF5</h2><ul><li>\u5BF9\u5916\u63D0\u4F9B then \u51FD\u6570\uFF0C\u5BF9\u5185\u4E09\u4E2A\u72B6\u6001</li><li>\u72B6\u6001\uFF1Apending fulfilled rejected</li><li>\u72B6\u6001\u6D41\u8F6C\uFF1A\u4ECE pending \u5230\u540E\u4E24\u8005\uFF0C\u5230\u4E86\u540E\u4E24\u8005\u4E0D\u518D\u53D8</li><li>\u5FC5\u987B\u6709\u4E00\u4E2A then \u5F02\u6B65\u6267\u884C\u65B9\u6CD5\uFF0Cthen \u63A5\u53D7\u4E24\u4E2A\u53C2\u6570\u4E14\u5FC5\u987B\u8FD4\u56DE\u4E00\u4E2Apromise</li><li>\u503C\u7684\u4EE3\u7406</li></ul><h2 id="\u8003\u5BDF" tabindex="-1"><a class="header-anchor" href="#\u8003\u5BDF" aria-hidden="true">#</a> \u8003\u5BDF</h2><p>\u9898\u76EE\uFF1A\u95EE\u6570\u5B57\u6253\u5370\u987A\u5E8F</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
  <span class="token function">reject</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
  window<span class="token punctuation">.</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
  <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span>
<span class="token comment">// 2 6 5 3</span>
</code></pre></div><p>\u8003\u5BDF\uFF1A</p><ul><li>Promise \u6784\u9020\u51FD\u6570\u662F\u540C\u6B65\u6267\u884C\u7684\uFF08\u6545\u5C01\u88C5\u65F6\u7528 return\uFF09\uFF0Cthen/catch \u4E2D\u7684\u51FD\u6570\u662F\u5F02\u6B65\u6267\u884C\u7684\u3002</li><li>Promise \u80FD reject \u53C8 resolve \u5417\uFF0C\u5B9E\u9A8C\u4E0D\u80FD</li></ul>`,11),q={href:"https://liyaoli.com/2017-06-26/unhandled-promise-rejection.html",target:"_blank",rel:"noopener noreferrer"},E=s("unhandled promise rejection - \u4E0D\u5FD8\u521D\u5FC3\uFF0C\u4E0A\u4E0B\u6C42\u7D22\u3002"),L=o(`<h2 id="promise-all" tabindex="-1"><a class="header-anchor" href="#promise-all" aria-hidden="true">#</a> Promise.all</h2><p>\u4F7F\u7528\u573A\u666F\uFF1A\u6709\u5FC5\u7136\u5173\u8054\u7684\u63A5\u53E3</p><blockquote><p>\u5728\u4F7F\u7528 promise.all \u7684\u65F6\u5019\u8981\u6CE8\u610F\uFF1A\u4E1A\u52A1\u4E0A\u6CA1\u6709\u5FC5\u7136\u5173\u8054\u7684\u8BF7\u6C42\u6BD4\u5982\u8054\u52A8\u7EC4\u4EF6\u8FD9\u79CD\uFF0C\u4E00\u5B9A\u4E0D\u8981\u4F7F\u7528 promise.all\uFF0C\u5426\u5219\u67D0\u4E2A\u63A5\u53E3\u6709\u95EE\u9898\uFF0C\u4F1A\u5BFC\u81F4\u5176\u5B83\u6B63\u5E38\u7684\u63A5\u53E3\u4E5F\u62FF\u4E0D\u5230\u6570\u636E</p></blockquote><p>\u5B9E\u73B0\uFF1Apromise + all resolve count</p><p>\u66FF\u4EE3\u65B9\u6848\uFF1A</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">let</span> aReady <span class="token operator">=</span> <span class="token boolean">false</span>
<span class="token keyword">let</span> bReady <span class="token operator">=</span> <span class="token boolean">false</span>

<span class="token keyword">function</span> <span class="token function">aCB</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>bReady<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">do</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">bCB</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>aReady<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">do</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="async-await" tabindex="-1"><a class="header-anchor" href="#async-await" aria-hidden="true">#</a> async/await</h2><blockquote><p>Sugar around a generator that yields promises wrapped in a function that calls spawn to consume and chain those promises.</p></blockquote><ul><li>async function \u9690\u5F0F\u8FD4\u56DE Promise\uFF0C\u663E\u5F0F return \u7684\u5185\u5BB9\u4F1A\u5305\u88F9\u4E8E resolve\uFF0C\u5728 then \u4E2D\u53EF\u4EE5\u53D6\u5230</li><li>async \u662F Generator \u7684\u8BED\u6CD5\u7CD6\u548C\u6539\u8FDB</li></ul>`,9),A={href:"https://tc39.es/ecmascript-asyncawait/",target:"_blank",rel:"noopener noreferrer"},F=s("\u6807\u51C6 Async Functions"),N=s(" \u641C\u7D22 sugar"),I=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> x <span class="token operator">+</span> y
<span class="token punctuation">}</span>

<span class="token function">add</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">result</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token comment">// 5</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><ul><li>await \u540E\u9762\u63A5 Promise\uFF0C\u5982\u679C\u4E0D\u662F\u4F1A\u8F6C\u4E3A Promise.resolve(value)</li><li>await \u53EA\u80FD\u4E0E async \u914D\u5408\u4F7F\u7528</li></ul><p>\u65E7\u7684\u5199\u6CD5\uFF0C\u540C\u6B65\u5F02\u6B65\u4EE3\u7801\u6DF7\u5728\u4E00\u8D77\u65F6\uFF0C\u9700\u8981\u5355\u72EC\u505A\u9519\u8BEF\u5904\u7406 \u7528 async/await \u53EA\u9700\u8981\u5728\u5916\u9762\u5904\u7406\u4E00\u6B21</p><div class="language-javascript ext-js"><pre class="language-javascript"><code>router<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/user/:id&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getUserFromDb</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> req<span class="token punctuation">.</span>params<span class="token punctuation">.</span>id <span class="token punctuation">}</span><span class="token punctuation">)</span>
    res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//this will eventually be handled by your error handling middleware</span>
    <span class="token function">next</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div>`,4),U={href:"https://medium.com/@Abazhenov/using-async-await-in-express-with-node-8-b8af872c0016",target:"_blank",rel:"noopener noreferrer"},B=s("Using Async Await in Express with Node 9 \u2013 Alex Bazhenov \u2013 Medium"),C=o(`<h3 id="\u9519\u8BEF\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#\u9519\u8BEF\u5904\u7406" aria-hidden="true">#</a> \u9519\u8BEF\u5904\u7406</h3><ol><li>\u4E00\u822C\u662F\u5728 await \u5916\u9762\u5199 try-catch</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">try</span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Here, \`error\` would be an \`Error\` (with stack trace, etc.).</span>
  <span class="token comment">// Whereas if you used \`throw 400\`, it would just be \`400\`.</span>
  <span class="token comment">// throw new Error(400);</span>
  <span class="token comment">// throw 400; no stack trace info</span>
<span class="token punctuation">}</span>

<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#btn&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getUser</span><span class="token punctuation">(</span><span class="token string">&#39;tylermcginnis&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> weather <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getWeather</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span>location<span class="token punctuation">)</span>

    <span class="token function">updateUI</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      user<span class="token punctuation">,</span>
      weather
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">showError</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><ol start="2"><li>rejection \u4F1A\u5411\u4E0A\u629B\uFF0C\u5728\u4E0A\u5C42 catch</li></ol><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">then</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// resolve(0)</span>
      <span class="token function">reject</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> r <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span> <span class="token comment">// \u4E0D\u4F1A\u6267\u884C</span>
  <span class="token comment">// try{</span>
  <span class="token comment">// let r = await get()</span>
  <span class="token comment">// console.log(r)</span>
  <span class="token comment">// }catch(e) {</span>
  <span class="token comment">// console.error(e)</span>
  <span class="token comment">// }</span>
<span class="token punctuation">}</span>
<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">e</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;error: &#39;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre></div>`,5),R={href:"https://javascript.info/async-await",target:"_blank",rel:"noopener noreferrer"},S=s("Async/await"),T=n("h3",{id:"await-each",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#await-each","aria-hidden":"true"},"#"),s(" await each")],-1),V=n("li",null,"for ... of \u53EF\u4EE5\uFF0CforEach \u4E0D\u884C\uFF0C\u4F1A\u5148\u6253\u5370 nums",-1),W=n("li",null,"\u6309\u5E8F\u8BF7\u6C42\u53EF\u4EE5\u7528 for-await-of",-1),O=n("li",null,"\u5E76\u884C\u8BF7\u6C42\u53EF\u4EE5\u7528 await Promise.all([])",-1),z=s("\u9700\u8981 async \u914D\u5408\uFF0C\u53EF\u4EE5"),H=n("code",null,"(async function(){})()",-1),M={href:"https://stackoverflow.com/questions/37576685/using-async-await-with-a-foreach-loop",target:"_blank",rel:"noopener noreferrer"},D=s("javascript - Using async/await with a forEach loop - Stack Overflow"),G=o(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token parameter">ms <span class="token operator">=</span> <span class="token number">0</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> ms<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">printNums</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> nums <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span>

  <span class="token comment">// for (let num of nums) {</span>
  nums<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token parameter">num</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token comment">// }</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">printNums</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// promise.all \u548C map</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">printFiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> files <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getFilePaths</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>
    files<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token parameter">file</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> contents <span class="token operator">=</span> <span class="token keyword">await</span> fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> <span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>contents<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div>`,1),J={href:"https://developers.google.com/web/fundamentals/primers/promises#javascript_exceptions_and_promises",target:"_blank",rel:"noopener noreferrer"},X=s("JavaScript Promises: an Introduction \xA0|\xA0 Web Fundamentals \xA0|\xA0 Google Developers"),Z=o(`<h2 id="\u590D\u6742\u5F02\u6B65\u4F9D\u8D56\u573A\u666F" tabindex="-1"><a class="header-anchor" href="#\u590D\u6742\u5F02\u6B65\u4F9D\u8D56\u573A\u666F" aria-hidden="true">#</a> \u590D\u6742\u5F02\u6B65\u4F9D\u8D56\u573A\u666F</h2><div class="language-javascript ext-js"><pre class="language-javascript"><code>  <span class="token keyword">let</span> finishLoading <span class="token comment">// resolve fn</span>
  <span class="token keyword">const</span> ready <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> finishLoading <span class="token operator">=</span> resolve<span class="token punctuation">)</span>

  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">finishLoading</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u53EF\u80FD\u5728\u67D0\u4E9B\u6570\u636E\u4F9D\u8D56\u8BF7\u6C42\u5B8C\u6210\u540E\u8C03\u7528</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span>

  ready<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;ready in future&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre></div><p>\u7B49\u5F85 state \u66F4\u65B0\u7684\u5C01\u88C5</p><div class="language-javascript ext-js"><pre class="language-javascript"><code>  <span class="token keyword">async</span> <span class="token function">forceStateUpdate</span> <span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span>state<span class="token punctuation">,</span> resolve<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
</code></pre></div><h2 id="race-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#race-\u65B9\u6CD5" aria-hidden="true">#</a> race \u65B9\u6CD5</h2><p>\u517C\u5BB9\u6027\uFF1Achrome 32+ \u4E0D\u652F\u6301 IE10</p><h2 id="finally" tabindex="-1"><a class="header-anchor" href="#finally" aria-hidden="true">#</a> finally</h2><p>\u4E0D\u652F\u6301\u4EFB\u4F55\u5165\u53C2</p><p>Chrome 63+</p><h2 id="\u5176\u4ED6" tabindex="-1"><a class="header-anchor" href="#\u5176\u4ED6" aria-hidden="true">#</a> \u5176\u4ED6</h2><p>\u5F02\u5E38\uFF1AUncaught (in promise) catch \u7684\u8FC7\u53BB\u65F6\uFF0C\u5728\u5C3E\u90E8 catch \u5373\u53EF</p>`,11),Y={href:"https://github.com/frontend9/fe9-interview/issues/14",target:"_blank",rel:"noopener noreferrer"},$=s("\u4ECA\u65E5\u5934\u6761: \u4ECB\u7ECD\u4E0BPromise\uFF0C\u5185\u90E8\u5B9E\u73B0(\u4E00\u9762) \xB7 Issue #14 \xB7 frontend9/fe9-interview"),K={href:"https://mp.weixin.qq.com/s/WOPY0OCJX8upEcMHm6F5Xw",target:"_blank",rel:"noopener noreferrer"},Q=s("\u9AD8\u7EA7\u5F02\u6B65\u6A21\u5F0F - Promise \u5355\u4F8B"),nn={href:"https://mp.weixin.qq.com/s/-NIAl9MZ1VaAZWLTL4H7LA",target:"_blank",rel:"noopener noreferrer"},sn=s("\u9AD8\u7EA7 Promise \u6A21\u5F0F - Promise\u7F13\u5B58"),an=n("p",null,"\u8FD4\u56DE Promise\uFF0C\u800C\u975E await \u7684\u7ED3\u679C",-1),tn=n("p",null,"lodash memory \u7B80\u5316\u4F7F\u7528",-1);function pn(en,on){const t=c("RouterLink"),e=c("ExternalLinkIcon");return u(),i(r,null,[d,n("nav",m,[n("ul",null,[n("li",null,[a(t,{to:"#\u6982\u5FF5"},{default:p(()=>[h]),_:1})]),n("li",null,[a(t,{to:"#\u8003\u5BDF"},{default:p(()=>[b]),_:1})]),n("li",null,[a(t,{to:"#promise-all"},{default:p(()=>[f]),_:1})]),n("li",null,[a(t,{to:"#async-await"},{default:p(()=>[w]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#\u9519\u8BEF\u5904\u7406"},{default:p(()=>[_]),_:1})]),n("li",null,[a(t,{to:"#await-each"},{default:p(()=>[y]),_:1})])])]),n("li",null,[a(t,{to:"#\u590D\u6742\u5F02\u6B65\u4F9D\u8D56\u573A\u666F"},{default:p(()=>[g]),_:1})]),n("li",null,[a(t,{to:"#race-\u65B9\u6CD5"},{default:p(()=>[v]),_:1})]),n("li",null,[a(t,{to:"#finally"},{default:p(()=>[j]),_:1})]),n("li",null,[a(t,{to:"#\u5176\u4ED6"},{default:p(()=>[x]),_:1})])])]),P,n("p",null,[n("a",q,[E,a(e)])]),L,n("p",null,[n("a",A,[F,a(e)]),N]),I,n("p",null,[n("a",U,[B,a(e)])]),C,n("p",null,[n("a",R,[S,a(e)])]),T,n("ul",null,[V,W,O,n("li",null,[z,H,n("a",M,[D,a(e)])])]),G,n("p",null,[n("a",J,[X,a(e)])]),Z,n("p",null,[n("a",Y,[$,a(e)]),n("a",K,[Q,a(e)]),n("a",nn,[sn,a(e)])]),an,tn],64)}var ln=l(k,[["render",pn],["__file","promise.html.vue"]]);export{ln as default};
