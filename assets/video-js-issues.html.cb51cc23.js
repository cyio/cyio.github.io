import{r as n,o as s,c as a,a as e,F as t,d as p,b as o}from"./app.09b8f80a.js";const c={},i=p('<h1 id="issues" tabindex="-1"><a class="header-anchor" href="#issues" aria-hidden="true">#</a> ISSUES</h1><h2 id="播放器按钮设置-fastclick-例外" tabindex="-1"><a class="header-anchor" href="#播放器按钮设置-fastclick-例外" aria-hidden="true">#</a> 播放器按钮设置 fastclick 例外</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> buttons <span class="token operator">=</span> window<span class="token punctuation">.</span>document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">&#39;.vjs-control-bar&gt;button&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setNeedsClick</span><span class="token punctuation">(</span>buttons<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="ios-下-currenttime-方法-需特殊处理才起作用-要先监听-loadedmetadata-事件" tabindex="-1"><a class="header-anchor" href="#ios-下-currenttime-方法-需特殊处理才起作用-要先监听-loadedmetadata-事件" aria-hidden="true">#</a> iOS 下 currentTime 方法，需特殊处理才起作用，要先监听 loadedmetadata 事件</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> ctime <span class="token operator">=</span> Storage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&#39;position-&#39;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>id<span class="token punctuation">)</span> <span class="token comment">// 读取保存的播放位置</span>\n\n<span class="token comment">// iOS下 currentTime 方法，需特殊处理才起作用，要先监听 loadedmetadata 事件</span>\n<span class="token keyword">let</span> v <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">&#39;video&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>\nv<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;loadedmetadata&#39;</span><span class="token punctuation">,</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>ctime<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>videoPlayer<span class="token punctuation">.</span>player<span class="token punctuation">.</span><span class="token function">currentTime</span><span class="token punctuation">(</span>ctime<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>videoPlayer<span class="token punctuation">.</span>player<span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 播放</span>\n\n<span class="token comment">// 注意，player 不能写成计算属性，也不要写成const，可能会被缓存，导致切数据时指向还是旧的player</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="异步加载脚本情况下显示-video-原生界面问题" tabindex="-1"><a class="header-anchor" href="#异步加载脚本情况下显示-video-原生界面问题" aria-hidden="true">#</a> 异步加载脚本情况下显示 video 原生界面问题</h2><p>等 videojs 初始化后，再显示 dom</p><h2 id="页面失去响应-白屏" tabindex="-1"><a class="header-anchor" href="#页面失去响应-白屏" aria-hidden="true">#</a> 页面失去响应（白屏）</h2><p>问题表现：当页面在播放中，转入后台一段时间，再切回页面会白屏，需要长达 10 s 页面才能恢复可交互</p><ol><li>CPU 用量性能分析，与老页面对比</li><li>逐步停用后台任务、如定时器，排除业务代码所致</li><li>隔离 video demo 中稳定复现</li><li>查官方 issues</li><li>源码解决方式 加开关，一次只能运行一个任务</li></ol><p>原因：https://github.com/videojs/video.js/issues/5937#issuecomment-539442030</p><p>setInterval 在后台一直执行，不断添加 rAF 回调，页面进入后台，rAF 只是暂停，并没有取消。当页面恢复前台时积累了大量待执行 rAF 回调，导致 CPU 飙升</p><p>收获：</p><ul><li>CPU 分析时，节流选低端设备，问题更明显</li><li>恢复时结合 rAf 获取对应时刻动画状态，给用户一直在播放的感觉 https://www.zhihu.com/question/64422733/answer/222075042</li></ul>',14),l={href:"https://github.com/videojs/video.js/issues/5937",target:"_blank",rel:"noopener noreferrer"},r=o("High CPU usage after the player stays in background for a while · Issue #5937 · videojs/video.js"),u={href:"https://videojs.com/advanced/#disneys-oceans",target:"_blank",rel:"noopener noreferrer"},d=o("高级播放器示例 - Video.js：播放器框架"),k={href:"https://github.com/zhansingsong/js-leakage-patterns/blob/master/requestAnimationFrame/requestAnimationFrame.md",target:"_blank",rel:"noopener noreferrer"},m=o("js-leakage-patterns/requestAnimationFrame.md at master · zhansingsong/js-leakage-patterns");c.render=function(p,o){const c=n("OutboundLink");return s(),a(t,null,[i,e("p",null,[e("a",l,[r,e(c)]),e("a",u,[d,e(c)]),e("a",k,[m,e(c)])])],64)};export default c;
