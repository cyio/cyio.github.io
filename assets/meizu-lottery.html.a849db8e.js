import{d as n}from"./app.31fc93bc.js";const s={},a=n('<h1 id="魅族转盘" tabindex="-1"><a class="header-anchor" href="#魅族转盘" aria-hidden="true">#</a> 魅族转盘</h1><h2 id="框架选择" tabindex="-1"><a class="header-anchor" href="#框架选择" aria-hidden="true">#</a> 框架选择</h2><p>原生 OR 框架</p><p>考虑因素</p><ul><li>web 浏览器兼容</li><li>时间</li><li>技术需求</li></ul><p>用最熟悉的工具链最快，平时多练多准备，临用赶时间才能应付</p><h2 id="难点" tabindex="-1"><a class="header-anchor" href="#难点" aria-hidden="true">#</a> 难点</h2><ul><li>转盘规则 简化，转到区域中间 累加，总角度和要转的角度要放到外面，转前把上一次的角度值减掉</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>\n    <span class="token function">setResult</span> <span class="token punctuation">(</span><span class="token parameter">index<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> isRunning <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$els<span class="token punctuation">.</span>startBtn<span class="token punctuation">.</span>classList<span class="token punctuation">.</span>length\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>isRunning <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>lotteryCount <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>showPopup<span class="token punctuation">.</span>over <span class="token operator">=</span> <span class="token boolean">true</span>\n        <span class="token keyword">return</span>\n      <span class="token punctuation">}</span>\n      totalDeg <span class="token operator">=</span> totalDeg <span class="token operator">-</span> targetDeg   <span class="token comment">// 减回到 0 度</span>\n      <span class="token keyword">const</span> round <span class="token operator">=</span> <span class="token number">360</span> <span class="token operator">*</span> <span class="token number">6</span>           <span class="token comment">// 圈数</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        targetDeg <span class="token operator">=</span> <span class="token number">360</span> <span class="token operator">/</span> <span class="token number">6</span> <span class="token operator">*</span> index     <span class="token comment">// 从0度起算</span>\n      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n        targetDeg <span class="token operator">=</span> <span class="token number">360</span> <span class="token operator">/</span> <span class="token number">6</span> <span class="token operator">*</span> <span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">30</span>  <span class="token comment">// 随机区域正中间度数加上到边界的度数</span>\n      <span class="token punctuation">}</span>\n      totalDeg <span class="token operator">=</span> totalDeg <span class="token operator">+</span> targetDeg <span class="token operator">+</span> round\n      <span class="token keyword">this</span><span class="token punctuation">.</span>lotteryCount <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lotteryCount <span class="token operator">-</span> <span class="token number">1</span>\n      <span class="token function">Velocity</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$els<span class="token punctuation">.</span>startBtn<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        rotateZ<span class="token operator">:</span> totalDeg\n      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        easing<span class="token operator">:</span> <span class="token string">&#39;easeInOutQuart&#39;</span><span class="token punctuation">,</span>\n        duration<span class="token operator">:</span> <span class="token number">3400</span><span class="token punctuation">,</span>\n        complete<span class="token operator">:</span> callback\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><ul><li>模态组件 modal</li></ul><p>开始选了vux，移动端组件，非常不合适 这种场景没有一般性，用别人的适用起来，要改很多东西，需要自己根据需求去实现</p><ul><li><p>鼠标进入窗口</p><pre><code>  这里用了 mouseover，点击才有效果，没找到类似 CSS 中hover的检测方式\n</code></pre></li></ul><h2 id="原理探究" tabindex="-1"><a class="header-anchor" href="#原理探究" aria-hidden="true">#</a> 原理探究</h2>',13);s.render=function(n,s){return a};export default s;
