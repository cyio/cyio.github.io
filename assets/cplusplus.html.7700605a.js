import{r as e,o as l,c as a,a as r,F as n,b as o,d as t}from"./app.26466922.js";const i={},d=r("h1",{id:"c",tabindex:"-1"},[r("a",{class:"header-anchor",href:"#c","aria-hidden":"true"},"#"),o(" C++")],-1),c=r("h2",{id:"学习意义和目标",tabindex:"-1"},[r("a",{class:"header-anchor",href:"#学习意义和目标","aria-hidden":"true"},"#"),o(" 学习意义和目标")],-1),u=r("li",null,"JS 引擎 V8 就是用 C++ 写的， 学会 C++，可以看 V8 源码",-1),s=r("li",null,"熟悉基本语言特性，能编写理解算法题",-1),h=o("语言特点：低级，静态强类型，面向对象 "),p={href:"https://medium.com/@vardanator/why-cs-students-must-learn-c-as-their-main-programming-language-6d3b4f8720bd",target:"_blank",rel:"noopener noreferrer"},f=o("Why CS students "),m=r("em",null,"must",-1),g=o(" learn C++ as their main programming language"),b={href:"https://pawelgrzybek.com/cpp-for-javascript-developers/",target:"_blank",rel:"noopener noreferrer"},w=o("C++ for JavaScript developers | pawelgrzybek.com"),v={href:"https://www.slant.co/versus/111/127/~javascript_vs_c",target:"_blank",rel:"noopener noreferrer"},C=o("JavaScript vs C++ detailed comparison as of 2018 - Slant"),k=r("h2",{id:"编译环境",tabindex:"-1"},[r("a",{class:"header-anchor",href:"#编译环境","aria-hidden":"true"},"#"),o(" 编译环境")],-1),_=r("ul",null,[r("li",null,[o("c "),r("code",null,"gcc"),o(" c++"),r("code",null,"g++")]),r("li",null,"vim 定制 F9 编译，F8 运行")],-1),x=r("h2",{id:"基础",tabindex:"-1"},[r("a",{class:"header-anchor",href:"#基础","aria-hidden":"true"},"#"),o(" 基础")],-1),S=r("li",null,"对象具有状态和形为，类是描述对象状态和形为的模板，对象是类的补例",-1),q=o("计算机中的浮点 float 是一种对数字接近而非精确的表达。double 的意思是精度是两倍。 "),y={href:"https://www.zhihu.com/question/26022206/answer/222407459",target:"_blank",rel:"noopener noreferrer"},F=o("单精度与双精度是什么意思，有什么区别？ - 知乎"),j=t("<li><code>cout cin</code> 不是语言本身的，使用前需要<code>#include &lt;iostream&gt;</code>，<code>cout &lt;&lt; &quot;main&quot; &lt;&lt; endl;</code>，注意<code>return</code>并不会打印</li><li><code>printf</code> 格式化输出，先引入<code>#include &quot;stdio.h&quot;</code>，然后需要指定格式，比较麻烦，并且前后类型必须一致？</li>",2),z=t('<h3 id="数据类型" tabindex="-1"><a class="header-anchor" href="#数据类型" aria-hidden="true">#</a> 数据类型</h3><ul><li>相对 C 的<code>char</code>，增加了<code>string</code>类型，只能用双引号</li><li>不能用<code>+</code>直接拼接字符串，需要先声明，至少有一个指定类型</li><li>单引号，只能是字符（一个），双引号是字符串，末尾会自动追加<code>\\0</code></li><li>数组，必须指定个数<code>int n[2] = {1, 2};</code> 或者<code>int *n = new int(2);</code></li></ul><h3 id="函数" tabindex="-1"><a class="header-anchor" href="#函数" aria-hidden="true">#</a> 函数</h3>',3),J=r("li",null,"函数名前指定返回类型",-1),V=r("li",null,"函数默认是执行的，要想只定义不执行，需要把声明和定义分开",-1),L=r("li",null,[o("接口与定义分开，"),r("code",null,"**.h **.cpp")],-1),O=r("code",null,"inline",-1),W=o("要跟函数的定义放在一块 "),A={href:"https://segmentfault.com/a/1190000015967573?utm_source=tag-newest",target:"_blank",rel:"noopener noreferrer"},B=o("C++ 内联函数分析 - 个人文章 - SegmentFault 思否"),D=r("li",null,"会执行最后一个函数",-1);i.render=function(o,t){const i=e("OutboundLink");return l(),a(n,null,[d,c,r("ul",null,[u,s,r("li",null,[h,r("a",p,[f,m,g,r(i)]),r("a",b,[w,r(i)]),r("a",v,[C,r(i)])])]),k,_,x,r("ul",null,[S,r("li",null,[q,r("a",y,[F,r(i)])]),j]),z,r("ul",null,[J,V,L,r("li",null,[O,W,r("a",A,[B,r(i)])]),D])],64)};export default i;
