(window.webpackJsonp=window.webpackJsonp||[]).push([[338],{778:function(e,t,a){"use strict";a.r(t);var r=a(56),s=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"http"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http"}},[e._v("#")]),e._v(" HTTP")]),e._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#浏览器缓存"}},[e._v("浏览器缓存")]),a("ul",[a("li",[a("a",{attrs:{href:"#缓存最佳策略"}},[e._v("缓存最佳策略")])]),a("li",[a("a",{attrs:{href:"#缓存有效期计算"}},[e._v("缓存有效期计算")])])])]),a("li",[a("a",{attrs:{href:"#https"}},[e._v("HTTPS")])]),a("li",[a("a",{attrs:{href:"#cors"}},[e._v("CORS")])]),a("li",[a("a",{attrs:{href:"#返回状态码"}},[e._v("返回状态码")])]),a("li",[a("a",{attrs:{href:"#get-与-post-区别"}},[e._v("GET 与 POST 区别")])]),a("li",[a("a",{attrs:{href:"#请描述-cookies、sessionstorage-和-localstorage-的区别"}},[e._v("请描述 cookies、sessionStorage 和 localStorage 的区别?")])]),a("li",[a("a",{attrs:{href:"#http-与-tcp-区别"}},[e._v("http 与 tcp 区别")])]),a("li",[a("a",{attrs:{href:"#dns"}},[e._v("DNS")])]),a("li",[a("a",{attrs:{href:"#tcp"}},[e._v("TCP")])]),a("li",[a("a",{attrs:{href:"#etag-和-last-modified-区别-使用场景"}},[e._v("Etag 和 Last-Modified 区别，使用场景")])]),a("li",[a("a",{attrs:{href:"#expires和cache-control"}},[e._v("Expires和Cache-Control")])])])]),a("p"),e._v(" "),a("p",[e._v("名词： ETag 文件指纹，如 content hash")]),e._v(" "),a("h2",{attrs:{id:"浏览器缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器缓存"}},[e._v("#")]),e._v(" 浏览器缓存")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("http cache 设计原则\n\n默认隐式，显式用 cache-control\n\n请求和响应，都能带指令，有冲突时，以更严格为准\n\n两种模型：\n过期模型，减少频繁请求网络往返\n\tExpires\n\tCache-Control max-age 优先级高于上者\n验证模型，减少带宽开销\n\t条件请求\n\tLast-Modified 默认弱验证\n\tEtag 默认强验证\n\n\t建议同时提供 Etag 和 LM\n\t前者文件一变就变，后者在发生有意义变化时变\n\n\n启发式过期，慎用，建议明确指定\n\n如何比对 ETag 和 LM，请求时带上之前的，即 If-xxx\n\n流程：是否命中强缓存 -> 是否命中协商缓存\n\n[HTTP/1.1: Caching in HTTP](https://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html#sec13.1.5)\n\n")])])]),a("ul",[a("li",[a("p",[e._v("强缓存，header -> max, cache，命中时不发网络请求")])]),e._v(" "),a("li",[a("p",[e._v("协商缓存，header -> modifier，先发请求，命中 返回 304")]),e._v(" "),a("p",[a("code",[e._v("no-cache")]),e._v(" = store + if change 如果存在合适的验证令牌(ETag)，发起请求，如果资源无变化，304，不下载")]),e._v(" "),a("p",[a("code",[e._v("no-store")]),e._v(" 完全不存储，如私密文件")])]),e._v(" "),a("li",[a("p",[e._v("刷新(F5)，跳过强缓存，但是会检查协商缓存（协商缓存本身已经是一种避免内容不更新的策略，没必要跳过强刷）")])]),e._v(" "),a("li",[a("p",[e._v("强制刷新(Ctrl + F5)，跳过强缓存和协商缓存")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://www.cnblogs.com/lyzg/p/5125934.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("浏览器缓存知识小结及应用 - 流云诸葛 - 博客园"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/http-caching?hl=zh-cn",target:"_blank",rel:"noopener noreferrer"}},[e._v("HTTP 缓存  |  Web  |  Google Developers"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Caching",target:"_blank",rel:"noopener noreferrer"}},[e._v("HTTP caching - HTTP | MDN"),a("OutboundLink")],1)])]),e._v(" "),a("li",[a("p",[e._v("不设置")]),e._v(" "),a("ul",[a("li",[e._v("跳转访问 size 列 显示 disk cache 或请求详情 General 显示 Status Code: 200 OK (from disk cache)")]),e._v(" "),a("li",[e._v("直接打开资源链接，chrome 会在请求头加上"),a("code",[e._v("max-age=0")]),e._v("，走协商缓存 显示 304，不需要再接收响应体，节省一些带宽")]),e._v(" "),a("li",[e._v("浏览器缓存策略有差异，所以不需要缓存时，最好显式指定")])])]),e._v(" "),a("li",[a("p",[e._v("共享代理缓存 VS 私人浏览器缓存")]),e._v(" "),a("p",[e._v("共享缓存可以存在中间服务器上（只是个概念，如 cdn）")])])]),e._v(" "),a("h3",{attrs:{id:"缓存最佳策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓存最佳策略"}},[e._v("#")]),e._v(" 缓存最佳策略")]),e._v(" "),a("ul",[a("li",[e._v("For html files, use Cache-Control: no-cache, and Etag. 协商缓存")]),e._v(" "),a("li",[e._v("For js,css, and image files, set Cache-Control: public, max-age=31536000, no Etag, no Last-Modified settings. 强缓存，因为新资源 URL 一般有版本")])]),e._v(" "),a("h3",{attrs:{id:"缓存有效期计算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓存有效期计算"}},[e._v("#")]),e._v(" 缓存有效期计算")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// freshnessLifetime\nif `Cache-control: max-age=N` exist\n  = N\nelse if `Expires` exist\n  = Expires - Date\nelse if `Last-Modified` exist\n  = (Date - Last-Modified) / 10\n\nexpirationTime = responseTime + freshnessLifetime - currentAge\n\nresponseTime 浏览器接收响应时间\ncurrentAge = currentTime - storeTime\n")])])]),a("p",[e._v("meta cache-control 不建议用，html4 标准，5 没有")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://stackoverflow.com/questions/49547/how-do-we-control-web-page-caching-across-all-browsers",target:"_blank",rel:"noopener noreferrer"}},[e._v("http - How do we control web page caching, across all browsers? - Stack Overflow"),a("OutboundLink")],1)]),e._v(" "),a("h2",{attrs:{id:"https"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#https"}},[e._v("#")]),e._v(" HTTPS")]),e._v(" "),a("p",[e._v("建立在 SSL/TLS 协议上，采用了公钥加密法，基本过程是：")]),e._v(" "),a("ol",[a("li",[e._v("客户端向服务器端索要并验证公钥。")]),e._v(" "),a("li",[e._v("双方协商生成”会话密钥”。")]),e._v(" "),a("li",[e._v("双方采用”会话密钥”进行加密通信")])]),e._v(" "),a("p",[e._v("数据通信 对称加密\n签名 非对称加密")]),e._v(" "),a("p",[e._v("SSL 握手\ns => send pubkey => c\nc => 生成对称加密 session key ，并用 pubkey 加密 => s 用私钥解密\n之后使用对称加密 key 数据传输")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://www.quora.com/Does-SSL-and-TLS-use-asymmetric-encryption",target:"_blank",rel:"noopener noreferrer"}},[e._v("Does SSL and TLS use asymmetric encryption? - Quora"),a("OutboundLink")],1)]),e._v(" "),a("h2",{attrs:{id:"cors"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cors"}},[e._v("#")]),e._v(" CORS")]),e._v(" "),a("p",[e._v("CORS 处理非简单请求（如 POST）会触发 options")]),e._v(" "),a("p",[e._v("Access-Control-Max-Age 指定 prelight 请求缓存多长时间，这个时间内不再需要发\n"),a("a",{attrs:{href:"https://blog.csdn.net/wanwan5856/article/details/79592681",target:"_blank",rel:"noopener noreferrer"}},[e._v("减少 options 请求次数 和 数据量大时前端渲染的处理 - wanwan5856 的博客 - CSDN 博客"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("简单请求的定义，来自 MDN，不是标准。简单请求要满足一系列条件，如仅使用 CORS 安全 请求头。而需要 prelight 的请求，意味着涉及用户数据")]),e._v(" "),a("h2",{attrs:{id:"返回状态码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#返回状态码"}},[e._v("#")]),e._v(" 返回状态码")]),e._v(" "),a("p",[e._v("助记：1-5 / I OR CS")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("1xx 信息 Information(I)\n2xx 成功 OK(O)\n3xx 重定向 Redirect(R)\n4xx 客户端错误 Client Error(C)\n5xx 服务端错误 Server Error(S)\n")])])]),a("p",[e._v("pragma 〔计〕杂注,编译指示")]),e._v(" "),a("p",[e._v("交换完连接即关闭，而长连接(HTTP1.1)只有在服务端收到"),a("code",[e._v("Connection: close")]),e._v("才会关闭")]),e._v(" "),a("ul",[a("li",[e._v("206 - 大文件分块下载时使用\n"),a("code",[e._v('curl --header "Range: bytes=500-1000" https://raw.githubusercontent.com/Germey/LaravelGeetest/master/README.md')])])]),e._v(" "),a("h2",{attrs:{id:"get-与-post-区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-与-post-区别"}},[e._v("#")]),e._v(" GET 与 POST 区别")]),e._v(" "),a("ul",[a("li",[e._v("用途")]),e._v(" "),a("li",[e._v("参数形式")]),e._v(" "),a("li",[e._v("编码")]),e._v(" "),a("li",[e._v("安全性")])]),e._v(" "),a("p",[e._v("对于 GET 方式的请求，浏览器会把 http header 和 data 一并发送出去，服务器响应 200（返回数据）； 而对于 POST，浏览器先发送 header，服务器响应 100 continue，浏览器再发送 data，服务器响应 200 ok（返回数据）。")]),e._v(" "),a("p",[e._v("get 只读，cdn 缓存")]),e._v(" "),a("p",[e._v("post 副作用，需要 web 服务器操作")]),e._v(" "),a("p",[e._v("100 continue 并非 post 必然使用，使用场景是 post/put，发送大量数据场景的请求优化")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://gms.tf/when-curl-sends-100-continue.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("When curl sends 100-continue | Georg's Log"),a("OutboundLink")],1),e._v(" "),a("a",{attrs:{href:"https://www.zhihu.com/question/31640769",target:"_blank",rel:"noopener noreferrer"}},[e._v("post 相比get 有很多优点，为什么现在的HTTP通信中大多数请求还是使用get？ - 知乎"),a("OutboundLink")],1)]),e._v(" "),a("h2",{attrs:{id:"请描述-cookies、sessionstorage-和-localstorage-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#请描述-cookies、sessionstorage-和-localstorage-的区别"}},[e._v("#")]),e._v(" 请描述 cookies、sessionStorage 和 localStorage 的区别?")]),e._v(" "),a("ol",[a("li",[e._v("存储方式：cookies 存储在 http 信息的实体中，http 每次请求都会携带 cookie, cookie 在浏览器和服务器间来回传递， 后两者仅在本地保存")]),e._v(" "),a("li",[e._v("存储大小：cookie 数据不能超过 4k; 后两者要大很多，可以达到 5M")]),e._v(" "),a("li",[e._v("有效期：cookie 在设置的 cookie 有效期之前有效，即使浏览器或窗口关闭；sessionStorage 仅在当前浏览器窗口关闭前有效，不可持久保存；localSorage 始终有效，窗口或浏览器关闭也一直保存，可做持久数据")]),e._v(" "),a("li",[e._v("作用域：cookie、localStorage 在所有的同源窗口中都是共享的；sessionStorage 只能在当前页面使用")])]),e._v(" "),a("p",[e._v("sessionStorage")]),e._v(" "),a("ul",[a("li",[e._v("刷新或恢复页面（重新打开关闭的标签页）时，session 存在")]),e._v(" "),a("li",[e._v("创建一个新的相同 URL 页面，会创建新的 session")]),e._v(" "),a("li",[e._v("试验 https://codesandbox.io/s/992th?file=/src/index.js")])]),e._v(" "),a("p",[e._v("sessionStorage, localStorage 存储 size 限制 5MB，各浏览器一致，同步执行，可阻塞主线程\n"),a("a",{attrs:{href:"https://web.dev/storage-for-the-web/#check",target:"_blank",rel:"noopener noreferrer"}},[e._v("Storage for the web"),a("OutboundLink")],1)]),e._v(" "),a("h2",{attrs:{id:"http-与-tcp-区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-与-tcp-区别"}},[e._v("#")]),e._v(" http 与 tcp 区别")]),e._v(" "),a("ul",[a("li",[e._v("tcp 是传输层，http 是跑在 tcp 上的应用层协议")])]),e._v(" "),a("p",[a("a",{attrs:{href:"https://www.infoq.cn/article/x80uOvcRyxVYw3KVusUm",target:"_blank",rel:"noopener noreferrer"}},[e._v("HTTP/3 的过去、现在和未来-InfoQ"),a("OutboundLink")],1)]),e._v(" "),a("h2",{attrs:{id:"dns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dns"}},[e._v("#")]),e._v(" DNS")]),e._v(" "),a("ol",[a("li",[e._v("浏览器 cache")]),e._v(" "),a("li",[e._v("操作系统 cache")]),e._v(" "),a("li",[e._v("路由器 cache")]),e._v(" "),a("li",[e._v("ISP 网络运营商 cache (以上递归查询 - dns 服务器)")]),e._v(" "),a("li",[e._v("root (以下 迭代查询)")]),e._v(" "),a("li",[e._v("域")]),e._v(" "),a("li",[e._v("权威解析服务器 - 返回 IP")])]),e._v(" "),a("p",[e._v("流程：解析-请求-渲染")]),e._v(" "),a("p",[e._v("递归查询-客户端查一次，迭代查询-客户端反复查\n"),a("a",{attrs:{href:"https://www.cnblogs.com/xiangsikai/p/8438601.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("DNS 递归/迭代 原理 - kevin.Xiang - 博客园"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/lgwebdream/FE-Interview/issues/14#issuecomment-647606369",target:"_blank",rel:"noopener noreferrer"}},[e._v("第 8 题：说一下 Http 缓存策略，有什么区别，分别解决了什么问题 · Issue #14 · lgwebdream/FE-Interview"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"https://www.jianshu.com/p/54cc04190252",target:"_blank",rel:"noopener noreferrer"}},[e._v("深入理解浏览器的缓存机制 - 简书"),a("OutboundLink")],1)]),e._v(" "),a("h2",{attrs:{id:"tcp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tcp"}},[e._v("#")]),e._v(" TCP")]),e._v(" "),a("p",[e._v("TCP 三次握手，建立可靠连接，双边要同步(SYN)和确认(ACK)")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("C -> SYN -> S\nC <- SYN-ACK <- S\nC -> ACK -> S\n")])])]),a("p",[e._v("序列号和确认号的使用允许双方检测丢失或乱序的数据片段")]),e._v(" "),a("p",[e._v("https://www.google.com/search?q=tcp+handshake&oq=tcp+handshake&aqs=chrome..69i57.6609j0j7&sourceid=chrome&ie=UTF-8")]),e._v(" "),a("p",[e._v("四次挥手 Finish")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("C -> FIN -> S\nC <- ACK <- S\nC <- keep send and FIN <- S\nC -> ACK -> S\n")])])]),a("p",[a("a",{attrs:{href:"https://wiki.wireshark.org/TCP%25204-times%2520close",target:"_blank",rel:"noopener noreferrer"}},[e._v("TCP 4-times close - The Wireshark Wiki"),a("OutboundLink")],1)]),e._v(" "),a("h2",{attrs:{id:"etag-和-last-modified-区别-使用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#etag-和-last-modified-区别-使用场景"}},[e._v("#")]),e._v(" Etag 和 Last-Modified 区别，使用场景")]),e._v(" "),a("ul",[a("li",[e._v("优先级")]),e._v(" "),a("li",[e._v("准确性、及时性")]),e._v(" "),a("li",[e._v("场景")])]),e._v(" "),a("blockquote",[a("p",[e._v("Etag nginx 是基于 Last-Modified 和 Content-Length 计算，更新更及时？")])]),e._v(" "),a("h2",{attrs:{id:"expires和cache-control"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#expires和cache-control"}},[e._v("#")]),e._v(" Expires和Cache-Control")]),e._v(" "),a("p",[e._v("Expires 要求客户端和服务端的时钟严格同步。 HTTP1.1 引入 Cache-Control来克服Expires头的限制。如果max-age和Expires同时出现，则 max-age 有更高的优先级。")])])}),[],!1,null,null,null);t.default=s.exports}}]);