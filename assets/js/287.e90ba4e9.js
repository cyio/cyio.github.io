(window.webpackJsonp=window.webpackJsonp||[]).push([[287],{728:function(t,a,s){"use strict";s.r(a);var e=s(56),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"git"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git"}},[t._v("#")]),t._v(" Git")]),t._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#commit-提交规范"}},[t._v("commit 提交规范")])]),s("li",[s("a",{attrs:{href:"#编码问题"}},[t._v("编码问题")])]),s("li",[s("a",{attrs:{href:"#协作中的注意事项"}},[t._v("协作中的注意事项")])]),s("li",[s("a",{attrs:{href:"#回撤-commit-或取消暂存-保留工作区"}},[t._v("回撤 commit 或取消暂存，保留工作区")])]),s("li",[s("a",{attrs:{href:"#回撤-commit-丢弃之后的修改-慎用-会撤销工作区"}},[t._v("回撤 commit，丢弃之后的修改，慎用，会撤销工作区")])]),s("li",[s("a",{attrs:{href:"#回撤工作区-包括新文件"}},[t._v("回撤工作区，包括新文件")])]),s("li",[s("a",{attrs:{href:"#从暂存区回撤某个文件"}},[t._v("从暂存区回撤某个文件")])]),s("li",[s("a",{attrs:{href:"#恢复某个文件到-master-分支的状态-放弃本地修改"}},[t._v("恢复某个文件到 master 分支的状态(放弃本地修改)")])]),s("li",[s("a",{attrs:{href:"#回退"}},[t._v("回退")])]),s("li",[s("a",{attrs:{href:"#diff"}},[t._v("diff")])]),s("li",[s("a",{attrs:{href:"#修改已提交信息"}},[t._v("修改已提交信息")])]),s("li",[s("a",{attrs:{href:"#改变本地分支名"}},[t._v("改变本地分支名")])]),s("li",[s("a",{attrs:{href:"#交互式添加-p-patch"}},[t._v("交互式添加，p - patch")])]),s("li",[s("a",{attrs:{href:"#查看详细的修改记录"}},[t._v("查看详细的修改记录")])]),s("li",[s("a",{attrs:{href:"#查看其它分支的文件-而不必来回-checkout"}},[t._v("查看其它分支的文件，而不必来回 checkout")])]),s("li",[s("a",{attrs:{href:"#暂存并恢复-pop-是移除-将最近的-stash-移除并应用到当前工作目录"}},[t._v("暂存并恢复，pop 是移除，将最近的 stash 移除并应用到当前工作目录")])]),s("li",[s("a",{attrs:{href:"#查找提交记录"}},[t._v("查找提交记录")])]),s("li",[s("a",{attrs:{href:"#更新-fork"}},[t._v("更新 fork")])]),s("li",[s("a",{attrs:{href:"#https-与-ssh"}},[t._v("HTTPS 与 SSH")])]),s("li",[s("a",{attrs:{href:"#创建新的平行空分支"}},[t._v("创建新的平行空分支")])]),s("li",[s("a",{attrs:{href:"#如何在不删除远程仓库的情况下-清空文件和提交记录"}},[t._v("如何在不删除远程仓库的情况下，清空文件和提交记录")])]),s("li",[s("a",{attrs:{href:"#跨平台换行问题"}},[t._v("跨平台换行问题")])]),s("li",[s("a",{attrs:{href:"#显示全部分支信息"}},[t._v("显示全部分支信息")])]),s("li",[s("a",{attrs:{href:"#提交修改内容-已存在文件"}},[t._v("提交修改内容（已存在文件）")])]),s("li",[s("a",{attrs:{href:"#打标签-tag"}},[t._v("打标签 tag")])]),s("li",[s("a",{attrs:{href:"#合并冲突"}},[t._v("合并冲突")])]),s("li",[s("a",{attrs:{href:"#检出指定分支指定文件"}},[t._v("检出指定分支指定文件")])]),s("li",[s("a",{attrs:{href:"#删除分支"}},[t._v("删除分支")])]),s("li",[s("a",{attrs:{href:"#修改优化历史提交信息"}},[t._v("修改优化历史提交信息")])]),s("li",[s("a",{attrs:{href:"#干净比较-topic-分支和-master-分支"}},[t._v("干净比较 topic 分支和 master 分支")])]),s("li",[s("a",{attrs:{href:"#合并策略优化-少走回头路"}},[t._v("合并策略优化，少走回头路")])]),s("li",[s("a",{attrs:{href:"#对比工作区文件变化"}},[t._v("对比工作区文件变化")])]),s("li",[s("a",{attrs:{href:"#合并时可通过参数实现直接合并无意义的空格变动"}},[t._v("合并时可通过参数实现直接合并无意义的空格变动")])]),s("li",[s("a",{attrs:{href:"#提交时显示所有-diff-信息"}},[t._v("提交时显示所有 diff 信息")])]),s("li",[s("a",{attrs:{href:"#暂存时排除文件或文件夹"}},[t._v("暂存时排除文件或文件夹")])]),s("li",[s("a",{attrs:{href:"#子模块"}},[t._v("子模块")])]),s("li",[s("a",{attrs:{href:"#交互式合并其它分支某部分代码"}},[t._v("交互式合并其它分支某部分代码")])]),s("li",[s("a",{attrs:{href:"#克隆指定分支"}},[t._v("克隆指定分支")])]),s("li",[s("a",{attrs:{href:"#移除大文件"}},[t._v("移除大文件")])]),s("li",[s("a",{attrs:{href:"#合并其他分支的某条-commmit"}},[t._v("合并其他分支的某条 commmit")])]),s("li",[s("a",{attrs:{href:"#diff-导出"}},[t._v("diff 导出")])]),s("li",[s("a",{attrs:{href:"#patch"}},[t._v("patch")])]),s("li",[s("a",{attrs:{href:"#hub"}},[t._v("hub")])]),s("li",[s("a",{attrs:{href:"#成员管理"}},[t._v("成员管理")])]),s("li",[s("a",{attrs:{href:"#从别的-fork-拉取更新"}},[t._v("从别的 fork 拉取更新")])]),s("li",[s("a",{attrs:{href:"#本地-git-设置多账户"}},[t._v("本地 Git 设置多账户")]),s("ul",[s("li",[s("a",{attrs:{href:"#配置-ssh"}},[t._v("配置 SSH")])]),s("li",[s("a",{attrs:{href:"#为不同项目配置对应的-remote"}},[t._v("为不同项目配置对应的 remote")])]),s("li",[s("a",{attrs:{href:"#为不同项目配置对应的-email-和-name"}},[t._v("为不同项目配置对应的 email 和 name")])])])]),s("li",[s("a",{attrs:{href:"#debug"}},[t._v("debug")])]),s("li",[s("a",{attrs:{href:"#文件大小写重命名"}},[t._v("文件大小写重命名")])]),s("li",[s("a",{attrs:{href:"#git-仓库删除文件-夹-本地不删除"}},[t._v("git 仓库删除文件/夹，本地不删除")])]),s("li",[s("a",{attrs:{href:"#只是查看旧-commit-不要-reset"}},[t._v("只是查看旧 commit，不要 reset")])]),s("li",[s("a",{attrs:{href:"#意外-reset-了怎么办"}},[t._v("意外 reset 了怎么办")])]),s("li",[s("a",{attrs:{href:"#部分提交"}},[t._v("部分提交")])]),s("li",[s("a",{attrs:{href:"#暂存某个文件"}},[t._v("暂存某个文件")])]),s("li",[s("a",{attrs:{href:"#zsh-alias"}},[t._v("zsh alias")])]),s("li",[s("a",{attrs:{href:"#push-策略"}},[t._v("push 策略")])]),s("li",[s("a",{attrs:{href:"#统计文件修改"}},[t._v("统计文件修改")])]),s("li",[s("a",{attrs:{href:"#git-push"}},[t._v("git push")])]),s("li",[s("a",{attrs:{href:"#本地与远端不一致-重置到远端版本"}},[t._v("本地与远端不一致，重置到远端版本")])]),s("li",[s("a",{attrs:{href:"#何时删除旧分支"}},[t._v("何时删除旧分支")])]),s("li",[s("a",{attrs:{href:"#清理分支"}},[t._v("清理分支")])]),s("li",[s("a",{attrs:{href:"#上线流程"}},[t._v("上线流程")])]),s("li",[s("a",{attrs:{href:"#比较两个分支"}},[t._v("比较两个分支")])]),s("li",[s("a",{attrs:{href:"#rebase"}},[t._v("rebase")])]),s("li",[s("a",{attrs:{href:"#filemode-change"}},[t._v("filemode change")])]),s("li",[s("a",{attrs:{href:"#unadd"}},[t._v("unadd")])]),s("li",[s("a",{attrs:{href:"#hooks"}},[t._v("hooks")])]),s("li",[s("a",{attrs:{href:"#三路合并"}},[t._v("三路合并")])]),s("li",[s("a",{attrs:{href:"#显示未跟踪文件夹详情"}},[t._v("显示未跟踪文件夹详情")])]),s("li",[s("a",{attrs:{href:"#分支比较"}},[t._v("分支比较")])]),s("li",[s("a",{attrs:{href:"#git-gui"}},[t._v("Git GUI")])]),s("li",[s("a",{attrs:{href:"#可选合并"}},[t._v("可选合并")])]),s("li",[s("a",{attrs:{href:"#查看分支是否落后"}},[t._v("查看分支是否落后")])]),s("li",[s("a",{attrs:{href:"#巨石仓库"}},[t._v("巨石仓库")])]),s("li",[s("a",{attrs:{href:"#多个工作区"}},[t._v("多个工作区")])])])]),s("p"),t._v(" "),s("p",[s("a",{attrs:{href:"https://learngitbranching.js.org/?demo=&locale=zh_CN",target:"_blank",rel:"noopener noreferrer"}},[t._v("Learn Git Branching"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"commit-提交规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#commit-提交规范"}},[t._v("#")]),t._v(" commit 提交规范")]),t._v(" "),s("ul",[s("li",[t._v("feat: 添加新功能")]),t._v(" "),s("li",[t._v("docs: 修改注释、文档")]),t._v(" "),s("li",[t._v("fix: 修复 bug")]),t._v(" "),s("li",[t._v("style: 修改代码格式，例如代码 lint 处理等代码风格处理，不能影响原功能")]),t._v(" "),s("li",[t._v("refactor: 重构代码，不能影响原功能")]),t._v(" "),s("li",[t._v("perf: 提升性能")]),t._v(" "),s("li",[t._v("test: 测试用例增删改")]),t._v(" "),s("li",[t._v("chore: (锁事的意思)工具操作，例如初始化脚本，启动脚本和代码校验脚本等等")]),t._v(" "),s("li",[t._v("deps: 依赖修改，例如升级、降级或锁死版本")])]),t._v(" "),s("p",[s("code",[t._v("git fix -s 'scope' 'msg'")])]),t._v(" "),s("p",[s("a",{attrs:{href:"https://open.leancloud.cn/git-commit-message/",target:"_blank",rel:"noopener noreferrer"}},[t._v("LeanCloud 开放资源: Git Commit 日志风格指南"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("尽量写有意义的 msg：")]),t._v(" "),s("ul",[s("li",[t._v("如果不能用句子完整表达，就用关键字")]),t._v(" "),s("li",[t._v("改了不同的东西，要一起提交，主要的修改是什么")]),t._v(" "),s("li",[t._v("改的都是零碎点，msg 随意 fix minor")])]),t._v(" "),s("h2",{attrs:{id:"编码问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编码问题"}},[t._v("#")]),t._v(" 编码问题")]),t._v(" "),s("p",[t._v("找到报错的文件，运行"),s("code",[t._v(":w ++ff=unix")])]),t._v(" "),s("h2",{attrs:{id:"协作中的注意事项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#协作中的注意事项"}},[t._v("#")]),t._v(" 协作中的注意事项")]),t._v(" "),s("ul",[s("li",[t._v("commit 之前一定要 review，做 diff 检查")]),t._v(" "),s("li",[t._v("不要格式化别人的代码，只处理你的代码")])]),t._v(" "),s("h2",{attrs:{id:"回撤-commit-或取消暂存-保留工作区"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#回撤-commit-或取消暂存-保留工作区"}},[t._v("#")]),t._v(" 回撤 commit 或取消暂存，保留工作区")]),t._v(" "),s("p",[s("code",[t._v("$ git reset HEAD")]),t._v(" [path]")]),t._v(" "),s("p",[t._v("回撤最近一个\n"),s("code",[t._v("$ git reset HEAD~1")])]),t._v(" "),s("h2",{attrs:{id:"回撤-commit-丢弃之后的修改-慎用-会撤销工作区"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#回撤-commit-丢弃之后的修改-慎用-会撤销工作区"}},[t._v("#")]),t._v(" 回撤 commit，丢弃之后的修改，慎用，会撤销工作区")]),t._v(" "),s("p",[s("code",[t._v("$ git reset HEAD --hard")])]),t._v(" "),s("h2",{attrs:{id:"回撤工作区-包括新文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#回撤工作区-包括新文件"}},[t._v("#")]),t._v(" 回撤工作区，包括新文件")]),t._v(" "),s("p",[t._v("先测试，以防误删 "),s("code",[t._v("git clean -nfd")])]),t._v(" "),s("p",[s("code",[t._v("git clean -fd")])]),t._v(" "),s("h2",{attrs:{id:"从暂存区回撤某个文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#从暂存区回撤某个文件"}},[t._v("#")]),t._v(" 从暂存区回撤某个文件")]),t._v(" "),s("p",[s("code",[t._v("$ git reset HEAD CONTRIBUTING.md")])]),t._v(" "),s("h2",{attrs:{id:"恢复某个文件到-master-分支的状态-放弃本地修改"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#恢复某个文件到-master-分支的状态-放弃本地修改"}},[t._v("#")]),t._v(" 恢复某个文件到 master 分支的状态(放弃本地修改)")]),t._v(" "),s("p",[s("code",[t._v("$ git checkout -- FILE-PATH")])]),t._v(" "),s("h2",{attrs:{id:"回退"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#回退"}},[t._v("#")]),t._v(" 回退")]),t._v(" "),s("p",[s("code",[t._v("$ git revert commitID")])]),t._v(" "),s("p",[t._v("revert a merge 需要让 git 知道保留哪个父主线\n"),s("a",{attrs:{href:"https://stackoverflow.com/questions/5970889/why-does-git-revert-complain-about-a-missing-m-option/5971033#5971033",target:"_blank",rel:"noopener noreferrer"}},[t._v("github - Why does git revert complain about a missing -m option? - Stack Overflow"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"diff"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#diff"}},[t._v("#")]),t._v(" diff")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" 默认比较工作区变更\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" --staged 比较暂存区\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" HEAD\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" difftool\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" gitx\n")])])]),s("p",[t._v("在提交前做 diff 检查，右侧打开新窗口查看变更，确认没问题后，在左侧窗口编写提交信息")]),t._v(" "),s("h2",{attrs:{id:"修改已提交信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#修改已提交信息"}},[t._v("#")]),t._v(" 修改已提交信息")]),t._v(" "),s("p",[s("code",[t._v("git commit --amend -m 'NEWMESSAGE'")])]),t._v(" "),s("h2",{attrs:{id:"改变本地分支名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#改变本地分支名"}},[t._v("#")]),t._v(" 改变本地分支名")]),t._v(" "),s("p",[s("code",[t._v("git branch -m NEWNAME")]),t._v("\n或者\n"),s("code",[t._v("git branch -m old-branch new-branch")])]),t._v(" "),s("h2",{attrs:{id:"交互式添加-p-patch"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#交互式添加-p-patch"}},[t._v("#")]),t._v(" 交互式添加，p - patch")]),t._v(" "),s("p",[s("code",[t._v("git add -p")])]),t._v(" "),s("h2",{attrs:{id:"查看详细的修改记录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看详细的修改记录"}},[t._v("#")]),t._v(" 查看详细的修改记录")]),t._v(" "),s("p",[s("code",[t._v("git log -p")])]),t._v(" "),s("h2",{attrs:{id:"查看其它分支的文件-而不必来回-checkout"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看其它分支的文件-而不必来回-checkout"}},[t._v("#")]),t._v(" 查看其它分支的文件，而不必来回 checkout")]),t._v(" "),s("p",[s("code",[t._v("git show SOME-BRANCH:SOME-FILE")])]),t._v(" "),s("h2",{attrs:{id:"暂存并恢复-pop-是移除-将最近的-stash-移除并应用到当前工作目录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#暂存并恢复-pop-是移除-将最近的-stash-移除并应用到当前工作目录"}},[t._v("#")]),t._v(" 暂存并恢复，pop 是移除，将最近的 stash 移除并应用到当前工作目录")]),t._v(" "),s("p",[s("code",[t._v("git stash, then git stash pop/apply")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('git stash save "my_stash"\ngit stash list\ngit stash apply stash@{n}\n')])])]),s("h2",{attrs:{id:"查找提交记录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查找提交记录"}},[t._v("#")]),t._v(" 查找提交记录")]),t._v(" "),s("p",[s("code",[t._v("$ git log -S KEYWORD")])]),t._v(" "),s("h2",{attrs:{id:"更新-fork"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更新-fork"}},[t._v("#")]),t._v(" 更新 fork")]),t._v(" "),s("ol",[s("li",[t._v("添加上游 "),s("code",[t._v("git remote add upstream [repo]")])]),t._v(" "),s("li",[t._v("拉取上游 "),s("code",[t._v("git fetch upstream")])]),t._v(" "),s("li",[t._v("合并上游 "),s("code",[t._v("git merge upstream/master")])]),t._v(" "),s("li",[t._v("有冲突的话，解决冲突并提交")]),t._v(" "),s("li",[t._v("最后，推送 "),s("code",[t._v("git push")])])]),t._v(" "),s("h2",{attrs:{id:"https-与-ssh"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#https-与-ssh"}},[t._v("#")]),t._v(" HTTPS 与 SSH")]),t._v(" "),s("ul",[s("li",[t._v("用 HTTPS 操作必须要提供账号密码，如果是自己的电脑，应避免用这种方式")]),t._v(" "),s("li",[t._v("缓解方法是让 git 记忆密码，默认时间比较短 "),s("code",[t._v("git config --global credential.helper cache")])]),t._v(" "),s("li",[t._v("控制超时时间，单位是秒，下面是缓存一周 "),s("code",[t._v("git config --global credential.helper 'cache --timeout=604800'")])])]),t._v(" "),s("h2",{attrs:{id:"创建新的平行空分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建新的平行空分支"}},[t._v("#")]),t._v(" 创建新的平行空分支")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" symbolic-ref HEAD refs/heads/newbranch\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" .git/index\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clean -fdx\n")])])]),s("h2",{attrs:{id:"如何在不删除远程仓库的情况下-清空文件和提交记录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何在不删除远程仓库的情况下-清空文件和提交记录"}},[t._v("#")]),t._v(" 如何在不删除远程仓库的情况下，清空文件和提交记录")]),t._v(" "),s("ul",[s("li",[t._v("比如现在 master 分支，改名"),s("code",[t._v("git branch -m 1.0")])]),t._v(" "),s("li",[t._v("先推上去"),s("code",[t._v("git push origin 1.0")])]),t._v(" "),s("li",[t._v("然后远程 master 还在，且是默认分支，这个时候不能直接删除")]),t._v(" "),s("li",[t._v("把默认分支改为 1.0，然后"),s("code",[t._v("git push --delete origin master")])]),t._v(" "),s("li",[t._v("创建新的项目文件夹，设置好远程和分支信息即可")])]),t._v(" "),s("h2",{attrs:{id:"跨平台换行问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#跨平台换行问题"}},[t._v("#")]),t._v(" 跨平台换行问题")]),t._v(" "),s("p",[t._v("项目目录下设置 .gitattributes")]),t._v(" "),s("h2",{attrs:{id:"显示全部分支信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#显示全部分支信息"}},[t._v("#")]),t._v(" 显示全部分支信息")]),t._v(" "),s("p",[s("code",[t._v("git branch -a")])]),t._v(" "),s("h2",{attrs:{id:"提交修改内容-已存在文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#提交修改内容-已存在文件"}},[t._v("#")]),t._v(" 提交修改内容（已存在文件）")]),t._v(" "),s("p",[s("code",[t._v("git commit -a")]),t._v("\n新增文件还是需要另外 add")]),t._v(" "),s("h2",{attrs:{id:"打标签-tag"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#打标签-tag"}},[t._v("#")]),t._v(" 打标签 tag")]),t._v(" "),s("ul",[s("li",[t._v("tag 是在本地的，除非你显式 push"),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag -a v1.2.4 -m "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"release 1.2.4"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 后面的 commit 信息最好写详细点")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push github --tags\n或 "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push --tags\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag -d UNUSED-TAG\n")])])])]),t._v(" "),s("li",[t._v("根据 tag 查询 commit-id，回滚"),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git tags\ngit show tag-name\ngit reset --hard commit-id\n")])])])])]),t._v(" "),s("h2",{attrs:{id:"合并冲突"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#合并冲突"}},[t._v("#")]),t._v(" 合并冲突")]),t._v(" "),s("p",[t._v("比如维护 dotfiles ，有冲突时总是取 master")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge master\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 提示合并冲突，此时，不去手动处理冲突，")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 检出选择 theirs 的冲突文件，再添加这个文件")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout --ours filename.c\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout --theirs filename.c\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" filename.c\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 合并多个文件")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" -lr "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<<<<<<<'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("xargs")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout --theirs\n")])])]),s("h2",{attrs:{id:"检出指定分支指定文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#检出指定分支指定文件"}},[t._v("#")]),t._v(" 检出指定分支指定文件")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# On branch master")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout gh-pages\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout master -- myplugin.js\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Update myplugin.js from master"')]),t._v("\n")])])]),s("h2",{attrs:{id:"删除分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除分支"}},[t._v("#")]),t._v(" 删除分支")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -d "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("branch_name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin --delete "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("branch_name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n// or\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin :"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("branch_name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("h2",{attrs:{id:"修改优化历史提交信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#修改优化历史提交信息"}},[t._v("#")]),t._v(" 修改优化历史提交信息")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("git rebase -i")])]),t._v(" "),s("li",[t._v("或合并开发分支后，软重置后再重新提交，"),s("code",[t._v("git reset xxx")])])]),t._v(" "),s("h2",{attrs:{id:"干净比较-topic-分支和-master-分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#干净比较-topic-分支和-master-分支"}},[t._v("#")]),t._v(" 干净比较 topic 分支和 master 分支")]),t._v(" "),s("ol",[s("li",[t._v("新建三方合并分支 "),s("code",[t._v("$ git checkout -b trial_merge")])]),t._v(" "),s("li",[t._v("合并 topic 分支 "),s("code",[t._v("$ git merge topic_branch")])]),t._v(" "),s("li",[t._v("将 topic 分支与 master 比较 "),s("code",[t._v("$ git diff master")])]),t._v(" "),s("li",[t._v("回到 master 并删除三方分支 "),s("code",[t._v("$ git checkout master && git branch -D trial_merge")])])]),t._v(" "),s("h2",{attrs:{id:"合并策略优化-少走回头路"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#合并策略优化-少走回头路"}},[t._v("#")]),t._v(" 合并策略优化，少走回头路")]),t._v(" "),s("p",[s("code",[t._v("git merge --ff-only // 只允许快进合并")])]),t._v(" "),s("h2",{attrs:{id:"对比工作区文件变化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对比工作区文件变化"}},[t._v("#")]),t._v(" 对比工作区文件变化")]),t._v(" "),s("p",[s("code",[t._v("git diff branchName/commitNumber -- filepath [--staged]")])]),t._v(" "),s("h2",{attrs:{id:"合并时可通过参数实现直接合并无意义的空格变动"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#合并时可通过参数实现直接合并无意义的空格变动"}},[t._v("#")]),t._v(" 合并时可通过参数实现直接合并无意义的空格变动")]),t._v(" "),s("h2",{attrs:{id:"提交时显示所有-diff-信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#提交时显示所有-diff-信息"}},[t._v("#")]),t._v(" 提交时显示所有 diff 信息")]),t._v(" "),s("p",[s("code",[t._v("git commit -v")])]),t._v(" "),s("h2",{attrs:{id:"暂存时排除文件或文件夹"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#暂存时排除文件或文件夹"}},[t._v("#")]),t._v(" 暂存时排除文件或文件夹")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# for a file")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -u\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset -- main/dontcheckmein.txt\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# for a folder")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -u\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset -- main/*\n")])])]),s("h2",{attrs:{id:"子模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#子模块"}},[t._v("#")]),t._v(" 子模块")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 首次")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" submodule "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" URL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("需要引入模块"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 他人")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" submodule init\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" submodule update\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 维护")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" submodule update --remote\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v("\n")])])]),s("p",[t._v("更新子模块后，需要在主项目下添加提交，这样别人才会有更新")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.vogella.com/tutorials/GitSubmodules/article.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Using submodules in Git - Tutorial"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("子模块更新有两种方式")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("git pull")]),t._v("主仓库记录的 id")]),t._v(" "),s("li",[s("code",[t._v("update remote")])])]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" submodule update --init --recursive --remote BRANCH-NAME\n")])])]),s("p",[t._v("更改子模块 URL")]),t._v(" "),s("ol",[s("li",[t._v("修改 .gitmodules")]),t._v(" "),s("li",[t._v("同步到"),s("code",[t._v(".git/config")])])]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" submodule "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sync")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" submodule update --force --recursive --init --remote\n")])])]),s("h2",{attrs:{id:"交互式合并其它分支某部分代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#交互式合并其它分支某部分代码"}},[t._v("#")]),t._v(" 交互式合并其它分支某部分代码")]),t._v(" "),s("p",[s("code",[t._v("git checkout -p <branch> -- <paths> ...")])]),t._v(" "),s("h2",{attrs:{id:"克隆指定分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#克隆指定分支"}},[t._v("#")]),t._v(" 克隆指定分支")]),t._v(" "),s("p",[s("code",[t._v("git clone -b <branch> <remote_repo>")])]),t._v(" "),s("h2",{attrs:{id:"移除大文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#移除大文件"}},[t._v("#")]),t._v(" 移除大文件")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://rtyley.github.io/bfg-repo-cleaner/",target:"_blank",rel:"noopener noreferrer"}},[t._v("BFG Repo-Cleaner by rtyley"),s("OutboundLink")],1)]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone --mirror git://example.com/some-big-repo.git\nbfg --strip-blobs-bigger-than 100M some-big-repo.git\n// or\n// bfg -D filename"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("not path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" some-big-repo.git\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reflog expire --expire"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("now --all "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" gc --prune"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("now --aggressive\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push\n")])])]),s("p",[t._v("超出 coding 容量限制，很多操作不能做了，比如 push\n临时处理是在线上修改\n解决是清空项目代码，重新上传移除过大文件的项目")]),t._v(" "),s("h2",{attrs:{id:"合并其他分支的某条-commmit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#合并其他分支的某条-commmit"}},[t._v("#")]),t._v(" 合并其他分支的某条 commmit")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" cherry-pick 584a2ef\n")])])]),s("h2",{attrs:{id:"diff-导出"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#diff-导出"}},[t._v("#")]),t._v(" diff 导出")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("创建两个 commits 的 patch "),s("code",[t._v("git diff COMMIT1 COMMIT2 > patch.txt")]),t._v("\n如果有在线管理，可直接查看 commit 的 diff 内容")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# dev1 exports unstaged changes")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" diff.patch\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# dev1 exports staged changes")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" --staged "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" diff.patch\n\nSend patch "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" via Slack, etc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# dev2 applies changes from the patch file")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" apply diff.patch\n")])])])]),t._v(" "),s("li")]),t._v(" "),s("h2",{attrs:{id:"patch"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#patch"}},[t._v("#")]),t._v(" patch")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# create patch\ngit format-patch -1 HEAD\n\n# show stats\ngit apply --stat file.patch\n\n# check error\ngit apply --check file.patch\n\n# apply the patch finally\ngit am < file.patch\n")])])]),s("h2",{attrs:{id:"hub"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hub"}},[t._v("#")]),t._v(" hub")]),t._v(" "),s("p",[t._v("在 github 上新建仓库")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("brew "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" hub\nhub create -d "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"My new thing"')]),t._v("\n")])])]),s("h2",{attrs:{id:"成员管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#成员管理"}},[t._v("#")]),t._v(" 成员管理")]),t._v(" "),s("p",[t._v("两个人可以操作同一个分支，三个人以上最好用特性分支")]),t._v(" "),s("h2",{attrs:{id:"从别的-fork-拉取更新"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#从别的-fork-拉取更新"}},[t._v("#")]),t._v(" 从别的 fork 拉取更新")]),t._v(" "),s("p",[t._v("场景是别人 fork 了我的仓库，然后有更新，我想把那些更新合并的自己仓库，可能需要解决冲突\n"),s("code",[t._v("git pull otherRepo branch")])]),t._v(" "),s("h2",{attrs:{id:"本地-git-设置多账户"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#本地-git-设置多账户"}},[t._v("#")]),t._v(" 本地 Git 设置多账户")]),t._v(" "),s("h3",{attrs:{id:"配置-ssh"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置-ssh"}},[t._v("#")]),t._v(" 配置 SSH")]),t._v(" "),s("p",[t._v("编辑 "),s("code",[t._v("～/.ssh/config")]),t._v("，没有的话创建\nHost 可看成别名，用作区分，后面要用\n下面是我实际用的配置")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Host github-cyio\n    HostName        github.com\n    User            git\n    IdentityFile    /home/oops/.ssh/id_github\n\nHost osc-xid\n    HostName        git.oschina.net\n    User            git\n    IdentityFile    /home/oops/.ssh/id_rsa_oschina_xid\n\nHost osc-cyio\n    HostName        git.oschina.net\n    User            git\n    IdentityFile    /home/oops/.ssh/id_rsa\n")])])]),s("h3",{attrs:{id:"为不同项目配置对应的-remote"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为不同项目配置对应的-remote"}},[t._v("#")]),t._v(" 为不同项目配置对应的 remote")]),t._v(" "),s("p",[t._v("编辑"),s("code",[t._v(".git/config")]),t._v("，remote -> url，设置为： "),s("code",[t._v("git@<host-in-ssh-config>:<username>/<repo>")])]),t._v(" "),s("p",[t._v("或者用命令添加： "),s("code",[t._v("git remote set-url origin git@<host-in-ssh-config>:<username>/<repo>")]),t._v("\n这是我实际添加的： "),s("code",[t._v("git remote set-url origin git@osc-cyio:cyio/os.git")])]),t._v(" "),s("h3",{attrs:{id:"为不同项目配置对应的-email-和-name"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为不同项目配置对应的-email-和-name"}},[t._v("#")]),t._v(" 为不同项目配置对应的 email 和 name")]),t._v(" "),s("p",[t._v("取消 global")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git config --global --unset user.name\ngit config --global --unset user.email\n")])])]),s("p",[t._v("设置每个项目 repo 的自己的 user.email")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('git config  user.email "xxxx@xx.com"\ngit config  user.name "suzie"\n')])])]),s("p",[t._v("参考：\n"),s("a",{attrs:{href:"https://gist.github.com/jexchan/2351996",target:"_blank",rel:"noopener noreferrer"}},[t._v("Multiple SSH keys for different github accounts"),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"http://m.oschina.net/blog/220158",target:"_blank",rel:"noopener noreferrer"}},[t._v("如何在一台电脑上使用两个 git@osc 的账号进行操作"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"debug"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#debug"}},[t._v("#")]),t._v(" debug")]),t._v(" "),s("p",[s("code",[t._v('ssh -vv "your githost"')]),t._v("为什么要用这个，因为参数"),s("code",[t._v("-T")]),t._v("，即使返回成功，配置也可能不行（push 时还会问账密）")]),t._v(" "),s("h2",{attrs:{id:"文件大小写重命名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文件大小写重命名"}},[t._v("#")]),t._v(" 文件大小写重命名")]),t._v(" "),s("p",[t._v("注意，不要用"),s("code",[t._v("git config core.ignorecase false")]),t._v("，mv > git add 方式重名名后，分支无法直接合并")]),t._v(" "),s("p",[t._v("正确操作")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git mv <old name> <new name>\ngit status\n")])])]),s("p",[t._v("由于 git 对大小写不敏感，同名文件 git mv 时会提示错误"),s("code",[t._v("Invalid argument")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git mv casesensitive tmp\ngit mv tmp CaseSensitive\n")])])]),s("p",[s("a",{attrs:{href:"https://stackoverflow.com/questions/11183788/in-a-git-repository-how-to-properly-rename-a-directory/11183844",target:"_blank",rel:"noopener noreferrer"}},[t._v("In a Git repository, how to properly rename a directory? - Stack Overflow"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"git-仓库删除文件-夹-本地不删除"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-仓库删除文件-夹-本地不删除"}},[t._v("#")]),t._v(" git 仓库删除文件/夹，本地不删除")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# For single file:\ngit rm --cached mylogfile.log\n\n# For single directory:\ngit rm --cached -r mydirectory\n")])])]),s("h2",{attrs:{id:"只是查看旧-commit-不要-reset"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#只是查看旧-commit-不要-reset"}},[t._v("#")]),t._v(" 只是查看旧 commit，不要 reset")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git checkout xxx\ngit checkout master # 根据你的分支名修改\n\ngit checkout HEAD^ # 检出前一个\ngit checkout HEAD~3 # 检出前三个\n")])])]),s("h2",{attrs:{id:"意外-reset-了怎么办"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#意外-reset-了怎么办"}},[t._v("#")]),t._v(" 意外 reset 了怎么办")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git reflog # 打印出 git 切换步骤记录\ngit reset HEAD@{1} # 根据步骤跳转\n")])])]),s("h2",{attrs:{id:"部分提交"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#部分提交"}},[t._v("#")]),t._v(" 部分提交")]),t._v(" "),s("p",[t._v("可以反复按下面步骤操作：")]),t._v(" "),s("ol",[s("li",[t._v("add 需要提交的文件或代码")]),t._v(" "),s("li",[t._v("暂存其余，以便测试将要提交代码，"),s("code",[t._v("-u untracked 包括新文件 -k 保持文件完整")])])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git add somefile\ngit stash -u -k\n")])])]),s("h2",{attrs:{id:"暂存某个文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#暂存某个文件"}},[t._v("#")]),t._v(" 暂存某个文件")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("git stash -p")]),t._v("，需要跳过某个更改，按"),s("code",[t._v("d")]),t._v("，能满足文件改动不多的情况")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git stash push -m welcome_cart app/views/cart/welcome.thtml\n")])])]),s("ul",[s("li",[t._v("stash 是略简化的 branch，所以直接用 branch 就好了")])]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b tmpbranch\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" the_file\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stashing the_file"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout master\n")])])]),s("p",[s("a",{attrs:{href:"https://stackoverflow.com/questions/12420924/stash-just-a-single-file",target:"_blank",rel:"noopener noreferrer"}},[t._v("git - Stash just a single file - Stack Overflow"),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://css-irl.info/how-git-stash-can-help-you-juggle-multiple-branches/",target:"_blank",rel:"noopener noreferrer"}},[t._v("CSS { In Real Life } | How Git Stash Can Help You Juggle Multiple Branches"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"zsh-alias"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#zsh-alias"}},[t._v("#")]),t._v(" zsh alias")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("v")]),t._v(" ~/.oh-my-zsh/plugins/git/git.plugin.zsh\n")])])]),s("h2",{attrs:{id:"push-策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#push-策略"}},[t._v("#")]),t._v(" push 策略")]),t._v(" "),s("p",[t._v("git 默认是 simple 与 upstream 差不多，区别是不允许不同名推，防止新手覆盖\n用 upstream 即可\n"),s("a",{attrs:{href:"http://thekaiway.com/2013/07/30/config-your-git-push-strategy/",target:"_blank",rel:"noopener noreferrer"}},[t._v("配置 Git Push 策略 - The Kai Way"),s("OutboundLink")],1)]),t._v(" "),s("ul",[s("li",[t._v("设置关联 "),s("code",[t._v("git branch --set-upstream-to=origin/YOUR_BRANCH YOUR_BRANCH")]),t._v("，最好新建分支后就执行，方便后续推拉")])]),t._v(" "),s("h2",{attrs:{id:"统计文件修改"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#统计文件修改"}},[t._v("#")]),t._v(" 统计文件修改")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git log --name-status\n")])])]),s("h2",{attrs:{id:"git-push"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-push"}},[t._v("#")]),t._v(" git push")]),t._v(" "),s("p",[t._v("use “git push --force-with-lease” instead. It adds some safety in case a coworker pushed code you haven’t pulled")]),t._v(" "),s("h2",{attrs:{id:"本地与远端不一致-重置到远端版本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#本地与远端不一致-重置到远端版本"}},[t._v("#")]),t._v(" 本地与远端不一致，重置到远端版本")]),t._v(" "),s("p",[t._v("git pull after forced update\n拉取强制更新过的代码")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git fetch\ngit reset origin/dev --hard\n")])])]),s("h2",{attrs:{id:"何时删除旧分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#何时删除旧分支"}},[t._v("#")]),t._v(" 何时删除旧分支")]),t._v(" "),s("p",[t._v("可以安全删除，如何分支包含未合并的代码，git 会阻止删除")]),t._v(" "),s("p",[t._v("列出未合并分支")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git branch --no-merged\ngit branch --merged\n")])])]),s("p",[t._v("建议打 tag，如果想加书签的话")]),t._v(" "),s("h2",{attrs:{id:"清理分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#清理分支"}},[t._v("#")]),t._v(" 清理分支")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://railsware.com/blog/2014/08/11/git-housekeeping-tutorial-clean-up-outdated-branches-in-local-and-remote-repositories/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git housekeeping tutorial: clean-up outdated branches in local and remote repositories | Blog by Railsware"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"上线流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#上线流程"}},[t._v("#")]),t._v(" 上线流程")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://blog.csdn.net/Hedy17/article/details/83084149",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git 开发分支代码上线流程 - 王静静的博客 - CSDN博客"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.git-tower.com/learn/git/ebook/cn/command-line/advanced-topics/git-flow",target:"_blank",rel:"noopener noreferrer"}},[t._v("git-flow 的工作流程"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow",target:"_blank",rel:"noopener noreferrer"}},[t._v("Gitflow Workflow | Atlassian Git Tutorial"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"比较两个分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#比较两个分支"}},[t._v("#")]),t._v(" 比较两个分支")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("git diff branch1 branch2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("stat\n")])])]),s("h2",{attrs:{id:"rebase"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rebase"}},[t._v("#")]),t._v(" rebase")]),t._v(" "),s("ul",[s("li",[t._v("pick, squash(合并到上一个), fixup(类似squash，但丢弃消息), edit, reword, and drop\n重新排序、省略、合并或修改")]),t._v(" "),s("li",[t._v("尽量只 rebase 本地 commits，避免强制重写远程，他人需要重新合并\n使用场景：")]),t._v(" "),s("li",[t._v("将多个提交折叠为单个提交")]),t._v(" "),s("li",[t._v("重新提交")]),t._v(" "),s("li",[t._v("删除您现在后悔的错误更改")]),t._v(" "),s("li",[t._v("将分支的基础移动到存储库中的任何其他提交。")]),t._v(" "),s("li",[t._v("修改单个提交，以在事后很久修改更改。")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("brew install interactive-rebase-tool\n")])])]),s("p",[s("a",{attrs:{href:"https://thoughtbot.com/blog/git-interactive-rebase-squash-amend-rewriting-history",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git Interactive Rebase, Squash, Amend and Other Ways of Rewriting History"),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://github.com/xitu/gold-miner/blob/master/TODO1/keeping-git-commit-history-clean.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("gold-miner/keeping-git-commit-history-clean.md at master · xitu/gold-miner"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"filemode-change"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#filemode-change"}},[t._v("#")]),t._v(" filemode change")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://stackoverflow.com/a/44866012/5657916",target:"_blank",rel:"noopener noreferrer"}},[t._v('git gui - How do I remove files saying "old mode 100755 new mode 100644" from unstaged changes in Git? - Stack Overflow'),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"unadd"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#unadd"}},[t._v("#")]),t._v(" unadd")]),t._v(" "),s("p",[t._v("将改动从 index 移除\n"),s("code",[t._v("git reset <file>")]),t._v(" or "),s("code",[t._v("git reset")])]),t._v(" "),s("h2",{attrs:{id:"hooks"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hooks"}},[t._v("#")]),t._v(" hooks")]),t._v(" "),s("h2",{attrs:{id:"三路合并"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三路合并"}},[t._v("#")]),t._v(" 三路合并")]),t._v(" "),s("p",[t._v("比如双方同时改了某一行，只能人工 review 合并")]),t._v(" "),s("p",[t._v("公共组先部分，作为参考，分辨改动")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://juejin.im/post/5c3e9de86fb9a049b5071413",target:"_blank",rel:"noopener noreferrer"}},[t._v("【Mac】升级 Git 版本 - 掘金"),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://stackoverflow.com/questions/27417656/should-diff3-be-default-conflictstyle-on-git",target:"_blank",rel:"noopener noreferrer"}},[t._v("git diff - Should diff3 be default conflictstyle on git? - Stack Overflow"),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/78505692",target:"_blank",rel:"noopener noreferrer"}},[t._v("快速处理 git 合并冲突 - 知乎"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"显示未跟踪文件夹详情"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#显示未跟踪文件夹详情"}},[t._v("#")]),t._v(" 显示未跟踪文件夹详情")]),t._v(" "),s("p",[s("code",[t._v("git status --untracked-files=all")])]),t._v(" "),s("h2",{attrs:{id:"分支比较"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分支比较"}},[t._v("#")]),t._v(" 分支比较")]),t._v(" "),s("p",[t._v("比较当前分支与 master")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log origin/master"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("HEAD --oneline --no-merges\n")])])]),s("h2",{attrs:{id:"git-gui"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-gui"}},[t._v("#")]),t._v(" Git GUI")]),t._v(" "),s("p",[t._v("一行短命令，命令行更方便")]),t._v(" "),s("p",[t._v("复杂的操作如 merge，GUI 能提供比命令行大得多的信息密度")]),t._v(" "),s("h2",{attrs:{id:"可选合并"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#可选合并"}},[t._v("#")]),t._v(" 可选合并")]),t._v(" "),s("p",[t._v("场景，重构等改动较大，要合入 master\n"),s("a",{attrs:{href:"https://gist.github.com/katylava/564416",target:"_blank",rel:"noopener noreferrer"}},[t._v("git selective merge"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"查看分支是否落后"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看分支是否落后"}},[t._v("#")]),t._v(" 查看分支是否落后")]),t._v(" "),s("p",[t._v("开始新迭代开发或上线前，都应该检查")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rev-list --left-right --count origin/master"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".test-branch\n")])])]),s("p",[t._v("输出 0 2，表示 test-branch 相对于 master 落后 0 commit，领先 2 commit")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://stackoverflow.com/questions/20433867/git-ahead-behind-info-between-master-and-branch",target:"_blank",rel:"noopener noreferrer"}},[t._v("github - git ahead/behind info between master and branch? - Stack Overflow"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"巨石仓库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#巨石仓库"}},[t._v("#")]),t._v(" 巨石仓库")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone --depth "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" --no-single-branch\n")])])]),s("h2",{attrs:{id:"多个工作区"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多个工作区"}},[t._v("#")]),t._v(" 多个工作区")]),t._v(" "),s("ul",[s("li",[t._v("可以避免来回 stash，污染工作区，丢失变更")]),t._v(" "),s("li",[t._v("避免克隆多个相同仓库")])]),t._v(" "),s("p",[s("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/92906230",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git屠龙技：使用Git Worktree并行开发测试 - 知乎"),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://jasonkayzk.github.io/2020/05/03/Git-Worktree%25E7%259A%2584%25E4%25BD%25BF%25E7%2594%25A8/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git Worktree的使用 - 张小凯的博客"),s("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=r.exports}}]);