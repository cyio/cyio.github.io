(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{464:function(e,t,o){"use strict";o.r(t);var v=o(57),r=Object(v.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"mobx"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#mobx"}},[e._v("#")]),e._v(" Mobx")]),e._v(" "),o("ul",[o("li",[e._v("autorun 立即执行一次")]),e._v(" "),o("li",[e._v("reaction(() => data, () => {}) 第一个参数返回观察数据")]),e._v(" "),o("li",[e._v("when(() => boolean, () => {}) 第一参数返回布尔值，为真时执行一次，然后销毁")])]),e._v(" "),o("p",[o("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/24613915",target:"_blank",rel:"noopener noreferrer"}},[e._v("[干货] 使用 Mobx 更好地处理 React 数据 - 知乎专栏"),o("OutboundLink")],1)]),e._v(" "),o("h2",{attrs:{id:"子组件较多时，如何用-mobx-传递和共享数据"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#子组件较多时，如何用-mobx-传递和共享数据"}},[e._v("#")]),e._v(" 子组件较多时，如何用 mobx 传递和共享数据")]),e._v(" "),o("p",[e._v("眼下的做法是父子共用一个 store，缺点是相互影响，很多数据需要手动重置")]),e._v(" "),o("p",[e._v("正确的做法是严格从上往下传数据，下级如果要改数据，使用回调")]),e._v(" "),o("p",[e._v("答案是 Provider 和 inject")]),e._v(" "),o("h2",{attrs:{id:"mobx-react"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#mobx-react"}},[e._v("#")]),e._v(" mobx-react")]),e._v(" "),o("ul",[o("li",[o("p",[o("code",[e._v("Observer")]),e._v("是一个组件，应用"),o("code",[e._v("observer")]),e._v("到你的组件的匿名区域，接受一个无参数函数，精确返回一个组件\n使用装饰器，不用关注这一点")])]),e._v(" "),o("li",[o("p",[o("code",[e._v("onError")]),e._v("全局错误处理，能避免导致应用崩溃，而是打印到日志")])]),e._v(" "),o("li",[o("p",[e._v("哪些组件应该标记为"),o("code",[e._v("observer")]),e._v("?\n所有需要渲染可观察数据的组件")])]),e._v(" "),o("li",[o("p",[o("code",[e._v("shouldComponentUpdate")]),e._v("应避免使用，由于 mobx 会默认提供一个高度优化的"),o("code",[e._v("shouldComponentUpdate")]),e._v("实现")])]),e._v(" "),o("li",[o("p",[o("code",[e._v("componentWillReact")]),e._v(" 是自动的，mobx 的数据变化，就会响应")])]),e._v(" "),o("li",[o("p",[o("code",[e._v("Provider")]),e._v("是一个组件，通过 React 的上下文机制传递 stores 给子组件，而"),o("code",[e._v("inject")]),e._v("则是选取 stores\n同时使用"),o("code",[e._v("@inject")]),e._v("和"),o("code",[e._v("@observer")]),e._v("时，"),o("code",[e._v("@inject")]),e._v("写在外面")])])]),e._v(" "),o("h2",{attrs:{id:"学习-mobx-react-todomvc"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#学习-mobx-react-todomvc"}},[e._v("#")]),e._v(" 学习 mobx-react-todomvc")]),e._v(" "),o("ul",[o("li",[e._v("多了个 todoModal 类，传四个参数，store, id, title, completed\n一些 todo 操作方法，加上与对象转换的方法")]),e._v(" "),o("li",[e._v("id 随机生成")]),e._v(" "),o("li",[e._v("子组件之所以能修改数据，就是从父级传下来不只是某个值，而是包括修改方法的类")])])])}),[],!1,null,null,null);t.default=r.exports}}]);