import{r as e,o as n,c as a,a as s,w as t,F as p,b as r,d as o}from"./app.31fc93bc.js";const l={},i=s("h2",{id:"vue-源码学习",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#vue-源码学习","aria-hidden":"true"},"#"),r(" Vue 源码学习")],-1),u={class:"table-of-contents"},c=r("Vue 源码学习"),d=r("源码"),h=r("学习方法"),f=o('<h2 id="源码" tabindex="-1"><a class="header-anchor" href="#源码" aria-hidden="true">#</a> 源码</h2><p>从正式发布的第一个版本读 0.01-0.03</p><blockquote><p>v0.7.0 最低版本</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span>\n  <span class="token keyword">function</span> <span class="token function">ViewModel</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span>\n    <span class="token keyword">new</span> <span class="token class-name">Compiler</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>this 表示 vm instance,</p><p>核心流程在 compiler.js</p><p>Compiler 构造函数，原型扩展方法</p><p>有很多连续赋值</p><p>初始化元素：setupElement 确定 el，深拷贝 template 并返回 el</p><p>partial 类似 slot？</p><h2 id="学习方法" tabindex="-1"><a class="header-anchor" href="#学习方法" aria-hidden="true">#</a> 学习方法</h2><p>源码断点</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    resolve<span class="token operator">:</span> <span class="token punctuation">{</span>\n      alias<span class="token operator">:</span> <span class="token punctuation">{</span>\n        vue$<span class="token operator">:</span> <span class="token string">&#39;vue/dist/vue.esm.js&#39;</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><code>Object.defineProperty()</code>可以为 object 新增或修改属性</p><p>通过全局方法<code>Vue.use()</code>使用插件</p><p>&#39;component&#39;, &#39;directive&#39;, &#39;filter&#39;</p><p>Vue 构造函数传递</p><p>initMixin 原型继承来扩展</p><p>let uid = 0 vm._uid = uid++</p><p>vm this</p><p>unwatch 闭包</p><p>data 代理，对外接口，劫持 set 警告 prop 只读</p><p>for 优化 let i = 0, l = cbs.length</p><p>事件注册，可接收数组 (vm._events[event] || (vm._events[event] = [])).push(fn)</p>',24),m={href:"https://juejin.cn/post/6888558610923110407",target:"_blank",rel:"noopener noreferrer"},b=r("Vue2.0源码分析：Rollup构建，目录设计和整体流程"),g=o("<p>初始化主线逻辑一目了然</p><blockquote><p>Vue 实例挂载的实现 | Vue.js 技术揭秘</p></blockquote><p>vnode create diff patch</p><p>isDef isUndef helper 是否定义</p><p>observer defineReactive 封装了 Object.defineProperty 对象属性观察者，收集依赖、派发更新</p><p>数据是被观察者，setter 订阅的 watcher 触发 update</p><p>Dep 是对 Watcher 的管理</p><p>初始化、更新两个阶段，diff patch 发生在更新时</p><p>Watcher负责收集依赖，清除依赖和通知依赖</p><p>虚拟 dom 与实际 dom 解耦，能运行于非浏览器，RN/Weex 原因</p><p>diff策略 React用 三大策略 将O(n^3)复杂度 转化为 O(n)复杂度 策略一（tree diff）： Web UI中DOM节点跨层级的移动操作特别少，可以忽略不计。 策略二（component diff）： 拥有相同类的两个组件 生成相似的树形结构， 拥有不同类的两个组件 生成不同的树形结构。 策略三（element diff）： 对于同一层级的一组子节点，通过唯一 key 区分。</p>",11),v={href:"https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/151#issuecomment-510311760",target:"_blank",rel:"noopener noreferrer"},k=r("第 97 题：React 和 Vue 的 diff 时间复杂度从 O(n^3) 优化到 O(n) ，那么 O(n^3) 和 O(n) 是如何计算出来的？ · Issue #151 · Advanced-Frontend/Daily-Interview-Question"),w={href:"https://www.jianshu.com/p/398e63dc1969",target:"_blank",rel:"noopener noreferrer"},y=r("传统diff、react优化diff、vue优化diff - 简书"),j={href:"https://github.com/aooy/blog/issues/2",target:"_blank",rel:"noopener noreferrer"},E=r("解析vue2.0的diff算法 · Issue #2 · aooy/blog"),V={href:"https://juejin.cn/post/6844903870229905422#heading-7",target:"_blank",rel:"noopener noreferrer"},_=r("虚拟 DOM 到底是什么？"),D={href:"https://github.com/YangPengFe1/yunydemo/issues/7",target:"_blank",rel:"noopener noreferrer"},x=r("关于vue的diff算法 · Issue #7 · YangPengFe1/yunydemo"),O={href:"https://github.com/isaaxite/blog/blob/master/docs/vue-analysis/vue%25E4%25B8%25AD%25E7%259A%2584diff%25E7%25AE%2597%25E6%25B3%2595%25E5%25AE%259E%25E7%258E%25B0%255Bwritting..%255D.md",target:"_blank",rel:"noopener noreferrer"},A=r("blog/vue中的diff算法实现[writting..].md at master · isaaxite/blog"),M={href:"https://github.com/answershuto/learnVue/blob/master/docs/VirtualDOM%25E4%25B8%258Ediff(Vue%25E5%25AE%259E%25E7%258E%25B0).MarkDown",target:"_blank",rel:"noopener noreferrer"},q=r("learnVue/VirtualDOM与diff(Vue实现).MarkDown at master · answershuto/learnVue"),I={href:"https://github.com/lihongxun945/myblog/issues/33",target:"_blank",rel:"noopener noreferrer"},R=r("Vue2.x源码解析系列十：Patch和Diff 算法 · Issue #33 · lihongxun945/myblog"),B=r("人"),P=o('<p>数组观察，改写内部指针 if (Array.isArray(value)) { if (hasProto) { protoAugment(value, arrayMethods)</p><p>src/core/observer/array.js</p><p>data msg <strong>ob</strong> id subs</p><p>Dep.target 目标 watcher，单例，是一时间只能执行一个 watcher 是什么</p><p>Dep.target = null const targetStack = []</p><p>obj walk for keys</p><p>mountComponent new Watcher(vm, updateComponent</p><p>if (isRenderWatcher) { vm._watcher = this; } vm._watchers.push(this); watcher 将自身添加 vm</p><p>更新组件方法作为 getter</p><p>数据结构 quene</p><p>flushSchedulerQueue</p><p>一个页面有多个组件，数据变化了，要通知哪个组件更新？挂载某个组件时，作为此时唯一 watcher，访问到某个属性，则将 watcher 添加对属性订阅者</p><p><img src="http://ww1.sinaimg.cn/large/4e5d3ea7ly1h0cm1rqqz6j20f009wmys.jpg" alt="异步渲染原理"><img src="http://ww1.sinaimg.cn/large/4e5d3ea7ly1h0cm3a0b3vj20eh0h8mzl.jpg" alt="响应式原理"></p>',13);l.render=function(r,o){const l=e("RouterLink"),W=e("OutboundLink");return n(),a(p,null,[i,s("nav",u,[s("ul",null,[s("li",null,[s(l,{to:"#vue-源码学习"},{default:t((()=>[c])),_:1})]),s("li",null,[s(l,{to:"#源码"},{default:t((()=>[d])),_:1})]),s("li",null,[s(l,{to:"#学习方法"},{default:t((()=>[h])),_:1})])])]),f,s("p",null,[s("a",m,[b,s(W)])]),g,s("p",null,[s("a",v,[k,s(W)])]),s("p",null,[s("a",w,[y,s(W)])]),s("p",null,[s("a",j,[E,s(W)])]),s("p",null,[s("a",V,[_,s(W)])]),s("p",null,[s("a",D,[x,s(W)])]),s("p",null,[s("a",O,[A,s(W)])]),s("p",null,[s("a",M,[q,s(W)])]),s("p",null,[s("a",I,[R,s(W)]),B]),P],64)};export default l;
