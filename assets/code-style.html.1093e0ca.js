import{d as a}from"./app.31fc93bc.js";const e={},i=a('<h1 id="代码风格" tabindex="-1"><a class="header-anchor" href="#代码风格" aria-hidden="true">#</a> 代码风格</h1><h2 id="css" tabindex="-1"><a class="header-anchor" href="#css" aria-hidden="true">#</a> CSS</h2><ul><li>属性名一律小写，除了个别字体名。</li><li>允许嵌套的情形：伪元素，伪类，组件状态，媒体查询</li></ul><h2 id="html" tabindex="-1"><a class="header-anchor" href="#html" aria-hidden="true">#</a> HTML</h2><ul><li>文本、图像、链接等内联元素不能直接暴露在 body 标签中，必须用其他标签包裹</li><li>内联元素不能包含块级元素</li><li>优先用语义化标签</li><li>body 中设置文字大小 font-size：63%，在需要设置 12px 的地方设置文字大小为 1.2em，以此类推 14px 相对 1.4em</li></ul><h2 id="javascript" tabindex="-1"><a class="header-anchor" href="#javascript" aria-hidden="true">#</a> JavaScript</h2><p>变量用 camelCase ，类用 CamelCase</p><h2 id="js-严格模式下的编写要求" tabindex="-1"><a class="header-anchor" href="#js-严格模式下的编写要求" aria-hidden="true">#</a> JS 严格模式下的编写要求</h2><p><code>&#39;use strict&#39;</code></p><ul><li>变量使用前必须先声明</li><li>使用对象字面量时，属性名必须唯一</li><li>要求参数唯一，在函数内部改变参数会报错</li></ul>',10);e.render=function(a,e){return i};export default e;
