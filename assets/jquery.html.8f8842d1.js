import{d as n}from"./app.31fc93bc.js";const s={},a=n('<h2 id="常用代码" tabindex="-1"><a class="header-anchor" href="#常用代码" aria-hidden="true">#</a> 常用代码</h2><ul><li><p>隐藏动画</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slideToggle</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">,</span> <span class="token string">&quot;swing&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;Animation Completed!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li><li><p>显示错误</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token string">&quot;There was an error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li><li><p>初始时机</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n <span class="token comment">// jQuery code go here...</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>或者这样</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token operator">...</span>\n<span class="token punctuation">}</span>\n<span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span>doSomething<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>简写版本</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n <span class="token comment">// jQuery methods go here...</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li></ul><h2 id="选择器" tabindex="-1"><a class="header-anchor" href="#选择器" aria-hidden="true">#</a> 选择器</h2><ul><li><p>第一个</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;ul li:first&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li><li><p>没有后代</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;:empty&quot;</span><span class="token punctuation">)</span>\n<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;p:empty&quot;</span><span class="token punctuation">)</span>    <span class="token comment">// 没有后代的p</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li><li><p>选择多个，类似CSS</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;code, em, strong&quot;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li><li><p>否定排除</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;li:not(.mukund)&quot;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li><li><p>相比于类 CSS 的选择器写法，用 find 性能更好</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#apress&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&quot;div.mukund&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li><li><p>避免使用复杂的查询，尽量简单</p></li><li><p>避免使用全局选择器</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span> <span class="token string">&quot;.buttons &gt; *&quot;</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 可能很慢</span>\n<span class="token function">$</span><span class="token punctuation">(</span> <span class="token string">&quot;.buttons&quot;</span> <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// 推荐使用</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li><li><p>each的使用</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>\n<span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token function">$</span><span class="token punctuation">(</span> <span class="token string">&quot;li&quot;</span> <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span> <span class="token parameter">index</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span> index <span class="token operator">+</span> <span class="token string">&quot;: &quot;</span> <span class="token operator">+</span> <span class="token function">$</span><span class="token punctuation">(</span> <span class="token keyword">this</span> <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>\n    \n    <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token function">$</span><span class="token punctuation">(</span> <span class="token keyword">this</span> <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span> <span class="token string">&quot;#stop&quot;</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>\n     <span class="token function">$</span><span class="token punctuation">(</span> <span class="token string">&quot;span&quot;</span> <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span> <span class="token string">&quot;Stopped at div index #&quot;</span> <span class="token operator">+</span> index <span class="token punctuation">)</span><span class="token punctuation">;</span>\n     <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span>body<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span>ul<span class="token operator">&gt;</span>\n <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span>John<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>\n <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span>Doe<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">&gt;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div></li></ul><h3 id="选择语法" tabindex="-1"><a class="header-anchor" href="#选择语法" aria-hidden="true">#</a> 选择语法</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>first 第一个子元素\nfirst:child 集合\n+ 下一个\n~ 全部同辈\ncontains 包含字符\nhas 包含选择器\nhidden 全部不可见\n[title=attr] 属性\n[title!=attr] 不包含属性\n[title*=attr] 通配包含\neq(index) 索引位置\n空格 后代元素\n逗号 多个元素\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="表单" tabindex="-1"><a class="header-anchor" href="#表单" aria-hidden="true">#</a> 表单</h3><p>input img radio checked selected password</p><h3 id="操作dom" tabindex="-1"><a class="header-anchor" href="#操作dom" aria-hidden="true">#</a> 操作DOM</h3><p>css 要用大括号 append appendTo clone replaceWith 跟内容 replaceAll 跟选择器 wrap wrapInner 内容 remove 移除 empty 仅清空内容</p><h3 id="事件" tabindex="-1"><a class="header-anchor" href="#事件" aria-hidden="true">#</a> 事件</h3><p>.bind(&quot;event1 event2&quot;, function()) 多个事件</p><h3 id="杂记" tabindex="-1"><a class="header-anchor" href="#杂记" aria-hidden="true">#</a> 杂记</h3><p>$() 三个调用方式：CSS选择器，Element、Document或Window对象，HTML文本。 $.each() 函数 .each() 方法（没有美元） x.html 等价于 x[0].innerHTML innerWidth() 和 outerWidth() 的区别是，后者包括border toggle(f, g, h) 循环执行 .bind(&#39;mouseover.myMod&#39;, f) 设置命名空间 $(&quot;form&quot;).submit() 等价于 $(&quot;form&quot;).trigger(&quot;submit&quot;) $().event.trigger() 指定事件更高效 实时事件依赖于事件冒泡 ? $.getScript() $.getJSON() 参一：内容，参二：Success，参三：XMLHttpRequest</p><h2 id="ajax" tabindex="-1"><a class="header-anchor" href="#ajax" aria-hidden="true">#</a> AJAX</h2><p>回调情景<code>done``fail</code>和<code>always</code></p>',16);s.render=function(n,s){return a};export default s;
