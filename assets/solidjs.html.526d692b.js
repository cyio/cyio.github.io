import{_ as t,r as e,o,c,a as n,b as a,F as l,e as u,d as p}from"./app.4239eb90.js";const r={},i=u(`<h1 id="solidjs" tabindex="-1"><a class="header-anchor" href="#solidjs" aria-hidden="true">#</a> SolidJS</h1><p>\u8BED\u6CD5\u7C7B\u4F3C React\uFF0C\u7F16\u8BD1 jS over \u865A\u62DF Dom\uFF0C\u501F\u9274 Svelte</p><p>granularity \u9897\u7C92\u5EA6</p><p>Signal - \u72B6\u6001 Memo - \u7F13\u5B58 Effect - \u8FFD\u8E2A</p><p>\u57FA\u4E8E\u89C2\u5BDF\u8005\u6A21\u5F0F</p><p>Vanishing Components \u6D88\u5931\u7684\u7EC4\u4EF6\uFF0C\u7EC4\u4EF6\u53EA\u662F\u7528\u6765\u7EC4\u7EC7\u4EE3\u7801</p><p>\u4EC5\u652F\u6301 FunctionComponent \u5199\u6CD5</p><ul><li>React \u72B6\u6001\u53D8\u5316\u540E\uFF0C\u901A\u8FC7\u91CD\u65B0\u6267\u884C Render \u51FD\u6570\u4F53\u54CD\u5E94\u72B6\u6001\u7684\u53D8\u5316\u3002</li><li>Solid \u72B6\u6001\u53D8\u5316\u540E\uFF0C\u901A\u8FC7\u91CD\u65B0\u6267\u884C\u7528\u5230\u8BE5\u72B6\u6001\u4EE3\u7801\u5757\u54CD\u5E94\u72B6\u6001\u7684\u53D8\u5316\u3002</li></ul><p>\u6838\u5FC3\u7406\u5FF5\uFF1A<strong>\u9762\u5411\u72B6\u6001\u9A71\u52A8\u800C\u4E0D\u662F\u9762\u5411\u89C6\u56FE\u9A71\u52A8</strong></p><p>createSignal \u4F7F\u7528\u7C7B\u4F3C useState</p><ul><li>\u53EF\u4EE5\u63D0\u5230\u5916\u9762</li><li>\u4E0D\u9700\u8981\u624B\u52A8\u7533\u660E deps \u6570\u7EC4</li><li>\u652F\u6301\u6761\u4EF6\u5206\u652F</li><li>\u6D3E\u751F\u72B6\u6001\u9700\u8981\u5199\u6210\u51FD\u6570\uFF0C\u4E0D\u5982 react \u65B9\u4FBF</li></ul><h2 id="signal-\u72B6\u6001" tabindex="-1"><a class="header-anchor" href="#signal-\u72B6\u6001" aria-hidden="true">#</a> signal - \u72B6\u6001</h2><p>\u54CD\u5E94\u5F0F\u7F16\u7A0B\uFF0C\u6536\u5230\u4FE1\u53F7\u540E\u66F4\u65B0</p><p>\u4E0D\u4F9D\u8D56\u6E32\u67D3\u51FD\u6570\uFF0C\u81EA\u52A8\u8FFD\u8E2A\u4F9D\u8D56\uFF0C\u4E0D\u9700\u8981\u624B\u52A8\u58F0\u660E</p><p>\u501F\u9274\u4E86React Hook\u7684\u601D\u60F3\uFF0C\u540C\u65F6\u4E5F\u4FDD\u7559\u4E86_Vue3_\u7684\u4F9D\u8D56\u6536\u96C6\u6A21\u578B</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">[</span>count<span class="token punctuation">,</span> setCount<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">createSignal</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setCount</span><span class="token punctuation">(</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p>\u57FA\u4E8E MutationObserver</p><p>\u4F18\u52BF</p><p>\u539F\u7406</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">createSignal</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> observed <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> pending <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> observers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> storedValue <span class="token operator">=</span> value<span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">check</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>observed<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>pending<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        pending <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>update<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">update</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>pending <span class="token operator">&amp;&amp;</span> observed<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> oldValue <span class="token operator">=</span> storedValue<span class="token punctuation">;</span>
      storedValue <span class="token operator">=</span> value<span class="token punctuation">;</span>
      pending <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
      observers<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">observer</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> observer<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">(</span>storedValue<span class="token punctuation">,</span> oldValue<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      observers <span class="token operator">=</span> observers<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">observer</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>observer<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          observer<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token punctuation">[</span>get<span class="token punctuation">,</span> set<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    observed <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token function">check</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> storedValue<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">newValue</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>newValue <span class="token operator">===</span> storedValue<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
    value <span class="token operator">=</span> newValue<span class="token punctuation">;</span>
    <span class="token function">check</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">set</span><span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token string">&quot;solidjs.dev&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span> update <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">[</span>get<span class="token punctuation">,</span> set<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br></div></div><h2 id="\u53C2\u8003" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003" aria-hidden="true">#</a> \u53C2\u8003</h2>`,21),k={href:"https://segmentfault.com/a/1190000042392152",target:"_blank",rel:"noopener noreferrer"},b=p("javascript - \u7CBE\u8BFB\u300ASolidJS\u300B - \u524D\u7AEF\u7CBE\u8BFB\u4E13\u680F - SegmentFault \u601D\u5426"),d={href:"https://www.pipipi.net/questions/16500.html",target:"_blank",rel:"noopener noreferrer"},m=p("\u6D45\u8C08\u524D\u7AEF\u6846\u67B6\u539F\u7406 - \u524D\u7AEF\u6559\u7A0B"),f=n("p",null,"\u54CD\u5E94\u5F0F\u3001\u865A\u62DFDOM\u3001\u9884\u7F16\u8BD1",-1),g=n("ul",null,[n("li",null,"React \u5C5E\u4E8E\u5E94\u7528\u7EA7\u6846\u67B6"),n("li",null,"Vue \u5C5E\u4E8E\u7EC4\u4EF6\u7EA7\u6846\u67B6"),n("li",null,"Svelte \u5C5E\u4E8E\u5143\u7D20\u7EA7\u6846\u67B6")],-1),h=n("p",null,"https://github.com/cyio/reactive-framework",-1);function v(_,w){const s=e("ExternalLinkIcon");return o(),c(l,null,[i,n("p",null,[n("a",k,[b,a(s)])]),n("p",null,[n("a",d,[m,a(s)])]),f,g,h],64)}var V=t(r,[["render",v],["__file","solidjs.html.vue"]]);export{V as default};
