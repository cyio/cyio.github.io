import{_ as e,r as p,o,c,a as n,b as t,F as l,e as r,d as s}from"./app.49e30594.js";const u={},i=r(`<h1 id="\u5982\u4F55\u4FDD\u8BC1-dom-\u66F4\u65B0\u540E\u6267\u884C" tabindex="-1"><a class="header-anchor" href="#\u5982\u4F55\u4FDD\u8BC1-dom-\u66F4\u65B0\u540E\u6267\u884C" aria-hidden="true">#</a> \u5982\u4F55\u4FDD\u8BC1 DOM \u66F4\u65B0\u540E\u6267\u884C</h1><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;msg&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerText <span class="token operator">=</span> <span class="token string">&#39;Hi!&#39;</span><span class="token punctuation">;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;Hi!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Q: \u4EC0\u4E48\u662F\u5B89\u5168\u7684\u65B9\u5F0F\uFF0C\u5F53 msg &quot;Hi&quot; \u663E\u793A\u5728\u9875\u9762\u540E\uFF0C\u518D\u6267\u884C alert</p><p>setTimeout 10 (chrome) \u53EF\u4EE5\uFF0C\u4F46\u662F\u592A\u7279\u5B9A\u4E86</p><p>MutationObserver \u4E0D\u884C\uFF0C\u4EC5\u54CD\u5E94\u6570\u636E\u53D8\u5316\uFF0C\u800C\u4E0D\u662F\u663E\u793A\u53D8\u5316</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> elem <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;msg&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> obs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MutationObserver</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;Hi!&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
obs<span class="token punctuation">.</span><span class="token function">observe</span><span class="token punctuation">(</span>elem<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">subtree</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">childList</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
elem<span class="token punctuation">.</span>innerText <span class="token operator">=</span> <span class="token string">&#39;Hi!&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>rAF \u53EF\u4EE5\uFF0C\u6CE8\u610F\u9700\u8981\u4E24\u5C42</p><p>event loop: rAF -&gt; style -&gt; layout -&gt; paint</p><p>\u6240\u4EE5\u7B2C\u4E00\u4E2A rAF \u6267\u884C\u5176\u5B9E\u662F\u548C\u9644\u8FD1\u7684\u4EE3\u7801\u5728\u4E00\u4E2A task \u91CC</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> elem <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;message&#39;</span><span class="token punctuation">)</span>
  elem<span class="token punctuation">.</span>innerText <span class="token operator">=</span> <span class="token string">&#39;Test&#39;</span>
  <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token comment">// make sure after first paint</span>
    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;Test&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>`,10),k={href:"https://mobile.twitter.com/rauschma/status/1288868746682081285",target:"_blank",rel:"noopener noreferrer"},m=s(` Axel Rauschmayer \u5728 Twitter: "document.getElementById('msg').innerText = 'Hi!'; setTimeout(() => { alert('Hi!'); }, 0); What\u2019s a safe way to ensure alert() always runs `),d=n("em",null,"after",-1),b=s(' the DOM change is displayed? \u2013 Timeouts > 10 work (in Chrome), but that seems arbitrary. \u2013 Or something other than setTimeout()?" / Twitter'),g={href:"https://www.bram.us/2018/02/09/jake-archibald-in-the-loop-taking-a-close-look-into-the-browsers-event-loop/",target:"_blank",rel:"noopener noreferrer"},h=s("Jake Archibald: \u201CIn The Loop\u201D \u2014 Taking a close look into the browser\u2019s Event Loop \u2013 Bram.us");function _(f,v){const a=p("ExternalLinkIcon");return o(),c(l,null,[i,n("p",null,[n("a",k,[m,d,b,t(a)])]),n("p",null,[n("a",g,[h,t(a)])])],64)}var w=e(u,[["render",_],["__file","ensure-run-after-dom-change.html.vue"]]);export{w as default};
