import{r as e,o as a,c as r,a as i,F as l,d as t,b as n}from"./app.0e74f851.js";const o={},h=t('<h1 id="web-前端安全" tabindex="-1"><a class="header-anchor" href="#web-前端安全" aria-hidden="true">#</a> Web 前端安全</h1><p>[toc]</p><p>crypto, TSL/SSL HTTPS XSS</p><h2 id="xss-跨站脚本攻击" tabindex="-1"><a class="header-anchor" href="#xss-跨站脚本攻击" aria-hidden="true">#</a> XSS 跨站脚本攻击</h2><p>在网页中植入恶意脚本</p><p>危害：获取用户 cookie</p><p>解决方式：</p><ul><li>HttpOnly</li><li>内容安全策略</li></ul><p>设置 header，做哈希验证</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>content-security-policy: script-src &#39;sha256-wxWy1+9LmiuOeDwtQyZNmWpT0jqCUikqaqVlJdtdh/0=&#39;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>避免使用<code>eval</code></p><p>Self-XSS 欺骗用户在控制台运行恶意代码</p><p>谷歌翻译的做法，在控制台显示信息警告用户</p><p>转义为实体字符，正则替换</p><h2 id="csrf-跨站请求伪造" tabindex="-1"><a class="header-anchor" href="#csrf-跨站请求伪造" aria-hidden="true">#</a> CSRF 跨站请求伪造</h2><ul><li>举例，合法调用接口设置 Gmail 转发，获取隐私邮件</li><li>第三方域名页面，发起合法请求</li></ul><p>解决：</p><ul><li>同源检查 origin/referer</li><li>CSRF Token，如表单提交必须带上 token。原理是攻击者只带 cookie 无法请求成功</li></ul>',18),c={href:"https://tech.meituan.com/2018/10/11/fe-security-csrf.html",target:"_blank",rel:"noopener noreferrer"},p=n("前端安全系列（二）：如何防止CSRF攻击？ - 美团技术团队"),s=i("h2",{id:"点击劫持-clickjacking",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#点击劫持-clickjacking","aria-hidden":"true"},"#"),n(" 点击劫持（ClickJacking）")],-1),d=i("p",null,"X-Frame-Options 防止页面被嵌入恶意利用",-1),u={href:"https://segmentfault.com/a/1190000037657222",target:"_blank",rel:"noopener noreferrer"},f=n("前端安全编码规范 - SegmentFault 思否"),k=i("h2",{id:"混合内容-http-https",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#混合内容-http-https","aria-hidden":"true"},"#"),n(" 混合内容（http + https）")],-1),m=i("ul",null,[i("li",null,"被动 image/media 威胁性低，可访问，但锁、控制台会提示"),i("li",null,"主动 script style iframe flash 拦截")],-1),b={href:"https://developers.google.com/web/fundamentals/security/prevent-mixed-content/what-is-mixed-content",target:"_blank",rel:"noopener noreferrer"},S=n("什么是混合内容？  |  Web  |  Google Developers"),g=t('<h2 id="cookie-相关" tabindex="-1"><a class="header-anchor" href="#cookie-相关" aria-hidden="true">#</a> cookie 相关</h2><ul><li>HttpOnly 限制 cookie 只能发请求携带，禁用 JS 读取。服务端设置<code>Set-Cookie</code>，减轻 XSS 攻击</li><li>SameSite 减轻 CSRF 攻击</li><li>会话 cookie（默认），页面关闭时移除</li><li>常驻 cookie</li></ul><h2 id="crypto" tabindex="-1"><a class="header-anchor" href="#crypto" aria-hidden="true">#</a> Crypto</h2><p>敏感数据加密保存</p><h2 id="中间人攻击" tabindex="-1"><a class="header-anchor" href="#中间人攻击" aria-hidden="true">#</a> 中间人攻击</h2>',5),x={href:"https://zh.wikipedia.org/wiki/%25E4%25B8%25AD%25E9%2597%25B4%25E4%25BA%25BA%25E6%2594%25BB%25E5%2587%25BB",target:"_blank",rel:"noopener noreferrer"},y=n("中间人攻击 - 维基百科，自由的百科全书"),v=i("p",null,"证书校验",-1);o.render=function(t,n){const o=e("OutboundLink");return a(),r(l,null,[h,i("p",null,[i("a",c,[p,i(o)])]),s,d,i("p",null,[i("a",u,[f,i(o)])]),k,m,i("p",null,[i("a",b,[S,i(o)])]),g,i("p",null,[i("a",x,[y,i(o)])]),v],64)};export default o;
