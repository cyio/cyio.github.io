import{r as e,o as r,c as s,a,F as n,b as o}from"./app.26466922.js";const l={},t=a("h1",{id:"webassembly",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#webassembly","aria-hidden":"true"},"#"),o(" WebAssembly")],-1),b={href:"https://developer.ibm.com/technologies/web-development/articles/why-webassembly-and-rust-together-improve-nodejs-performance/",target:"_blank",rel:"noopener noreferrer"},m=o("Why using WebAssembly and Rust improves Node.js performance – IBM Developer"),u=a("blockquote",null,[a("p",null,"只从 chrome 来说，因为 wasm 和 js 的字节码最后公用的 是同一个 优化编译器(turbo fan) 如果你的应用不是非常计算密集，加上js和 wasm 之间通信的额外消耗， 最后的性能可能和 js 写的应用差不多， 甚至比 js 版本还差")],-1),p=a("blockquote",null,[a("p",null,"如果你只是写一个功能比较简单的应用练练手，直接用 rust-wasm 一整套工具链(wasm-pack, wasm-bindgen)应该可以比较快的完成目标，大概率你应该不会遇到 rust 语言的坑，所有权等。")],-1),i={href:"https://ffmpegwasm.github.io/",target:"_blank",rel:"noopener noreferrer"},c=o("FFMPEG.WASM");l.render=function(o,l){const d=e("OutboundLink");return r(),s(n,null,[t,a("p",null,[a("a",b,[m,a(d)])]),u,p,a("p",null,[a("a",i,[c,a(d)])])],64)};export default l;
