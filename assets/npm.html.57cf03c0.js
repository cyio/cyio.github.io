import{r as n,o as e,c as a,a as l,w as s,F as r,b as o,d as p}from"./app.31fc93bc.js";const i={},t=l("h1",{id:"npm",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#npm","aria-hidden":"true"},"#"),o(" NPM")],-1),c={class:"table-of-contents"},d=o("npm 创建和发布一个包的步骤"),u=o("开销评估"),m=o("私有 npm 仓库"),h=o("npm 安装失败怎么办？"),b=o("安装或升级 npm，需要全局，需要 sudo 或 win 下的管理员权限"),f=o("解决 gulp 等全局安装后，找不到命令"),k=o("特殊包安装"),g=o("与 yarn 比较"),x=o("lockfile 可重现构建"),y=o("语义化版本"),v=o("npm windows unlink typescript 错误"),_=o("PNPM"),w=o("yarn 2（Berry）"),j=o("提示 gyp: No Xcode or CLT version detected"),P=o("生产构建"),q=o("源使用优先级"),N=o("私有仓库"),D=o("发布测试包"),M=p('<h2 id="npm-创建和发布一个包的步骤" tabindex="-1"><a class="header-anchor" href="#npm-创建和发布一个包的步骤" aria-hidden="true">#</a> npm 创建和发布一个包的步骤</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token builtin class-name">set</span> init.author.name <span class="token string">&quot;Oaker&quot;</span>\n<span class="token function">npm</span> <span class="token builtin class-name">set</span> init.author.email <span class="token string">&quot;icaner@qq.com &quot;</span>\n<span class="token function">npm</span> <span class="token builtin class-name">set</span> init.author.url <span class="token string">&quot;http://oaker.bid&quot;</span>\n\n<span class="token function">npm</span> init --yes\n<span class="token function">npm</span> init --scope<span class="token operator">=</span>cyio\n\n<span class="token function">npm</span> i mocha chai -D\n\n<span class="token function">mkdir</span> <span class="token builtin class-name">test</span> <span class="token operator">&amp;&amp;</span> <span class="token function">touch</span> test/test.js\n\n<span class="token function">npm</span> <span class="token builtin class-name">test</span>\n\n<span class="token function">git</span> tag v0.0.1\n<span class="token function">git</span> push origin master --tags\n<span class="token function">npm</span> publish --access public\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="开销评估" tabindex="-1"><a class="header-anchor" href="#开销评估" aria-hidden="true">#</a> 开销评估</h2>',3),O={href:"https://bundlephobia.com/",target:"_blank",rel:"noopener noreferrer"},T=o("bundlephobia"),A=l("h2",{id:"私有-npm-仓库",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#私有-npm-仓库","aria-hidden":"true"},"#"),o(" 私有 npm 仓库")],-1),C=l("ul",null,[l("li",null,"最简单 git 即可"),l("li",null,"不好的地方是，使用 npm update 是无法更新私有模块，想更新只能重新安装一次。好处是不用搭建服务。")],-1),E={href:"https://docs.npmjs.com/creating-and-publishing-private-packages",target:"_blank",rel:"noopener noreferrer"},I={href:"https://juejin.im/post/5a386b0d6fb9a0450f220c59",target:"_blank",rel:"noopener noreferrer"},L=o("5 分钟内 3 种方法搭建企业内部私有 npm 仓库 - 掘金"),B=l("h2",{id:"npm-安装失败怎么办",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#npm-安装失败怎么办","aria-hidden":"true"},"#"),o(" npm 安装失败怎么办？")],-1),H=l("ol",null,[l("li",null,[l("p",null,"网络解决 绝大多数安装出问题，是网络问题引起的，npm 包往往依赖 github。 比如 node-sass 安装时，要下载对应系统的二进制文件，如果下载失败可能就要本地编译。 解决思路是使用代理来装这些包，npm 支持设置 http(s)代理，不支持 socks，解决方法是用 proxychains。")]),l("li",null,[l("p",null,[o("手动 clone https://npmjs.org/package/xxx 把 xxx 换成你要装的包名，在页面找到其源码托管页，通常是 github 把源代码 clone 下来，放到"),l("code",null,"node_modules/xxx"),o("目录，检查这个目录下的 package.json，如果有依赖，按照同样方法操作。")])])],-1),S={href:"http://ucdok.com/articles/2013-09-26-npm-install-problems.html",target:"_blank",rel:"noopener noreferrer"},z=o("《Node.js 入门系列》—— NPM 安装第三方模块常见问题"),R={href:"https://github.com/fex-team/fis/issues/565",target:"_blank",rel:"noopener noreferrer"},W=o("NPM 使用问题汇总 · Issue #565 · fex-team/fis"),Y=p('<h2 id="安装或升级-npm-需要全局-需要-sudo-或-win-下的管理员权限" tabindex="-1"><a class="header-anchor" href="#安装或升级-npm-需要全局-需要-sudo-或-win-下的管理员权限" aria-hidden="true">#</a> 安装或升级 npm，需要全局，需要 sudo 或 win 下的管理员权限</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">npm</span> <span class="token function">install</span> -g <span class="token function">npm</span>\nproxychains <span class="token function">npm</span> <span class="token function">install</span> node-sass --save-dev\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="解决-gulp-等全局安装后-找不到命令" tabindex="-1"><a class="header-anchor" href="#解决-gulp-等全局安装后-找不到命令" aria-hidden="true">#</a> 解决 gulp 等全局安装后，找不到命令</h2><p>由于自定义了全局 npm 的路径，也就是 prefix，所以要告诉终端，执行如下命令</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> -e <span class="token string">&quot;export PATH=<span class="token variable"><span class="token variable">$(</span><span class="token function">npm</span> prefix -g<span class="token variable">)</span></span>/bin:<span class="token environment constant">$PATH</span>&quot;</span> <span class="token operator">&gt;&gt;</span> ~/.zshrc <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">source</span> ~/.zshrc\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="特殊包安装" tabindex="-1"><a class="header-anchor" href="#特殊包安装" aria-hidden="true">#</a> 特殊包安装</h2><ul><li>puppeteer <code>PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true yarn add puppeteer</code> 忽略 chromium 下载</li></ul><h2 id="与-yarn-比较" tabindex="-1"><a class="header-anchor" href="#与-yarn-比较" aria-hidden="true">#</a> 与 yarn 比较</h2>',8),U=o("yarn 管理全局模块有优势，可通过备份恢复 "),X={href:"https://zhuanlan.zhihu.com/p/36391490",target:"_blank",rel:"noopener noreferrer"},F=o("为什么我从 npm 到 yarn 再到 npm? - 知乎"),V=p('<h2 id="lockfile-可重现构建" tabindex="-1"><a class="header-anchor" href="#lockfile-可重现构建" aria-hidden="true">#</a> lockfile 可重现构建</h2><p>tldr:</p><ul><li>npm 使用版本大于 5.4.2</li><li>维护者更新 lockfile，<code>npm install --package-lock-only</code></li><li>非维护者可用 yarn，修改包时，不要提交 lockfile，由维护者统一更新</li><li>lockfile 应尽量避免冲突，建议由一个人维护，这样本地 npm 版本差异不是问题</li><li>建议升下 npm，大家统一使用 5.10.x 或 6.x.x，这样生成的 lockfile 规则一致</li></ul><p>问题：<code>package.json</code>松散版本号，安装易变 解决方案 yarn 引入 lockfile 锁死加 手动升级</p>',4),$={href:"https://www.robertcooper.me/how-yarn-lock-files-work-and-upgrading-dependencies",target:"_blank",rel:"noopener noreferrer"},G=o("How Yarn Lock Files Work and Upgrading Dependencies"),K=o("npm 5-6 lock 调整了子依赖版本号描述方式，减少 diff。精确安装看顶层。不影响行为，构建环境可忽略此问题 "),J={href:"https://github.com/Poltergeist/npmtest/commit/59dad3e5800bca8d92315d962ba2477748867fed#diff-32607347f8126e6534ebc7ebaec4853d",target:"_blank",rel:"noopener noreferrer"},Q=o("changes after install · Poltergeist/npmtest@59dad3e"),Z={href:"https://github.com/npm/npm/issues/20434#issuecomment-402988364",target:"_blank",rel:"noopener noreferrer"},nn=o("npm install changes package-lock.json from exact versions to loosly versions · Issue #20434 · npm/npm"),en=p("<p>理想情况，输入<code>package.json</code>，输出确定<code>node_modules</code></p><p>影响因素：</p><ul><li>使用不同版本 npm，安装算法略有差异</li><li>范围包，有更新，再安装时使用新版本</li><li>子依赖即使写死版本号，也会更新</li><li>安装包的远程库失效</li></ul><p>A-B-C，A 指定 B 版本，但想用新的 C 怎么办</p><p>可重现依赖树，不必根据<code>package.json</code>重新计算依赖版本 规则，尝试根据 lockfile 描述还原，如果不可用或缺失，则回退到旧方式</p><p><code>npm update``npm rm``npm update</code>会触发，使用选项<code>--no-save</code>避免保存</p><p>加入版本管理，可以记录变化</p><p>冲突，1. 人工解决<code>package.json</code>冲突 2. <code>npm install --package-lock-only</code> 自动解决 lockfile 冲突</p><p>推荐使用<code>npx npm-merge-driver install --global</code>，自动让 git 处理 lockfile 冲突</p>",9),an={href:"https://docs.npmjs.com/files/package-locks",target:"_blank",rel:"noopener noreferrer"},ln=o("npm-package-locks | npm Documentation"),sn=l("p",null,[o("lockfile 加 "),l("code",null,"npm install"),o(" 在部署时不能保证可靠还原，一旦出现问题 debug 麻烦")],-1),rn=o("旧版本"),on=l("code",null,"package.json",-1),pn=o("依赖有更新且"),tn=l("code",null,"npm i",-1),cn=o("时，会更新依赖和 lockfile 而不是 respect lockfile，5.4.2 后修复此问题，安装规则："),dn={href:"https://github.com/npm/npm/issues/17979#issuecomment-332701215",target:"_blank",rel:"noopener noreferrer"},un=o("why is package-lock being ignored? · Issue #17979 · npm/npm"),mn=l("p",null,[o("5.7.1 引入"),l("code",null,"npm ci"),o("只从 lockfile 进行复现安装。适用于纯净部署，比常规安装更快更严格，帮助捕获错误或增量安装引起的不一致")],-1),hn=l("p",null,"缺点是会删除 node_modules，安装时间会长些",-1),bn=l("p",null,[o("lockfile 与 "),l("code",null,"package.json"),o("依赖不匹配时，会报错，而不是更新 lockfile 如查"),l("code",null,"node_modules"),o("存在，会先删掉 可以做为"),l("code",null,"npm i"),o("失败的回退，大幅降低安装失败的情况")],-1),fn={href:"https://docs.npmjs.com/cli/ci.html",target:"_blank",rel:"noopener noreferrer"},kn=o("npm-ci | npm Documentation"),gn={href:"https://blog.npmjs.org/post/171556855892/introducing-npm-ci-for-faster-more-reliable",target:"_blank",rel:"noopener noreferrer"},xn=o("The npm Blog — Introducing "),yn=l("code",null,"npm ci",-1),vn=o(" for faster, more reliable..."),_n={href:"https://stackoverflow.com/questions/45022048/why-does-npm-install-rewrite-package-lock-json/51045967",target:"_blank",rel:"noopener noreferrer"},wn=o('node.js - Why does "npm install" rewrite package-lock.json? - Stack Overflow'),jn=o("从 yarn 迁移 "),Pn={href:"https://github.com/mixmaxhq/deyarn",target:"_blank",rel:"noopener noreferrer"},qn=o("mixmaxhq/deyarn: A command-line tool for converting projects that use Yarn to npm."),Nn=l("li",null,[l("p",null,"lockfile 只看顶级项目，非顶级不起作用")],-1),Dn=l("li",null,[l("p",null,"建议，构建严格按 lockfile，开发忽略"),l("ul",null,[l("li",null,"保证构建稳定，不出现意料外依赖变化导致的问题"),l("li",null,"减少对开发者的工具要求，但要维护统一的 lockfile"),l("li",null,"开发和构建环境，npm 版本要统一最低"),l("li",null,"松散版本号的意义")])],-1),Mn=l("p",null,"缺点",-1),On=l("li",null,"不易读，lockfile 被破坏不易察觉",-1),Tn=l("code",null,"package.json",-1),An=o("无法反映真实使用依赖 "),Cn={href:"https://snyk.io/blog/making-sense-of-package-lock-files-in-the-npm-ecosystem/",target:"_blank",rel:"noopener noreferrer"},En=o("Do you really know how a lockfile works for yarn and npm packages? | Snyk"),In={href:"https://medium.com/the-guild/how-should-you-pin-your-npm-dependencies-and-why-2b8d545c7312",target:"_blank",rel:"noopener noreferrer"},Ln=o("How should you pin your npm dependencies and why? - The Guild - Medium"),Bn=l("li",null,[l("p",null,"lockfile version 规则 6.x 变了，混用 5.x 和 6.x 会生成不同规则的 lock file npm install changes package-lock.json from exact versions to loosly versions · Issue #20434 · npm/npm https://github.com/npm/npm/issues/20434")],-1),Hn=p('<h2 id="语义化版本" tabindex="-1"><a class="header-anchor" href="#语义化版本" aria-hidden="true">#</a> 语义化版本</h2><h2 id="npm-windows-unlink-typescript-错误" tabindex="-1"><a class="header-anchor" href="#npm-windows-unlink-typescript-错误" aria-hidden="true">#</a> npm windows unlink typescript 错误</h2><p>文件正在使用，无法访问</p><ul><li>关闭编辑器、安全软件</li><li>删除缓存</li><li>重启</li><li>以管理员权限安装，不推荐</li></ul><h2 id="pnpm" tabindex="-1"><a class="header-anchor" href="#pnpm" aria-hidden="true">#</a> PNPM</h2><p>缺点：部分编辑器支持有问题？</p><h2 id="yarn-2-berry" tabindex="-1"><a class="header-anchor" href="#yarn-2-berry" aria-hidden="true">#</a> yarn 2（Berry）</h2><p>实际是另一个工具了，暂不考虑使用</p><ul><li>很多批评，包括 yarn 1 作者</li><li>facebook 等大的工程项目，没有升级</li></ul>',9),Sn={href:"https://shift.infinite.red/yarn-1-vs-yarn-2-vs-npm-a69ccf0229cd",target:"_blank",rel:"noopener noreferrer"},zn=o("Yarn 1 vs Yarn 2 vs NPM - Red Shift"),Rn=l("h2",{id:"提示-gyp-no-xcode-or-clt-version-detected",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#提示-gyp-no-xcode-or-clt-version-detected","aria-hidden":"true"},"#"),o(" 提示 gyp: No Xcode or CLT version detected")],-1),Wn={href:"https://medium.com/flawless-app-stories/gyp-no-xcode-or-clt-version-detected-macos-catalina-anansewaa-38b536389e8d",target:"_blank",rel:"noopener noreferrer"},Yn=o("gyp: No Xcode or CLT version detected macOS Catalina | Anansewaa"),Un=p('<h2 id="生产构建" tabindex="-1"><a class="header-anchor" href="#生产构建" aria-hidden="true">#</a> 生产构建</h2><p>期望：只安装 dependencies，不安装 devDependencies 和 optionalDependencies</p><p>一般用不到 optionalDependencies</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>npm install --production\n# or\nexport NODE_ENV=production\n\nnpm install --no-optional\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><blockquote><p>With the --production flag (or when the NODE_ENV environment variable is set to production), npm will not install modules listed in devDependencies.</p></blockquote><p>https://docs.npmjs.com/cli/install</p>',6),Xn={href:"https://www.npmjs.com/package/debug",target:"_blank",rel:"noopener noreferrer"},Fn=o("debug - npm"),Vn=p('<h2 id="源使用优先级" tabindex="-1"><a class="header-anchor" href="#源使用优先级" aria-hidden="true">#</a> 源使用优先级</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>npm install --registry=http://registry.npm.taobao.org\n  project config\n    metrics-registry\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>如果只是少量项目使用私有源，建议使用<code>project config</code>方式。万一私有源访问出现问题，减少影响。</p><h2 id="私有仓库" tabindex="-1"><a class="header-anchor" href="#私有仓库" aria-hidden="true">#</a> 私有仓库</h2><p>两个以上项目共享常量数据、工具函数</p><p>搭建： sinopia</p><p>维护：公共包修改，需要提升版本号，需要在每个引用公共包的项目升级</p><h2 id="发布测试包" tabindex="-1"><a class="header-anchor" href="#发布测试包" aria-hidden="true">#</a> 发布测试包</h2><p>通过打 tag 方式发布的包，需要指定版本才能安装</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> publish --tag alpha\n<span class="token function">npm</span> publish --tag beta\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>',10);i.render=function(o,p){const i=n("RouterLink"),$n=n("OutboundLink");return e(),a(r,null,[t,l("nav",c,[l("ul",null,[l("li",null,[l(i,{to:"#npm-创建和发布一个包的步骤"},{default:s((()=>[d])),_:1})]),l("li",null,[l(i,{to:"#开销评估"},{default:s((()=>[u])),_:1})]),l("li",null,[l(i,{to:"#私有-npm-仓库"},{default:s((()=>[m])),_:1})]),l("li",null,[l(i,{to:"#npm-安装失败怎么办"},{default:s((()=>[h])),_:1})]),l("li",null,[l(i,{to:"#安装或升级-npm-需要全局-需要-sudo-或-win-下的管理员权限"},{default:s((()=>[b])),_:1})]),l("li",null,[l(i,{to:"#解决-gulp-等全局安装后-找不到命令"},{default:s((()=>[f])),_:1})]),l("li",null,[l(i,{to:"#特殊包安装"},{default:s((()=>[k])),_:1})]),l("li",null,[l(i,{to:"#与-yarn-比较"},{default:s((()=>[g])),_:1})]),l("li",null,[l(i,{to:"#lockfile-可重现构建"},{default:s((()=>[x])),_:1})]),l("li",null,[l(i,{to:"#语义化版本"},{default:s((()=>[y])),_:1})]),l("li",null,[l(i,{to:"#npm-windows-unlink-typescript-错误"},{default:s((()=>[v])),_:1})]),l("li",null,[l(i,{to:"#pnpm"},{default:s((()=>[_])),_:1})]),l("li",null,[l(i,{to:"#yarn-2-berry"},{default:s((()=>[w])),_:1})]),l("li",null,[l(i,{to:"#提示-gyp-no-xcode-or-clt-version-detected"},{default:s((()=>[j])),_:1})]),l("li",null,[l(i,{to:"#生产构建"},{default:s((()=>[P])),_:1})]),l("li",null,[l(i,{to:"#源使用优先级"},{default:s((()=>[q])),_:1})]),l("li",null,[l(i,{to:"#私有仓库"},{default:s((()=>[N])),_:1})]),l("li",null,[l(i,{to:"#发布测试包"},{default:s((()=>[D])),_:1})])])]),M,l("p",null,[l("a",O,[T,l($n)])]),A,C,l("p",null,[l("a",E,[l($n)]),l("a",I,[L,l($n)])]),B,H,l("p",null,[l("a",S,[z,l($n)])]),l("p",null,[l("a",R,[W,l($n)])]),Y,l("ul",null,[l("li",null,[U,l("a",X,[F,l($n)])])]),V,l("p",null,[l("a",$,[G,l($n)])]),l("p",null,[K,l("a",J,[Q,l($n)]),l("a",Z,[nn,l($n)])]),en,l("p",null,[l("a",an,[ln,l($n)])]),sn,l("p",null,[rn,on,pn,tn,cn,l("a",dn,[un,l($n)])]),mn,hn,bn,l("p",null,[l("a",fn,[kn,l($n)]),l("a",gn,[xn,yn,vn,l($n)]),l("a",_n,[wn,l($n)])]),l("p",null,[jn,l("a",Pn,[qn,l($n)])]),l("ul",null,[Nn,Dn,l("li",null,[Mn,l("ul",null,[On,l("li",null,[Tn,An,l("a",Cn,[En,l($n)]),l("a",In,[Ln,l($n)])])])]),Bn]),Hn,l("p",null,[l("a",Sn,[zn,l($n)])]),Rn,l("p",null,[l("a",Wn,[Yn,l($n)])]),Un,l("p",null,[l("a",Xn,[Fn,l($n)])]),Vn],64)};export default i;
