import{_ as t,r as p,o as e,c as o,a as n,b as c,F as l,e as s,d as u}from"./app.11c4d450.js";const r={},i=s(`<h1 id="http-server" tabindex="-1"><a class="header-anchor" href="#http-server" aria-hidden="true">#</a> http-server</h1><ul><li><code>http.get</code>\u53D6\u5230\u7684\u662F\u6D41</li><li>\u5185\u7F6E\u7684<code>http</code>\u548C<code>request</code>\u5747\u4E0D\u652F\u6301<code>Promise</code></li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> server <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> port <span class="token operator">=</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">PORT</span> <span class="token operator">||</span> <span class="token number">3008</span>
server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span>port<span class="token punctuation">)</span>
server<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;request&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;on request&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
server<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;listening&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;server is listering on &#39;</span> <span class="token operator">+</span> port<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
server<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token string">&#39;EADDRINUSE&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u670D\u52A1\u5668\u5730\u5740\u53CA\u7AEF\u53E3\u5DF2\u88AB\u5360\u7528&#39;</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>code<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div>`,3),k={href:"https://nodejs.org/zh-cn/docs/guides/anatomy-of-an-http-transaction/",target:"_blank",rel:"noopener noreferrer"},d=u("HTTP \u4F20\u8F93\u89E3\u6790 | Node.js"),h=s(`<h2 id="live-server" tabindex="-1"><a class="header-anchor" href="#live-server" aria-hidden="true">#</a> live-server</h2><p><code>npx live-server</code></p><p>\u957F\u671F</p><div class="language-text ext-text"><pre class="language-text"><code>npm install -g live-server
</code></pre></div><p>\u652F\u6301\u914D\u7F6E\u5316\u652F\u884C</p><p>\u539F\u7406\uFF1A</p><ul><li>\u5EFA\u7ACB websocket \u8FDE\u63A5\uFF0Chtml \u6CE8\u5165\u811A\u672C</li><li>css \u53EF\u4EE5\u514D reload\uFF0C\u5C40\u90E8\u66F4\u65B0</li></ul><p>https://github.com/tapio/live-server/issues/208#issuecomment-733510202</p><p>vue \u4F5C\u8005\u5EFA\u8BAE\u7528 cdn alias\uFF0C\u6784\u5EFA\u540E\u4FDD\u8BC1\u53EF\u7528 https://github.com/vitejs/vite/issues/2483#issuecomment-799527624</p>`,9);function v(g,f){const a=p("ExternalLinkIcon");return e(),o(l,null,[i,n("ul",null,[n("li",null,[n("a",k,[d,c(a)])])]),h],64)}var m=t(r,[["render",v],["__file","http-server.html.vue"]]);export{m as default};
