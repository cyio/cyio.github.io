import{r as n,o as a,c as s,a as e,F as p,d as t,b as o}from"./app.0e74f851.js";const c={},l=t('<h1 id="解决-vue-多页编译慢问题" tabindex="-1"><a class="header-anchor" href="#解决-vue-多页编译慢问题" aria-hidden="true">#</a> 解决 Vue 多页编译慢问题</h1><h2 id="问题描述" tabindex="-1"><a class="header-anchor" href="#问题描述" aria-hidden="true">#</a> 问题描述：</h2><p>vue-cli 创建的项目配置多页后，随着多页入口的增加，编译日渐缓慢，严重影响开发效率。</p><p>目前项目 12 个入口，启动服务 21 秒，热编译 3 秒（每保存一次代码，需要等 3 秒才能看效果）。</p><p>检查发现主要是<code>html-webpack-plugin</code>这个插件处理时间长，应该是原来针对单页设计，缺乏对多页的优化支持。</p><p>插件官方已经有对多页编译有一定优化的 4.x 版本，需要 webpack 4 的支持，尚未正式发布（vue-cli 3 引用的还是 3.x）</p><h2 id="解决步骤" tabindex="-1"><a class="header-anchor" href="#解决步骤" aria-hidden="true">#</a> 解决步骤：</h2><ol><li>升级 vue-cli 3 正式版，webpack 升到 4</li><li>本地克隆<code>html-webpack-plugin</code>，并检出需要的特性分支<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>cd node_modules/@vue/cli-service/node_modules\ngit clone https://github.com/jantimon/html-webpack-plugin.git\ngit checkout feature/cache-file-timestamps\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li><li>第 2 步操作完后，执行<code>yarn serve</code>无法启动服务，与<code>@vue/preload-webpack-plugin</code>有冲突，vue 官方对这个插件有定制，不好升级</li><li>禁用<code>preload</code>和<code>prefetch</code>插件，目前用不到，后续如果需要可以在最终打包时启用<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// vue.config.js</span>\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token function-variable function">chainWebpack</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>pagesObj<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">entryName</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n            config<span class="token punctuation">.</span>plugins<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">prefetch-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>entryName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n            config<span class="token punctuation">.</span>plugins<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">preload-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>entryName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        config<span class="token punctuation">.</span>plugins<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">&#39;pwa&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></li></ol><h2 id="结果" tabindex="-1"><a class="header-anchor" href="#结果" aria-hidden="true">#</a> 结果</h2><p>启动服务 15 秒，热编译 0.16 - 2 秒之间，至少节省 33% 的时间</p><p>在脚手架调整后，项目开发人员只要执行第 2 步替换旧的<code>html-webpack-plugin</code>插件即可</p><p>注意，暂时不要用 html-webpack-plugin 4.x，模板语法有变化，3.x 的配置编译会报错。</p><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h2>',13),i={href:"https://github.com/jantimon/html-webpack-plugin/pull/967",target:"_blank",rel:"noopener noreferrer"},u=o("feat(compiler): Use a single compiler for multiple plugin instances by jantimon · Pull Request #967 · jantimon/html-webpack-plugin"),r={href:"https://github.com/jantimon/html-webpack-plugin/issues/724#issuecomment-419885840",target:"_blank",rel:"noopener noreferrer"},k=o("Multiple entry points -> multiple html outputs webpack rebuild very slow · Issue #724 · jantimon/html-webpack-plugin"),d={href:"https://juejin.im/post/5af46971f265da0b95272330",target:"_blank",rel:"noopener noreferrer"},b=o("关于webpack多入口热加载很慢的原因 - 掘金"),m={href:"http://louiszhai.github.io/2019/01/04/webpack4/#%25E7%25BC%2596%25E8%25AF%2591%25E7%25BB%2593%25E6%259E%259C%25E5%2588%2586%25E6%259E%2590",target:"_blank",rel:"noopener noreferrer"},h=o("使用webpack4提升180%编译速度 | louis blog");c.render=function(t,o){const c=n("OutboundLink");return a(),s(p,null,[l,e("p",null,[e("a",i,[u,e(c)])]),e("p",null,[e("a",r,[k,e(c)])]),e("p",null,[e("a",d,[b,e(c)])]),e("p",null,[e("a",m,[h,e(c)])])],64)};export default c;
