import{r as n,o as a,c as e,a as s,F as t,d as o,b as r}from"./app.26466922.js";const p={},i=o('<h1 id="netinfo" tabindex="-1"><a class="header-anchor" href="#netinfo" aria-hidden="true">#</a> netinfo</h1><ul><li>兼容性差，仅 chrome 支持</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>navigator<span class="token punctuation">.</span>onLine <span class="token comment">//是否在线</span>\nnavigator<span class="token punctuation">.</span>offLine\n\nwindow<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;online&#39;</span><span class="token punctuation">,</span>  updateOnlineStatus<span class="token punctuation">)</span><span class="token punctuation">;</span>\nwindow<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;offline&#39;</span><span class="token punctuation">,</span> updateOnlineStatus<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 可以把前缀加上， 兼容未来实现</span>\n<span class="token keyword">const</span> connection <span class="token operator">=</span> navigator<span class="token punctuation">.</span>connection <span class="token operator">||</span> navigator<span class="token punctuation">.</span>mozConnection <span class="token operator">||</span> navigator<span class="token punctuation">.</span>webkitConnection\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><code>navigator.connection</code> 是实验性技术，只有 chrome 61 以上和移动版支持，其它浏览器如 safari 不支持 <code>downlink</code> 有效带宽估算，根据最近观察网络活动测量，如果最近没有活跃，则使用网络类型的理论值。10Mb 普通有线。如果用代理的话，估算准确性较低。 <code>downlinkMax</code> 第一网络跳带宽上限，由使用的底层网络技术决定，端性能无法超越这个值，这个值浏览器目前没有实现？</p>',4),c={href:"https://wicg.github.io/netinfo/#downlink-attribute",target:"_blank",rel:"noopener noreferrer"},l=r("Network Information API"),u={href:"https://whatwebcando.today/network-type-speed.html",target:"_blank",rel:"noopener noreferrer"},d=r("What Web Can Do Today"),k={href:"https://googlechrome.github.io/samples/network-information/",target:"_blank",rel:"noopener noreferrer"},f=r("Network Information API Sample"),b={href:"https://addyosmani.com/blog/adaptive-serving/",target:"_blank",rel:"noopener noreferrer"},m=r("AddyOsmani.com - Adaptive Serving using JavaScript and the Network Information API"),h=s("h2",{id:"网络质量",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#网络质量","aria-hidden":"true"},"#"),r(" 网络质量")],-1),g=s("p",null,[s("code",null,"navigator.connection.effectiveType")],-1),v=s("code",null,"slow - 4G",-1),w=r("，根据 rtt 和 downlink 的值实际范围，反映网络实际质量，而不是 chrome62 前理论网络类型 "),y={href:"https://wicg.github.io/netinfo/#dfn-effective-connection-type",target:"_blank",rel:"noopener noreferrer"},I=r("Network Information API");p.render=function(o,r){const p=n("OutboundLink");return a(),e(t,null,[i,s("p",null,[s("a",c,[l,s(p)]),s("a",u,[d,s(p)]),s("a",k,[f,s(p)]),s("a",b,[m,s(p)])]),h,g,s("p",null,[v,w,s("a",y,[I,s(p)])])],64)};export default p;
