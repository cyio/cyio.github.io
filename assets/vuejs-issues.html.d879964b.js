import{r as n,o as s,c as a,a as e,F as p,d as t,b as o}from"./app.31fc93bc.js";const c={},l=t('<h1 id="vue-issues" tabindex="-1"><a class="header-anchor" href="#vue-issues" aria-hidden="true">#</a> vue-issues</h1><h2 id="vue-nexttick" tabindex="-1"><a class="header-anchor" href="#vue-nexttick" aria-hidden="true">#</a> vue nextTick</h2><p>nextTick 解决要等 dom 后执行操作 比如对有 if 条件渲染的 dom 节点要进行处理</p><h2 id="日期格式化之阿拉伯数字转中文" tabindex="-1"><a class="header-anchor" href="#日期格式化之阿拉伯数字转中文" aria-hidden="true">#</a> 日期格式化之阿拉伯数字转中文</h2><p>导入日期函数</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> date <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;phpjs&#39;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>将阿拉伯数字转换为中文 高阶函数，过滤器，数组 星期几的数字作为数组索引取出对应的中文</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 星期{{day | date &#39;w&#39; | week}}</span>\n\nfilters<span class="token operator">:</span> <span class="token punctuation">{</span>\n  <span class="token function-variable function">week</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token string">&#39;日&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;一&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;二&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;三&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;四&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;五&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;六&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span>value<span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="将-vue-data-对象转换为普通对象" tabindex="-1"><a class="header-anchor" href="#将-vue-data-对象转换为普通对象" aria-hidden="true">#</a> 将 vue data 对象转换为普通对象</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> newObj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span>vueObj <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="v-for-中过滤、处理数据" tabindex="-1"><a class="header-anchor" href="#v-for-中过滤、处理数据" aria-hidden="true">#</a> v-for 中过滤、处理数据</h2>',11),r=e("li",null,"filter 在 vue 2 中移除了",-1),i=e("li",null,[o("直接在 methods 中使用"),e("code",null,"arr.sort()"),o("等副作用方法，会引起更新，再次执行 v-for，形成死循环")],-1),u=e("li",null,"可以使用 methods",-1),k=o("使用 computed，注意用 map 方法拿副本去 sort "),d={href:"https://stackoverflow.com/questions/43574671/vue-js-filters-in-v-for",target:"_blank",rel:"noopener noreferrer"},b=o("javascript - vue.js filters in v-for - Stack Overflow"),m=e("h2",{id:"svg",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#svg","aria-hidden":"true"},"#"),o(" svg")],-1),h={href:"https://stackoverflow.com/questions/49459262/vue-cli-3-is-not-allowing-me-to-process-svgs-in-webpack",target:"_blank",rel:"noopener noreferrer"},f=o("javascript - Vue Cli 3 is not allowing me to process SVG's in Webpack - Stack Overflow"),v=e("h2",{id:"组件原子拆分、合成",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#组件原子拆分、合成","aria-hidden":"true"},"#"),o(" 组件原子拆分、合成")],-1),g=e("li",null,"独立可测试，单一职责，原子化，以便根据业务合成，而不是追求少创建文件。确保可维护，稳定",-1),w=e("li",null,"为何“只有一个改变的原因”如此重要呢？因为这样组件的修改就被隔离开来，变得可控了。",-1),j=e("li",null,"单一职责限制了组件的体积，也使其聚焦于一件事。这有利于编码，也方便了之后的修改、重用和测试。",-1),y=o("职责拆分：数据、UI，命名 with *总结一下开闭原则就是：软件系统的核心逻辑都不应该轻易改变，否则会破坏系统的稳定性和增加测试成本。我们应当建立合适的抽象并统一接口，当业务需要扩展时，我们可以通过增加实体类来完成。 "),x={href:"https://juejin.im/post/5a66fd9d6fb9a01c9332d337",target:"_blank",rel:"noopener noreferrer"},_=o("组件的划分 - 掘金"),q={href:"https://yq.aliyun.com/articles/617955",target:"_blank",rel:"noopener noreferrer"},S=o("[译] 更可靠的 React 组件：单一职责原则-云栖社区-阿里云"),M={href:"https://mp.weixin.qq.com/s?__biz=MjM5MTA1MjAxMQ==&mid=2651230706&idx=1&sn=e96555bdf9b8251852928f4a3c5193e0",target:"_blank",rel:"noopener noreferrer"},A=o("前端早读课"),V={href:"https://mp.weixin.qq.com/s?__biz=MjM5MTA1MjAxMQ==&mid=2651230683&idx=3&sn=72a870d0c1bede39b5560244495a14c4",target:"_blank",rel:"noopener noreferrer"},I=o("前端早读课"),P=t('<h2 id="watch-bug" tabindex="-1"><a class="header-anchor" href="#watch-bug" aria-hidden="true">#</a> watch bug</h2><ul><li>default 是组件不绑定 prop 的回退</li><li>数据有变化，watch 一定会触发</li><li>数据 ready 后渲染子组件，子组件中的 watch 不会触发，因为没为变化，如，两个并行请求，第一个请求完成时渲染子组件，当第二个请求更快完成时，会准备好数据，先于子组件渲染<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// watch 元素不一定变化，存在即需要执行</span>\n<span class="token keyword">function</span> <span class="token function">ensureWatchVueData</span><span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$watch</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token parameter">value</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div></li></ul><h2 id="watch-object-array" tabindex="-1"><a class="header-anchor" href="#watch-object-array" aria-hidden="true">#</a> watch object array</h2>',3),T=t('<li>object deep<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 该回调将会在侦听开始之后被立即调用</span>\nd<span class="token operator">:</span> <span class="token punctuation">{</span>\n  <span class="token function-variable function">handler</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">val<span class="token punctuation">,</span> oldVal</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">/* ... */</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">// 这里 function 不要用箭头函数</span>\n  deep<span class="token operator">:</span> <span class="token boolean">true</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token comment">// 或者</span>\n<span class="token string">&#39;a.d&#39;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></li>',1),N=o("array 无法 watch ? 把数组转字符串存储，用的时候再解析为数组，需要不停来回转换？ "),z={href:"https://segmentfault.com/q/1010000010805746",target:"_blank",rel:"noopener noreferrer"},C=o("vue.js - vue watch 数组变化问题 - SegmentFault 思否"),O=e("h2",{id:"前端编译服务崩溃问题",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#前端编译服务崩溃问题","aria-hidden":"true"},"#"),o(" 前端编译服务崩溃问题")],-1),W=e("p",null,"升级 vue-cli 3 后，在修改 JS 文件，尤其是频繁保存时，服务极易崩溃，可以稳定重现 因为我大部分时间在编辑 vue 文件，感觉不明显，x 同事反映比较突出，严重影响开发效率 崩溃原因： sourcemap 生成、 文件 watch 等功能内存占用大，webpack 部分插件内存泄漏、高内存占用，触及 V8 默认回收上限 1400Mb 解决办法是提升上限，避免触及，需要注意如何正确地添加参数",-1),D=e("p",null,[o("错误方式（x 同事在 package.json 中添加的）： "),e("code",null,"$ vue-cli-service serve --max_old_space_size=4096"),o(" 正确方式：")],-1),U={href:"https://github.com/vuejs/vue-cli/issues/1453#issuecomment-430969846",target:"_blank",rel:"noopener noreferrer"},B=o("yarn serve - JavaScript heap out of memory crash · Issue #1453 · vuejs/vue-cli"),E=e("code",null,"node --max_old_space_size=4096 node_modules/@vue/cli-service/bin/vue-cli-service.js serve --open",-1),F={href:"https://github.com/octref/vue-cli/commit/bb98ef08874bf07b9a510b23f8d6f94c0afaf01c",target:"_blank",rel:"noopener noreferrer"},L=o("fix: increase Node memory limit to workaround webpack crash, fix #1453 · octref/vue-cli@bb98ef0"),R=o(" 相关 Issue： "),$={href:"https://github.com/webpack/webpack/issues/1914#issuecomment-392660230",target:"_blank",rel:"noopener noreferrer"},J=o("Process out of memory - Webpack · Issue #1914 · webpack/webpack"),K=e("h2",{id:"编译慢问题",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#编译慢问题","aria-hidden":"true"},"#"),o(" 编译慢问题")],-1),Q={href:"https://github.com/jantimon/html-webpack-plugin/pull/967",target:"_blank",rel:"noopener noreferrer"},G=o("feat(compiler): Use a single compiler for multiple plugin instances by jantimon · Pull Request #967 · jantimon/html-webpack-plugin"),H={href:"https://github.com/jantimon/html-webpack-plugin/issues/724#issuecomment-419885840",target:"_blank",rel:"noopener noreferrer"},X=o("Multiple entry points -> multiple html outputs webpack rebuild very slow · Issue #724 · jantimon/html-webpack-plugin"),Y=t('<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>npm install html-webpack-plugin@4.0.0-alpha.2\n或者\ncd node_modules\ngit clone https://github.com/jantimon/html-webpack-plugin.git\ngit checkout feature/cache-file-timestamps\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>',1),Z={href:"https://github.com/webpack/docs/wiki/build-performance",target:"_blank",rel:"noopener noreferrer"},nn=o("build performance · webpack/docs Wiki"),sn=e("h3",{id:"vue-cli-service-如何本地配置某个依赖",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#vue-cli-service-如何本地配置某个依赖","aria-hidden":"true"},"#"),o(" vue-cli-service 如何本地配置某个依赖")],-1),an={href:"https://github.com/neutrinojs/webpack-chain",target:"_blank",rel:"noopener noreferrer"},en=o("neutrinojs/webpack-chain: A chaining API to generate and simplify the modification of Webpack configurations."),pn=o(" webpack 的 stats 配置不能用，选了别的插件 "),tn={href:"https://github.com/vuejs/vue-cli/issues/2652#issuecomment-425632179",target:"_blank",rel:"noopener noreferrer"},on=o("stats config invalid ? · Issue #2652 · vuejs/vue-cli"),cn=t('<h2 id="解决-ios-中-fixed-定位-输入时错位的问题" tabindex="-1"><a class="header-anchor" href="#解决-ios-中-fixed-定位-输入时错位的问题" aria-hidden="true">#</a> 解决 iOS 中 fixed 定位，输入时错位的问题</h2><p>根据 focus 和 blur 的状态添加移除 fixfixed 类 把 position 改为 absolute 是普遍做法，当试了不行，干脆直接隐藏</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">.fixfixed .ui-header,\n.fixfixed .ui-footer</span> <span class="token punctuation">{</span>\n  <span class="token comment">/*position: absolute;*/</span>\n  <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>methods<span class="token operator">:</span> <span class="token punctuation">{</span>\n\t<span class="token function-variable function">inputFocus</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t<span class="token keyword">var</span> body <span class="token operator">=</span> window<span class="token punctuation">.</span>document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">&#39;body&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>\n\t\tbody<span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">&#39;fixfixed&#39;</span>\n\t<span class="token punctuation">}</span><span class="token punctuation">,</span>\n\t<span class="token function-variable function">inputBlur</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t<span class="token keyword">var</span> body <span class="token operator">=</span> window<span class="token punctuation">.</span>document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">&#39;body&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>\n\t\tbody<span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="v-for-循环绑定不生效" tabindex="-1"><a class="header-anchor" href="#v-for-循环绑定不生效" aria-hidden="true">#</a> v-for 循环绑定不生效</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// not work</span>\n  <span class="token punctuation">.</span><span class="token function">item</span><span class="token punctuation">(</span>v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">&quot;key of answerKeys&quot;</span> <span class="token operator">:</span><span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;[ key === rightAnswer ? &#39;right&#39; : &#39;wrong&#39; ]&quot;</span><span class="token punctuation">)</span>\n\n<span class="token comment">// work</span>\n  <span class="token punctuation">.</span><span class="token function">item</span><span class="token punctuation">(</span>v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">&quot;key of answerKeys&quot;</span> <span class="token operator">:</span><span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;{ &#39;right&#39;: key === rightAnswer, &#39;wrong&#39;: key !== rightAnswer }&quot;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="异步引入" tabindex="-1"><a class="header-anchor" href="#异步引入" aria-hidden="true">#</a> 异步引入</h2><ol><li>script vue 插件</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">await</span> Vue<span class="token punctuation">.</span><span class="token function">loadScript</span><span class="token punctuation">(</span>scripts<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> afterScripts <span class="token operator">=</span> scripts<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>\n<span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>afterScripts<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">url</span> <span class="token operator">=&gt;</span> Vue<span class="token punctuation">.</span><span class="token function">loadScript</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\nscripts<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">url</span> <span class="token operator">=&gt;</span> Vue<span class="token punctuation">.</span><span class="token function">unloadScript</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ol start="2"><li>import 加 promise，取出？</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n    <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token comment">/* webpackChunkName: &quot;docsearch&quot; */</span> <span class="token string">&#39;docsearch.js/dist/cdn/docsearch.min.js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token comment">/* webpackChunkName: &quot;docsearch&quot; */</span> <span class="token string">&#39;docsearch.js/dist/cdn/docsearch.min.css&#39;</span><span class="token punctuation">)</span>\n  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">[</span>docsearch<span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>',11),ln={href:"https://ustbhuangyi.github.io/vue-analysis/components/lifecycle.html#beforedestroy-destroyed",target:"_blank",rel:"noopener noreferrer"},rn=o("Vue.js 技术揭秘 | 生命周期"),un=e("h2",{id:"html-中使用相对路径",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#html-中使用相对路径","aria-hidden":"true"},"#"),o(" html 中使用相对路径")],-1),kn={href:"https://github.com/vuejs/vue-loader/issues/193#issuecomment-206510064",target:"_blank",rel:"noopener noreferrer"},dn=o("html image src require not respecting webpack aliases? · Issue #193 · vuejs/vue-loader"),bn=e("h2",{id:"动态图片引入",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#动态图片引入","aria-hidden":"true"},"#"),o(" 动态图片引入")],-1),mn=o("Using Dynamic Static Image URLS in Vue.js The quick answer, a partially defined path. "),hn=e("code",null,':src="require(',-1),fn=o("@/assets/cards/${image}.jpg"),vn=e("code",null,')"',-1),gn={href:"https://webpack.js.org/guides/dependency-management/#require-context",target:"_blank",rel:"noopener noreferrer"},wn=o("Dependency Management | webpack"),jn=e("h2",{id:"spa-scroll",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#spa-scroll","aria-hidden":"true"},"#"),o(" spa scroll")],-1),yn={href:"https://www.ccdatalab.org/blog/automatic-scroll-restoration-single-page-applications",target:"_blank",rel:"noopener noreferrer"},xn=o("Automatic scroll restoration in Single Page Applications (SPA) — Childhood Cancer Data Lab"),_n=e("h2",{id:"_2-6-vue-observable",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_2-6-vue-observable","aria-hidden":"true"},"#"),o(" 2.6 Vue.observable")],-1),qn={href:"https://codesandbox.io/s/k3kpqz2wz7?file=/src/store.js:24-62",target:"_blank",rel:"noopener noreferrer"},Sn=o("Vue Template - CodeSandbox"),Mn=t('<h2 id="有待改进" tabindex="-1"><a class="header-anchor" href="#有待改进" aria-hidden="true">#</a> 有待改进</h2><ul><li>router children 嵌套，不要全是一级，跳转传参可在 path:id 来配置</li><li>测试数据，可写成模块<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * 创建临时数据\n */</span>\n<span class="token keyword">const</span> <span class="token function-variable function">setpromise</span> <span class="token operator">=</span> <span class="token parameter">data</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token function">resolve</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></li></ul>',2);c.render=function(t,o){const c=n("OutboundLink");return s(),a(p,null,[l,e("ul",null,[r,i,u,e("li",null,[k,e("a",d,[b,e(c)])])]),m,e("p",null,[e("a",h,[f,e(c)])]),v,e("ul",null,[g,w,j,e("li",null,[y,e("a",x,[_,e(c)]),e("a",q,[S,e(c)]),e("a",M,[A,e(c)]),e("a",V,[I,e(c)])])]),P,e("ul",null,[T,e("li",null,[N,e("a",z,[C,e(c)])])]),O,W,D,e("ol",null,[e("li",null,[e("a",U,[B,e(c)]),E]),e("li",null,[e("a",F,[L,e(c)]),R,e("a",$,[J,e(c)])])]),K,e("p",null,[e("a",Q,[G,e(c)]),e("a",H,[X,e(c)])]),Y,e("p",null,[e("a",Z,[nn,e(c)])]),sn,e("p",null,[e("a",an,[en,e(c)]),pn,e("a",tn,[on,e(c)])]),cn,e("p",null,[e("a",ln,[rn,e(c)])]),un,e("p",null,[e("a",kn,[dn,e(c)])]),bn,e("p",null,[mn,hn,fn,vn,e("a",gn,[wn,e(c)])]),jn,e("p",null,[e("a",yn,[xn,e(c)])]),_n,e("p",null,[e("a",qn,[Sn,e(c)])]),Mn],64)};export default c;
