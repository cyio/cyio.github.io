import{_ as n,e as s}from"./app.b51303a2.js";const a={},p=s(`<h1 id="\u66FF\u6362\u6A21\u677F\u5B57\u7B26" tabindex="-1"><a class="header-anchor" href="#\u66FF\u6362\u6A21\u677F\u5B57\u7B26" aria-hidden="true">#</a> \u66FF\u6362\u6A21\u677F\u5B57\u7B26</h1><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u8F93\u5165</span>
<span class="token comment">// replaceTemplateStr(&#39;&lt;div class={%className%}&gt;{%name%}&lt;/div&gt;&#39;, {className:&#39;hd&#39;, name:123})</span>
<span class="token comment">// \u8F93\u51FA</span>
<span class="token comment">// &lt;div class=&quot;hd&quot;&gt;123&lt;/div&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li>\u7528 key \u62FC\u63A5\u5B57\u7B26\uFF0C\u51C6\u786E replace\uFF0C\u4E0D\u9700\u8981\u7528\u6B63\u5219</li><li>str \u662F\u7EAF\u65B9\u6CD5\uFF0C\u4E0D\u4FEE\u6539\u539F\u5B57\u7B26\u4E32</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">tpl</span><span class="token punctuation">(</span><span class="token parameter">template<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> str <span class="token operator">=</span> template
  <span class="token comment">// \u7528 for - in \u5199\u8D77\u6765\u66F4\u7B80\u5355</span>
  Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">key</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    str <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>
      <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">{%</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">%}</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
      key <span class="token operator">===</span> <span class="token string">&#39;className&#39;</span> <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>data<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> data<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
    <span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> str
<span class="token punctuation">}</span>
<span class="token keyword">let</span> r <span class="token operator">=</span> <span class="token function">tpl</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;div class={%className%}&gt;{%name%}&lt;/div&gt;&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">className</span><span class="token operator">:</span> <span class="token string">&#39;hd&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token number">123</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>\u6B63\u5219\u5339\u914D\uFF0C\u5B58\u5728\u95EE\u9898</p><p>className \u8981\u6C42\u53CC\u5F15\u53F7\uFF0C\u9700\u8981 replace \u591A\u6B21\uFF0C\u5E76\u4E14\u5148 replace \u7279\u4F8B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// not work</span>
<span class="token keyword">function</span> <span class="token function">replaceTemplateStr</span><span class="token punctuation">(</span><span class="token parameter">template<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> template<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">/\\{\\%(.*?)\\%\\}/g</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">match<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> data<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> r <span class="token operator">=</span> <span class="token function">tpl</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;div class={%className%}&gt;{%name%}&lt;/div&gt;&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">className</span><span class="token operator">:</span> <span class="token string">&#39;hd&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token number">123</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div>`,7);function t(e,c){return p}var l=n(a,[["render",t],["__file","template-str.html.vue"]]);export{l as default};
