import{r as n,o as s,c as a,a as t,F as p,d as e,b as o}from"./app.31fc93bc.js";const c={},l=e('<h1 id="如何保证-dom-更新后执行" tabindex="-1"><a class="header-anchor" href="#如何保证-dom-更新后执行" aria-hidden="true">#</a> 如何保证 DOM 更新后执行</h1><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;msg&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerText <span class="token operator">=</span> <span class="token string">&#39;Hi!&#39;</span><span class="token punctuation">;</span>\n<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;Hi!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Q: 什么是安全的方式，当 msg &quot;Hi&quot; 显示在页面后，再执行 alert</p><p>setTimeout 10 (chrome) 可以，但是太特定了</p><p>MutationObserver 不行，仅响应数据变化，而不是显示变化</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> elem <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;msg&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> obs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MutationObserver</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;Hi!&#39;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\nobs<span class="token punctuation">.</span><span class="token function">observe</span><span class="token punctuation">(</span>elem<span class="token punctuation">,</span> <span class="token punctuation">{</span> subtree<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> childList<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\nelem<span class="token punctuation">.</span>innerText <span class="token operator">=</span> <span class="token string">&#39;Hi!&#39;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>rAF 可以，注意需要两层</p><p>event loop: rAF -&gt; style -&gt; layout -&gt; paint</p><p>所以第一个 rAF 执行其实是和附近的代码在一个 task 里</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> elem <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;message&#39;</span><span class="token punctuation">)</span>\n  elem<span class="token punctuation">.</span>innerText <span class="token operator">=</span> <span class="token string">&#39;Test&#39;</span>\n  <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token comment">// make sure after first paint</span>\n    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;Test&#39;</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>',10),u={href:"https://mobile.twitter.com/rauschma/status/1288868746682081285",target:"_blank",rel:"noopener noreferrer"},r=o(" Axel Rauschmayer 在 Twitter: \"document.getElementById('msg').innerText = 'Hi!'; setTimeout(() => { alert('Hi!'); }, 0); What’s a safe way to ensure alert() always runs "),i=t("em",null,"after",-1),k=o(' the DOM change is displayed? – Timeouts > 10 work (in Chrome), but that seems arbitrary. – Or something other than setTimeout()?" / Twitter'),m={href:"https://www.bram.us/2018/02/09/jake-archibald-in-the-loop-taking-a-close-look-into-the-browsers-event-loop/",target:"_blank",rel:"noopener noreferrer"},b=o("Jake Archibald: “In The Loop” — Taking a close look into the browser’s Event Loop – Bram.us");c.render=function(e,o){const c=n("OutboundLink");return s(),a(p,null,[l,t("p",null,[t("a",u,[r,i,k,t(c)])]),t("p",null,[t("a",m,[b,t(c)])])],64)};export default c;
