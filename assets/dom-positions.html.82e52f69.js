import{r as n,o as s,c as a,a as p,F as t,b as o,d as e}from"./app.0e74f851.js";const c={},l={href:"http://www.cnblogs.com/lyzg/p/5043974.html",target:"_blank",rel:"noopener noreferrer"},u=o("Js位置与大小（1）——正确理解和运用与尺寸大小相关的DOM属性 - 流云诸葛 - 博客园"),r=e('<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 判断滚动方向</span>\n<span class="token function">scroll</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">direction</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>direction<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    \n<span class="token keyword">function</span> <span class="token function">scroll</span><span class="token punctuation">(</span> <span class="token parameter">fn</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> beforeScrollTop <span class="token operator">=</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>scrollTop<span class="token punctuation">,</span>\n        fn <span class="token operator">=</span> fn <span class="token operator">||</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n    window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;scroll&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">var</span> afterScrollTop <span class="token operator">=</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>scrollTop<span class="token punctuation">,</span>\n            delta <span class="token operator">=</span> afterScrollTop <span class="token operator">-</span> beforeScrollTop<span class="token punctuation">;</span>\n        <span class="token keyword">if</span><span class="token punctuation">(</span> delta <span class="token operator">===</span> <span class="token number">0</span> <span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n        <span class="token function">fn</span><span class="token punctuation">(</span> delta <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token string">&quot;down&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;up&quot;</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>\n        beforeScrollTop <span class="token operator">=</span> afterScrollTop<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div>',1);c.render=function(o,e){const c=n("OutboundLink");return s(),a(t,null,[p("p",null,[p("a",l,[u,p(c)])]),r],64)};export default c;
