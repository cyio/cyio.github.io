import{r as a,o as e,c as s,a as n,F as r,b as t,d as i}from"./app.0e74f851.js";const o={},l=n("h1",{id:"json",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#json","aria-hidden":"true"},"#"),t(" JSON")],-1),d=n("h2",{id:"解析比-js-对象高效",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#解析比-js-对象高效","aria-hidden":"true"},"#"),t(" 解析比 JS 对象高效")],-1),c=t("因为JSON语法比JavaScript的语法简单得多，所以可以比JavaScript更有效地解析JSON。 这些知识可用于提高Web应用程序的启动性能，这些 应用程序可提供类似JSON的大型配置对象文字（例如内联Redux存储）。 而不是将数据内联为JavaScript对象文字， 如果您的Web应用程序将类似JSON的配置作为JavaScript对象文字传递，请考虑使用JSON.parse。 它的速度要快得多，特别是对于冷负荷 "),p={href:"https://v8.dev/blog/cost-of-javascript-2019#json",target:"_blank",rel:"noopener noreferrer"},u=t("The cost of JavaScript in 2019 · V8"),h={href:"https://mobile.twitter.com/youyuxi/status/1143682079978397696",target:"_blank",rel:"noopener noreferrer"},b=t("Evan You 正在使用 Twitter：“@mathias @Atinux does Nuxt already do this for store state?” / Twitter"),f=i('<h2 id="fx-命令行-json-处理" tabindex="-1"><a class="header-anchor" href="#fx-命令行-json-处理" aria-hidden="true">#</a> fx 命令行 JSON 处理</h2><ul><li>浏览器开发工具 xhr 请求上复制 curl</li><li>默认打开是折叠，要展开加<code>.</code><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>fx data.json\nfx <span class="token builtin class-name">.</span>\nfx .data\nfx .data <span class="token operator">&gt;</span> .git/data.json\nfx .data .result <span class="token string">&#39;this[0]&#39;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li><li>选中<code>Option+Mouse </code></li></ul>',2);o.render=function(t,i){const o=a("OutboundLink");return e(),s(r,null,[l,d,n("blockquote",null,[n("p",null,[c,n("a",p,[u,n(o)]),n("a",h,[b,n(o)])])]),f],64)};export default o;
