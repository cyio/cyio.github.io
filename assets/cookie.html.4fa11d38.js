import{r as n,o as a,c as s,a as e,F as p,d as o,b as t}from"./app.26466922.js";const c={},l=o('<h1 id="cookie" tabindex="-1"><a class="header-anchor" href="#cookie" aria-hidden="true">#</a> Cookie</h1><h2 id="使用场景" tabindex="-1"><a class="header-anchor" href="#使用场景" aria-hidden="true">#</a> 使用场景</h2><p>授权认证：</p><ul><li>基于 cookie，服务器需要生成、保持 session，保持，有状态</li><li>基于 token，用户信息编码，无状态</li></ul><h2 id="用来标记用户" tabindex="-1"><a class="header-anchor" href="#用来标记用户" aria-hidden="true">#</a> 用来标记用户</h2><p>服务器<code>set-cookie</code>发给客户端，浏览器会将 cookie 保存下来，稍后客户端发请求时可带上 cookie</p><h2 id="判断是否登录" tabindex="-1"><a class="header-anchor" href="#判断是否登录" aria-hidden="true">#</a> 判断是否登录</h2><ul><li>两层，前后端 cookie 有效期可能不一致</li><li>前端 cookie 检查优先</li></ul><h2 id="封装" tabindex="-1"><a class="header-anchor" href="#封装" aria-hidden="true">#</a> 封装</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 获取cookie、</span>\n<span class="token keyword">function</span> <span class="token function">getCookie</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> reg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">(^| )</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">=([^;]*)(;|$)</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n  <span class="token keyword">const</span> arr <span class="token operator">=</span> document<span class="token punctuation">.</span>cookie<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>reg<span class="token punctuation">)</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token keyword">return</span> arr<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>\n  <span class="token keyword">return</span> <span class="token keyword">null</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 设置cookie,增加到vue实例方便全局调用</span>\n<span class="token keyword">function</span> <span class="token function">setCookie</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> value<span class="token punctuation">,</span> expireDays</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> value <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    value <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">const</span> expireDate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  expireDate<span class="token punctuation">.</span><span class="token function">setDate</span><span class="token punctuation">(</span>expireDate<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> expireDays<span class="token punctuation">)</span>\n  <span class="token keyword">const</span> expireDateKeyValue <span class="token operator">=</span>\n    expireDays <span class="token operator">===</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token string">&#39;&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;;expires=&#39;</span> <span class="token operator">+</span> expireDate<span class="token punctuation">.</span><span class="token function">toUTCString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token keyword">const</span> domainKeyValue <span class="token operator">=</span>\n    location<span class="token punctuation">.</span>host<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;aijianzi&#39;</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token string">&#39;;domain=.google.com&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;&#39;</span>\n  <span class="token keyword">const</span> cookieValue <span class="token operator">=</span> <span class="token function">escape</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">+</span> expireDateKeyValue <span class="token operator">+</span> domainKeyValue\n  document<span class="token punctuation">.</span>cookie <span class="token operator">=</span> name <span class="token operator">+</span> <span class="token string">&#39;=&#39;</span> <span class="token operator">+</span> cookieValue\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 删除cookie</span>\n<span class="token keyword">function</span> <span class="token function">delCookie</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token function">setCookie</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><p>document.cookie = <code>${name}=${escape(value)}${(expiredays == null) ? &#39;&#39; :</code>;expires=${exdate.toGMTString()}<code>};path=/;</code>;</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> c_value <span class="token operator">=</span> <span class="token function">escape</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>exdays <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">&quot;&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;; expires=&quot;</span> <span class="token operator">+</span> exdate<span class="token punctuation">.</span><span class="token function">toUTCString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="子域名共享" tabindex="-1"><a class="header-anchor" href="#子域名共享" aria-hidden="true">#</a> 子域名共享</h2>',13),r=e("li",null,[e("p",null,"不同业务间影响")],-1),i=e("li",null,[e("p",null,"key name 用域名空间解决，如 token34/token35")],-1),u=e("p",null,"同名 cookie，泛域名会优先被读取？",-1),k={href:"https://stackoverflow.com/questions/5671451/creating-a-javascript-cookie-on-a-domain-and-reading-it-across-sub-domains",target:"_blank",rel:"noopener noreferrer"},d=t("Creating a JavaScript cookie on a domain and reading it across sub domains - Stack Overflow"),b=e("h2",{id:"domain",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#domain","aria-hidden":"true"},"#"),t(" domain")],-1),h=e("li",null,[e("p",null,"值要有两个点")],-1),m=e("p",null,"localhost 时要完全省略掉",-1),f={href:"https://stackoverflow.com/questions/1134290/cookies-on-localhost-with-explicit-domain",target:"_blank",rel:"noopener noreferrer"},g=t("setcookie - Cookies on localhost with explicit domain - Stack Overflow"),x=e("h2",{id:"同步",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#同步","aria-hidden":"true"},"#"),t(" 同步")],-1),y=e("li",null,[e("p",null,"写入 cookie 是同步操作，阻塞")],-1),w=e("p",null,"不知道写入成功还是失败",-1),v={href:"https://wicg.github.io/cookie-store/#intro-proposed-change",target:"_blank",rel:"noopener noreferrer"},C=t("Cookie Store API"),D=e("h2",{id:"小程序不支持-cookie-设置",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#小程序不支持-cookie-设置","aria-hidden":"true"},"#"),t(" 小程序不支持 cookie 设置")],-1),E=t("意思是对接受的请求，不会存 cookie，我们可以自己封装利用 storage 存起来模拟 "),j={href:"https://www.waitig.com/%25E5%25BE%25AE%25E4%25BF%25A1%25E5%25B0%258F%25E7%25A8%258B%25E5%25BA%258Fcookie-session%25E9%2597%25AE%25E9%25A2%2598.html",target:"_blank",rel:"noopener noreferrer"},S=t("微信小程序 cookie-session 问题 | 等英博客"),A=e("h2",{id:"基于-token-的认证方式更好",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#基于-token-的认证方式更好","aria-hidden":"true"},"#"),t(" 基于 token 的认证方式更好")],-1),_=e("p",null,"cookie 与 token 方式，根本区别，存储位置，前者需要服务器存 session、客户端存 session id，后者算法生成 token，仅客户端保存（JWT）",-1),q=e("p",null,"无状态、性能更好（带宽、服务器解密即可，不必存 session）、通用性（小程序、oAuth）",-1),V=e("h2",{id:"参考",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#参考","aria-hidden":"true"},"#"),t(" 参考")],-1),$={href:"https://blog.csdn.net/hf872914334/article/details/78979007",target:"_blank",rel:"noopener noreferrer"},B=t("Cookie -- 前端视角 - hf872914334 的博客 - CSDN 博客"),O={href:"https://github.com/yinxin630/blog/issues/2",target:"_blank",rel:"noopener noreferrer"},F=t("Cookie 的设置、读取以及是否自动携带问题 · Issue #2 · yinxin630/blog");c.render=function(o,t){const c=n("OutboundLink");return a(),s(p,null,[l,e("ul",null,[r,i,e("li",null,[u,e("p",null,[e("a",k,[d,e(c)])])])]),b,e("ul",null,[h,e("li",null,[m,e("p",null,[e("a",f,[g,e(c)])])])]),x,e("ul",null,[y,e("li",null,[w,e("p",null,[e("a",v,[C,e(c)])])])]),D,e("p",null,[E,e("a",j,[S,e(c)])]),A,_,q,V,e("p",null,[e("a",$,[B,e(c)]),e("a",O,[F,e(c)])])],64)};export default c;
