import{_ as o,r as e,o as c,c as l,a as n,b as p,F as u,d as a,e as s}from"./app.f9389a44.js";const i={},k=n("h1",{id:"\u6280\u5DE7",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u6280\u5DE7","aria-hidden":"true"},"#"),a(" \u6280\u5DE7")],-1),r=n("p",null,"\u63D2\u4EF6\u5E93",-1),d={href:"https://vanillajstoolkit.com/",target:"_blank",rel:"noopener noreferrer"},g=a("The Vanilla JS Toolkit"),f=s(`<li><p>\u5EFA\u8BAE\u4E0D\u8981\u4F7F\u7528<code>||</code>\u6765\u63A5\u9ED8\u8BA4\u503C\uFF0C\u56E0\u4E3A\u8FD9\u6837\uFF0C\u5C31\u4E0D\u80FD\u8D4B\u503C\u4E3A 0 \u4E86\uFF0C0 \u4F1A\u88AB\u5F53\u4F5C\u5047\u503C\u800C\u53D6\u9ED8\u8BA4\u503C\u3002</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token parameter">age</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age <span class="token operator">||</span> <span class="token number">10</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">// 10</span>
</code></pre></div><p>\u6539\u8FDB\u540E\u7684\u4EE3\u7801\uFF0C\u53EA\u6709\u5728 age \u4E3A undefined \u65F6\u624D\u53D6\u9ED8\u8BA4\u503C\u3002</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token parameter">age</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token keyword">typeof</span> age <span class="token operator">!==</span> <span class="token string">&#39;undefined&#39;</span> <span class="token operator">?</span> age <span class="token operator">:</span> <span class="token number">10</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">// 0</span>
</code></pre></div><p><code>typeof</code>\u7684\u76EE\u7684\u662F\u786E\u4FDD\u4E0D\u4F1A\u629B\u51FA<code>ReferenceError</code>\uFF08\u5F15\u7528\u9519\u8BEF\uFF09</p></li><li><p>bind \u7684\u5999\u7528</p></li>`,2),m=s(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;bar&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;baz&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token class-name">RegExp</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">a</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// [&quot;bar&quot;, &quot;baz&quot;]</span>
</code></pre></div><ul><li>\u7528<code>+</code>\u53F7\u628A\u5B57\u7B26\u4E32\u8F6C\u6210\u6570\u503C</li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">var</span> string <span class="token operator">=</span> <span class="token string">&#39;500&#39;</span>
<span class="token keyword">var</span> num <span class="token operator">=</span> <span class="token operator">+</span>string
</code></pre></div><ul><li>\u7528<code>!!</code>\u5C06\u503C\u5F3A\u5236\u8F6C\u4E3A\u5E03\u5C14\u503C</li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token operator">!</span><span class="token operator">!</span><span class="token keyword">null</span> <span class="token comment">// false</span>
<span class="token operator">!</span><span class="token operator">!</span><span class="token keyword">undefined</span> <span class="token comment">// false</span>
<span class="token operator">!</span><span class="token operator">!</span><span class="token string">&#39;false&#39;</span> <span class="token comment">// true :(</span>
<span class="token operator">!</span><span class="token operator">!</span><span class="token string">&#39;&#39;</span> <span class="token comment">// false</span>
</code></pre></div><ul><li>sort \u65B9\u6CD5\u5BF9\u6570\u5B57\u6392\u5E8F</li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> a <span class="token operator">-</span> b
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; [7, 8, 9, 10, 11]</span>
</code></pre></div><ul><li>\u8FD4\u56DE\u6BEB\u79D2</li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token punctuation">;</span><span class="token operator">+</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 1259359833574</span>
</code></pre></div><ul><li>\u6570\u7EC4\u8FFD\u52A0</li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span>
<span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span>

<span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
</code></pre></div><ul><li>\u4F4D\u6570\u8865\u9F50</li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">PrefixInteger</span><span class="token punctuation">(</span><span class="token parameter">num<span class="token punctuation">,</span> length</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token function">Array</span><span class="token punctuation">(</span>length<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;0&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span> num<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span>length<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">PrefixInteger</span><span class="token punctuation">(</span><span class="token number">233</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token comment">// &quot;0233&quot;</span>
</code></pre></div><ul><li>\u521B\u5EFA\u6307\u5B9A\u957F\u5EA6\u968F\u673A\u5B57\u7B26\u4E32</li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">RandomString</span><span class="token punctuation">(</span><span class="token parameter">length</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span>
    <span class="token punctuation">;</span>
    str<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> length<span class="token punctuation">;</span>
    str <span class="token operator">+=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">36</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> length<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">RandomString</span><span class="token punctuation">(</span><span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre></div>`,15),v=s("<li>\u7528<code>parseInt</code>\u89E3\u6790\u6570\u5B57\uFF0C\u5E76\u6C42\u548C</li><li>\u7ED9\u8F93\u5165\u6846\u6DFB\u52A0<code>keyup</code>\u7ED1\u5B9A\u4E8B\u4EF6</li><li>\u7528<code>replace</code>\u65B9\u6CD5\u5C06\u975E\u6570\u5B57\u66FF\u6362\u4E3A\u7A7A</li><li>\u63D0\u4EA4\u6309\u94AE\u6DFB\u52A0<code>click</code>\u4E8B\u4EF6\uFF0C\u81F3\u5C11\u4E00\u4E2A\u4E3A\u7A7A\uFF0C<code>alert</code>\u63D0\u793A\uFF0C\u5426\u5219\u6267\u884C\u76F8\u52A0\u64CD\u4F5C</li>",4),y={href:"http://fgm.cc/learn/lesson3/03.html",target:"_blank",rel:"noopener noreferrer"},h=a("\u7D2F\u52A0\u6309\u94AE\uFF0C\u81EA\u52A0 1"),b=s(`<li>\u521D\u59CB\u503C\u4E3A 0</li><li><code>click</code>\u4E00\u6B21\uFF0C\u5C06\u503C\u52A0 1 \u5E76\u5F39\u51FA</li><li>\u4E0D\u8981\u53EA\u662F\u4E3A\u4E86\u6DFB\u52A0\u4E00\u4E2A<code>console.log</code>\u6765\u8F6C\u6362\u7BAD\u5934\u51FD\u6570\uFF0C\u4F60\u53EF\u4EE5\u7528<code>||</code>\u6DFB\u52A0\u5B83 \u7136\u540E\u5728\u4EE5\u540E\u53BB\u6389\u5B83<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token function-variable function">fn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token number">2</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// \u56E0 console.log \u7684\u8FD4\u56DE\u662F undefined\uFF0C\u6545\u4E0D\u5F71\u54CD\u539F\u51FD\u6570</span>
</code></pre></div></li>`,3),j=s(`<h2 id="\u4ECE-object-\u6784\u5EFA-url-querystring" tabindex="-1"><a class="header-anchor" href="#\u4ECE-object-\u6784\u5EFA-url-querystring" aria-hidden="true">#</a> \u4ECE Object \u6784\u5EFA URL querystring</h2><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// build a query string from an object</span>
<span class="token keyword">function</span> <span class="token function">buildQuery</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> data <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token keyword">return</span> data

  <span class="token keyword">const</span> query <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      query<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;=&#39;</span> <span class="token operator">+</span> <span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> query<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&amp;&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div>`,2),_={href:"https://gomakethings.com/how-to-build-a-query-string-from-an-object-with-vanilla-js/",target:"_blank",rel:"noopener noreferrer"},w=a("How to build a query string from an object with vanilla JS | Go Make Things");function x(q,I){const t=e("ExternalLinkIcon");return c(),l(u,null,[k,n("ul",null,[n("li",null,[r,n("p",null,[n("a",d,[g,p(t)])])]),f]),m,n("ul",null,[v,n("li",null,[n("a",y,[h,p(t)])]),b]),j,n("p",null,[n("a",_,[w,p(t)])])],64)}var A=o(i,[["render",x],["__file","tricks.html.vue"]]);export{A as default};
