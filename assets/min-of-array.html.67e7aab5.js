import{r as n,o as s,c as a,a as p,F as t,d as e,b as o}from"./app.31fc93bc.js";const c={},l=e('<h1 id="数组最小值" tabindex="-1"><a class="header-anchor" href="#数组最小值" aria-hidden="true">#</a> 数组最小值</h1><p>函数参数有上限，因此 apply array 可能超出限制，可分解处理规避</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">function</span> <span class="token function">minOfArray</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> min <span class="token operator">=</span> <span class="token number">Infinity</span> <span class="token comment">// 需要初始一个最大值以便后面比较</span>\n    <span class="token keyword">const</span> limit <span class="token operator">=</span> <span class="token number">30000</span> <span class="token comment">// 假定</span>\n\n    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">+=</span> limit<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">let</span> curMin <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> arr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> i <span class="token operator">+</span> limit<span class="token punctuation">)</span><span class="token punctuation">)</span>\n      min <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>min<span class="token punctuation">,</span> curMin<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">return</span> min\n  <span class="token punctuation">}</span>\n  <span class="token comment">//   let arr = new Array(2 ** 32 - 1).fill(Math.random() * 100) // browser stuck</span>\n  <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">**</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span>\n  <span class="token comment">//   let res2 = Math.min.apply(null, arr) // when arguments length to 2 ** 17,  chrome throw error &#39;blank:15 Uncaught RangeError: Maximum call stack size exceeded&#39;</span>\n  <span class="token comment">//   console.log(res2)</span>\n  <span class="token keyword">let</span> res1 <span class="token operator">=</span> <span class="token function">minOfArray</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res1<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div>',3),r=o("source: "),u={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply",target:"_blank",rel:"noopener noreferrer"},i=o("Function.prototype.apply() - JavaScript | MDN");c.render=function(e,o){const c=n("OutboundLink");return s(),a(t,null,[l,p("p",null,[r,p("a",u,[i,p(c)])])],64)};export default c;
