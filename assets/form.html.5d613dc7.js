import{r as a,o as n,c as s,a as e,F as t,d as p,b as o}from"./app.09b8f80a.js";const l={},r=p('<h1 id="表单" tabindex="-1"><a class="header-anchor" href="#表单" aria-hidden="true">#</a> 表单</h1><h2 id="提交一组数据" tabindex="-1"><a class="header-anchor" href="#提交一组数据" aria-hidden="true">#</a> 提交一组数据</h2><p>类型是<code>multipart/form-data</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span>\n  headers<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token string">&#39;content-type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;multipart/form-data&#39;</span> <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',4),c={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/FormData/Using_FormData_Objects",target:"_blank",rel:"noopener noreferrer"},i=o("FormData 对象的使用 - Web API 接口 | MDN"),u={href:"http://blog.csdn.net/wopelo/article/details/78783442",target:"_blank",rel:"noopener noreferrer"},d=o("axios post提交formdata - wopelo的博客 - CSDN博客"),k=e("h2",{id:"交互形式",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#交互形式","aria-hidden":"true"},"#"),o(" 交互形式")],-1),m=e("ul",null,[e("li",null,"失焦验证"),e("li",null,"输入验证 input/textarea 没有change事件，是input事件"),e("li",null,"提交验证")],-1),h=e("h2",{id:"密码记忆规则",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#密码记忆规则","aria-hidden":"true"},"#"),o(" 密码记忆规则")],-1),g={href:"https://developers.google.com/web/fundamentals/security/credential-management/save-forms",target:"_blank",rel:"noopener noreferrer"},b=o("Save Credentials from Forms  |  Web Fundamentals  |  Google Developers"),f=p('<p>不希望填充，使用 autocomplete 的<code>new-password</code>值</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>userPassword<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span> <span class="token attr-name">autocomplete</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>new-password<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',2),v={href:"https://stackoverflow.com/questions/23156578/google-chrome-autofilling-all-password-inputs",target:"_blank",rel:"noopener noreferrer"},w=o("html - Google chrome autofilling all password inputs - Stack Overflow"),x=p('<h2 id="姓名、昵称中间如果有多个连续空格-替换为一个空格" tabindex="-1"><a class="header-anchor" href="#姓名、昵称中间如果有多个连续空格-替换为一个空格" aria-hidden="true">#</a> 姓名、昵称中间如果有多个连续空格，替换为一个空格</h2><p>问题：<code>white-space: normal</code>，超过一个的空格会被省略</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">this</span><span class="token punctuation">.</span>ruleForm<span class="token punctuation">.</span>consignee <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>ruleForm<span class="token punctuation">.</span>consignee<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\s+</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39; &#39;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>另一种处理是，<code>white-space: pre</code></p><p>即：当一个 form 元素中只有一个输入框时，在该输入框中按下回车应提交该表单。如果希望阻止这一默认行为，可以在 标签上添加 @submit.native.prevent。</p><p>———————————————— 版权声明：本文为CSDN博主「留给时间」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。 原文链接：https://blog.csdn.net/qq_32340877/article/details/80272155</p>',6);l.render=function(p,o){const l=a("OutboundLink");return n(),s(t,null,[r,e("p",null,[e("a",c,[i,e(l)]),e("a",u,[d,e(l)])]),k,m,h,e("p",null,[e("a",g,[b,e(l)])]),f,e("p",null,[e("a",v,[w,e(l)])]),x],64)};export default l;
