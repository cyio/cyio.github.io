import{_ as n,e as s}from"./app.ed8e8fb9.js";const a={},p=s(`<h1 id="\u8D44\u6E90\u52A0\u8F7D\u5668" tabindex="-1"><a class="header-anchor" href="#\u8D44\u6E90\u52A0\u8F7D\u5668" aria-hidden="true">#</a> \u8D44\u6E90\u52A0\u8F7D\u5668</h1><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// source [Create a Basic Loader with JavaScript Promises](https://davidwalsh.name/javascript-loader)</span>
<span class="token keyword">var</span> load <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Function which returns a function: https://davidwalsh.name/javascript-functions</span>
  <span class="token keyword">function</span> <span class="token function">_load</span><span class="token punctuation">(</span><span class="token parameter">tag</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// This promise will be used by Promise.all to determine success or failure</span>
      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> element <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span>tag<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> parent <span class="token operator">=</span> <span class="token string">&#39;body&#39;</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> attr <span class="token operator">=</span> <span class="token string">&#39;src&#39;</span><span class="token punctuation">;</span>

        <span class="token comment">// Important success and error for the promise</span>
        element<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">resolve</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        element<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">reject</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>

        <span class="token comment">// Need to set different attributes depending on tag type</span>
        <span class="token keyword">switch</span><span class="token punctuation">(</span>tag<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">case</span> <span class="token string">&#39;script&#39;</span><span class="token operator">:</span>
            element<span class="token punctuation">.</span>async <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
          <span class="token keyword">case</span> <span class="token string">&#39;link&#39;</span><span class="token operator">:</span>
            element<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token string">&#39;text/css&#39;</span><span class="token punctuation">;</span>
            element<span class="token punctuation">.</span>rel <span class="token operator">=</span> <span class="token string">&#39;stylesheet&#39;</span><span class="token punctuation">;</span>
            attr <span class="token operator">=</span> <span class="token string">&#39;href&#39;</span><span class="token punctuation">;</span>
            parent <span class="token operator">=</span> <span class="token string">&#39;head&#39;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// Inject into document to kick off loading</span>
        element<span class="token punctuation">[</span>attr<span class="token punctuation">]</span> <span class="token operator">=</span> url<span class="token punctuation">;</span>
        document<span class="token punctuation">[</span>parent<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">css</span><span class="token operator">:</span> <span class="token function">_load</span><span class="token punctuation">(</span><span class="token string">&#39;link&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">js</span><span class="token operator">:</span> <span class="token function">_load</span><span class="token punctuation">(</span><span class="token string">&#39;script&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">img</span><span class="token operator">:</span> <span class="token function">_load</span><span class="token punctuation">(</span><span class="token string">&#39;img&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Usage:  Load different file types with one callback</span>
Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    load<span class="token punctuation">.</span><span class="token function">js</span><span class="token punctuation">(</span><span class="token string">&#39;lib/highlighter.js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> 
    load<span class="token punctuation">.</span><span class="token function">js</span><span class="token punctuation">(</span><span class="token string">&#39;lib/main.js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> 
    load<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">&#39;lib/highlighter.css&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    load<span class="token punctuation">.</span><span class="token function">img</span><span class="token punctuation">(</span><span class="token string">&#39;images/logo.png&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Everything has loaded!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Oh no, epic failure!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br></div></div>`,2);function t(e,o){return p}var l=n(a,[["render",t],["__file","resourse-loader.html.vue"]]);export{l as default};
