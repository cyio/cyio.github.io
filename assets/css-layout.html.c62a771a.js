import{r as n,o as s,c as a,a as e,w as p,F as t,b as l,d as o}from"./app.26466922.js";const c={},r=e("h1",{id:"css-布局",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#css-布局","aria-hidden":"true"},"#"),l(" CSS 布局")],-1),u={class:"table-of-contents"},i=l("左侧定宽，右侧自适应"),b=l("table 结构化内容"),d=l("列表水平排列带 gap wrap"),k=l("Grid VS Flexbox"),m={href:"https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout",target:"_blank",rel:"noopener noreferrer"},h=l("CSS layout - Learn web development | MDN"),x=e("h2",{id:"左侧定宽-右侧自适应",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#左侧定宽-右侧自适应","aria-hidden":"true"},"#"),l(" 左侧定宽，右侧自适应")],-1),g={href:"https://codepen.io/cyio/pen/mdrXQor",target:"_blank",rel:"noopener noreferrer"},f=l("flex 左侧定宽，右侧自适应"),y=e("div",{class:"language-text ext-text line-numbers-mode"},[e("pre",{class:"language-text"},[e("code",null,"\tflex-grow: 1;\n")]),e("div",{class:"line-numbers"},[e("span",{class:"line-number"},"1"),e("br")])],-1),v={href:"https://codepen.io/cyio/pen/wvzyQLr",target:"_blank",rel:"noopener noreferrer"},w=l("position 左侧定宽，右侧自适应"),S=e("div",{class:"language-text ext-text line-numbers-mode"},[e("pre",{class:"language-text"},[e("code",null,"\twidth: calc(100vw - 200px)\n")]),e("div",{class:"line-numbers"},[e("span",{class:"line-number"},"1"),e("br")])],-1),_={href:"https://codepen.io/cyio/pen/KKgQbPB",target:"_blank",rel:"noopener noreferrer"},C=l("grid 左侧定宽，右侧自适应"),F=o('<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\tgrid-template-columns: 200px 1fr;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="table-结构化内容" tabindex="-1"><a class="header-anchor" href="#table-结构化内容" aria-hidden="true">#</a> table 结构化内容</h2><ul><li>html 同样有表格标签，但不建议用，使用 css table 可以只使用需要的特性，灵活</li><li>flex 也能实现，table 兼容性更好</li><li>seo、性能有问题？</li><li>最常用场景，动态高度下，实现垂直居中。通过声明<code>table-cell</code>，使<code>vertical-align</code>可用</li></ul><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">.box</span> <span class="token punctuation">{</span>\n  <span class="token property">display</span><span class="token punctuation">:</span> table-cell<span class="token punctuation">;</span>\n  <span class="token property">vertical-align</span><span class="token punctuation">:</span> middle<span class="token punctuation">;</span>\n  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.box</span> <span class="token punctuation">{</span>\n  <span class="token property">display</span><span class="token punctuation">:</span> table<span class="token punctuation">;</span>\n  <span class="token property">margin</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><ul><li>媒体查询，利用 table 属性，调整排序</li></ul><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token comment">/* 768px */</span>\n<span class="token atrule"><span class="token rule">@media</span> <span class="token keyword">only</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span>48em<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>\n   <span class="token selector">.boxes</span> <span class="token punctuation">{</span>\n      <span class="token property">display</span><span class="token punctuation">:</span>table<span class="token punctuation">;</span>\n      <span class="token property">width</span><span class="token punctuation">:</span>100%<span class="token punctuation">;</span>\n   <span class="token punctuation">}</span>\n   <span class="token selector">.box</span> <span class="token punctuation">{</span>\n      <span class="token property">display</span><span class="token punctuation">:</span>block<span class="token punctuation">;</span>\n      <span class="token property">width</span><span class="token punctuation">:</span>100%<span class="token punctuation">;</span>\n   <span class="token punctuation">}</span>\n   <span class="token selector">.three</span> <span class="token punctuation">{</span> <span class="token property">display</span><span class="token punctuation">:</span>table-caption<span class="token punctuation">;</span> <span class="token punctuation">}</span>\n   <span class="token selector">.four</span> <span class="token punctuation">{</span> <span class="token property">display</span><span class="token punctuation">:</span>table-header-group<span class="token punctuation">;</span> <span class="token punctuation">}</span>\n   <span class="token selector">.one</span> <span class="token punctuation">{</span> <span class="token property">display</span><span class="token punctuation">:</span>table-footer-group<span class="token punctuation">;</span> <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div>',6),L={href:"https://colintoh.com/blog/display-table-anti-hero",target:"_blank",rel:"noopener noreferrer"},G=l('The Anti-hero of CSS Layout - "display:table" | Colin Toh'),q={href:"https://philipwalton.github.io/solved-by-flexbox/",target:"_blank",rel:"noopener noreferrer"},j=l("Solved by Flexbox — Cleaner, hack-free CSS"),Q=o('<h2 id="列表水平排列带-gap-wrap" tabindex="-1"><a class="header-anchor" href="#列表水平排列带-gap-wrap" aria-hidden="true">#</a> 列表水平排列带 gap wrap</h2><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">.list</span> <span class="token punctuation">{</span>\n  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>\n  <span class="token property">justify-content</span><span class="token punctuation">:</span> space-between<span class="token punctuation">;</span>\n  <span class="token property">flex-wrap</span><span class="token punctuation">:</span> wrap<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token selector">.item</span> <span class="token punctuation">{</span>\n  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span>25% - 0.02rem<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="grid-vs-flexbox" tabindex="-1"><a class="header-anchor" href="#grid-vs-flexbox" aria-hidden="true">#</a> Grid VS Flexbox</h2><blockquote><p>Flexbox 非常适合一维布局，但是对于其它一切，我只会使用使用 Flexbox 如果不能用 Grid 的话。</p></blockquote><blockquote><p>Flexbox 是内容驱动的。 渐进式渲染会在发现盒子时，给你提供不稳定的布局。 Grid 允许你预先定义布局，因此渐进式渲染可以保持稳定。</p></blockquote><p>Grid 现在除了 IE，都有很好兼容性</p>',6),z={href:"https://jakearchibald.com/2014/dont-use-flexbox-for-page-layout/",target:"_blank",rel:"noopener noreferrer"},A=l("Don't use flexbox for overall page layout - JakeArchibald.com");c.render=function(l,o){const c=n("RouterLink"),D=n("OutboundLink");return s(),a(t,null,[r,e("nav",u,[e("ul",null,[e("li",null,[e(c,{to:"#左侧定宽-右侧自适应"},{default:p((()=>[i])),_:1})]),e("li",null,[e(c,{to:"#table-结构化内容"},{default:p((()=>[b])),_:1})]),e("li",null,[e(c,{to:"#列表水平排列带-gap-wrap"},{default:p((()=>[d])),_:1})]),e("li",null,[e(c,{to:"#grid-vs-flexbox"},{default:p((()=>[k])),_:1})])])]),e("p",null,[e("a",m,[h,e(D)])]),x,e("p",null,[e("a",g,[f,e(D)])]),y,e("p",null,[e("a",v,[w,e(D)])]),S,e("p",null,[e("a",_,[C,e(D)])]),F,e("p",null,[e("a",L,[G,e(D)]),e("a",q,[j,e(D)])]),Q,e("p",null,[e("a",z,[A,e(D)])])],64)};export default c;
