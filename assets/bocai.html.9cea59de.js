import{r as n,o as s,c as a,a as p,F as t,d as e,b as o}from"./app.31fc93bc.js";const c={},l=e('<ul><li><p>LESS</p><ul><li>公共类的复用，其实提取出来就 OK</li><li>.class() 这种方式引入的只是里面的规则，而 class 类似函数名</li></ul></li><li><p>小红点：是在 badge 上 hack 了一些。</p></li><li><p>倒三角：用图标字体做的，用纯 CSS 有点麻烦，得不偿失。</p></li><li><p>不定宽文字加个编辑图标：</p></li></ul><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">.name</span> <span class="token punctuation">{</span>\n  <span class="token selector">span</span> <span class="token punctuation">{</span>\n    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>\n    <span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token selector">i.edit</span> <span class="token punctuation">{</span>\n    <span class="token property">font-size</span><span class="token punctuation">:</span> 11px<span class="token punctuation">;</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> #8e8e8f<span class="token punctuation">;</span>\n    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>\n    <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token property">right</span><span class="token punctuation">:</span> -16px<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div>',2),u=o("列表的进入箭头上下居中："),i={href:"https://coding.net/u/fnsoxt/p/bocai/git/commit/69a5f0ad36b1fa9f9d4511589d2f47673df72bbe",target:"_blank",rel:"noopener noreferrer"},r=o("Commit - 69a5f0ad36b1fa9f9d4511589d2f47673df72bbe - fnsoxt - bocai - Coding.net"),k=p("p",null,[o("思路就是：隐藏标题行的箭头，把"),p("code",null,".item-link .item-inner"),o("的箭头显示出来")],-1),b=e("<li><p>去掉链接切换动画，方法有二</p><ul><li>在 a 上添加 no-animation 类</li><li>配置 data <code>&lt;a href=&quot;about.html&quot; data-animate-pages=&quot;false&quot;&gt;&lt;/a&gt;</code></li></ul></li><li><p>固定工具栏，页面变但工具栏不变，用 tabbar 实现。注意它的原理是在页面内访问 tab ID 的，而项目中各个页面比较复杂是在单独文件中写的。解决方法是，把 tablink 换成 link，然后工具栏上的链接去掉动画。</p></li><li><p>默认的布局（flex）不能直接用 show 方法，因为 show 就是 display: block，而 flex 不是 block，解决方法是套一个 div</p></li><li><p>工具栏下方多了 1px 的空白，用负的 margin-top 修复</p></li><li><p>事件冒泡</p></li>",5),m=e('<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 点击菠菜按钮</span>\n<span class="token function">$$</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span>container<span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;.match-card .btn.enable&#39;</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    e<span class="token punctuation">.</span><span class="token function">stopPropagation</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    mainView<span class="token punctuation">.</span>router<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      url<span class="token operator">:</span> <span class="token string">&#39;bocai.html&#39;</span><span class="token punctuation">,</span>\n      dataset<span class="token operator">:</span> <span class="token function">$$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">dataset</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><ul><li><p>写一个功能写老半天，还是不熟练</p><ul><li>for 的条件写反了</li><li>如何给对象添加值，object.key，注意这里不要 var 声明，因为 object 已经存在</li><li>如果对象的 key 是字符串，如何访问对应的值，用 Object.keys(object)，得到的是 keys 数组，所以还要加个数组序号去访问 key 对应的值。Object.keys(object)[index]</li></ul></li><li><p>用 for-in 还是 for 看这里是否需要按顺序枚举，如果不需要，用 for in 也行</p></li><li><p>添加一个最简单的遮罩</p></li></ul><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>box<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>this is a box<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">.box</span> <span class="token punctuation">{</span>\n  <span class="token property">width</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>\n  <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>\n  <span class="token property">background</span><span class="token punctuation">:</span> #ccc<span class="token punctuation">;</span>\n  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.box:before</span> <span class="token punctuation">{</span>\n  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>\n  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>\n  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>\n  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>\n  <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>\n  <span class="token property">background</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>\n  <span class="token property">opacity</span><span class="token punctuation">:</span> 0.6<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><ul><li>border 和内容保持一个颜色，就是不给 border 设置颜色，而是继承 color</li></ul><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">.box</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>\n  <span class="token property">border</span><span class="token punctuation">:</span> 1px solid<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li><p>键盘遮挡问题</p><ul><li>微信下输入框正常，是 F7 库的问题，由于两栏的高度，而浏览器滚动原生检测的是 body</li><li>scrollintoview 会引起重绘，导致页面向上位移，textarea 各种奇怪表现</li><li>所以，绕过 scrollintoview，用 translate 替代，替代后 page-on-left 会显示在左下部分，要隐藏掉</li></ul></li><li><p>无限滚动的 preloader，没数据时要手动移除。因为 preloader 是用户滚下去就要看到，所以默认是显示并一直在那里的。</p></li><li><p>获取滚动条的值，兼容 iOS 和 Android <code>window.scrollY window.scrollX</code></p></li><li><p>jade 复用，直接 include 即可，页面继承</p></li><li><p>把 css 和 js 都抽象成“资源”，相当于：组件 = 模板 + 资源</p></li><li><p>swiper</p><ul><li><p>要么用类自动初始化，要么用 JS 手动控制，两者有冲突。注意 data 加短杠传参与 JS 写法的不同，前者是把词用短杠连接，后者是驼峰命名。</p></li><li><p>swiper 的指示点在 Android 微信下会偶尔跑到左边，解决方法是在内联指示点的定位样式</p></li></ul></li><li><p>jQuery 没有 reset 方法，所以这里要取第一个元素，调用 form 的原生方法</p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">$$</span><span class="token punctuation">(</span><span class="token string">&#39;#feedback&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li>Android 下键盘遮挡问题，transform 版本</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token comment">// 解决Android下在From中输入，键盘弹出页面不能适应滚动的问题</span>\n<span class="token keyword">var</span> curPage <span class="token operator">=</span> <span class="token function">$$</span><span class="token punctuation">(</span><span class="token string">&quot;.page-content.game&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">var</span> pageHeightFull <span class="token operator">=</span> curPage<span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token function">$$</span><span class="token punctuation">(</span><span class="token string">&quot;.item-input &gt; *&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">index<span class="token punctuation">,</span>dom</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token function">$$</span><span class="token punctuation">(</span>dom<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;focus&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        domTop <span class="token operator">=</span> <span class="token function">$$</span><span class="token punctuation">(</span>dom<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>top <span class="token operator">+</span> <span class="token function">$$</span><span class="token punctuation">(</span>dom<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 获取当前输入控件与页面顶部的距离</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token function">$$</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;resize&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>myApp<span class="token punctuation">.</span>device<span class="token punctuation">.</span>ios<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n    <span class="token keyword">var</span> pageHeightNew <span class="token operator">=</span> curPage<span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 键盘弹出时的页面高度</span>\n    <span class="token keyword">var</span> kbdHeight <span class="token operator">=</span> pageHeightFull <span class="token operator">-</span> pageHeightNew<span class="token punctuation">;</span> <span class="token comment">// 键盘高度</span>\n    <span class="token keyword">var</span> kbdTop <span class="token operator">=</span> pageHeightFull <span class="token operator">-</span> kbdHeight<span class="token punctuation">;</span> <span class="token comment">// 键盘与页面顶部之差</span>\n    <span class="token keyword">var</span> scrollHeight <span class="token operator">=</span> domTop <span class="token operator">-</span> kbdTop <span class="token operator">+</span> <span class="token number">45</span><span class="token punctuation">;</span> <span class="token comment">// 需要滚动的距离，要加上工具栏高度</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>pageHeightNew <span class="token operator">&lt;</span> pageHeightFull<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 检测页面高度发生变化（键盘弹出）</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>domTop <span class="token operator">&gt;=</span> pageHeightNew<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 输入控件被遮挡时才需要处理</span>\n            <span class="token keyword">var</span> tmpDiv <span class="token operator">=</span> <span class="token string">&quot;&lt;div id=&#39;tmp&#39; style=&#39;height:&quot;</span> <span class="token operator">+</span> kbdHeight <span class="token operator">+</span> <span class="token string">&quot;px&#39;&gt;&amp;nbsp;&lt;/div&gt;&quot;</span><span class="token punctuation">;</span> <span class="token comment">// 在页面底部临时插入键盘高度的div</span>\n            <span class="token function">$$</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span>container<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;.page-content&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>tmpDiv<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">scrollTop</span><span class="token punctuation">(</span>scrollHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n        <span class="token function">$$</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span>container<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;#tmp&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><ul><li>返回个位数日期</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">getSingleDay</span><span class="token punctuation">(</span><span class="token parameter">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">var</span> date <span class="token operator">=</span> string\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span>\n  <span class="token keyword">var</span> regex <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[\\u4e00-\\u9fa5]([0-9]{2})[\\u4e00-\\u9fa5]</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>\n  <span class="token keyword">var</span> matched <span class="token operator">=</span> regex<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>\n  console<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span>matched<span class="token punctuation">)</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span>matched<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    date <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>matched<span class="token punctuation">,</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>matched<span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">return</span> date\n<span class="token punctuation">}</span>\n\n<span class="token keyword">var</span> date <span class="token operator">=</span> <span class="token string">&#39;2月01日 星期一 1场可投&#39;</span>\n<span class="token function">getSingleDay</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span> <span class="token comment">// &#39;2月1日 星期一 1场可投&#39;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>或者</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> date <span class="token operator">=</span> <span class="token string">&#39;2月01日 星期一 1场可投&#39;</span>\n<span class="token comment">// var date = &#39;2月1日 星期一 1场可投&#39;</span>\n<span class="token keyword">var</span> regex <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">0[0-9]日</span><span class="token regex-delimiter">/</span></span> <span class="token comment">// 必须是 0 开头</span>\n\n<span class="token keyword">let</span> r <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>regex<span class="token punctuation">,</span> <span class="token parameter">match</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>match<span class="token punctuation">)</span>\n  <span class="token comment">// return match.slice(1)</span>\n  <span class="token keyword">return</span> match<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token comment">// replace 没有匹配分组，需要多处理一步</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>',14);c.render=function(e,o){const c=n("OutboundLink");return s(),a(t,null,[l,p("ul",null,[p("li",null,[p("p",null,[u,p("a",i,[r,p(c)])]),k]),b]),m],64)};export default c;
