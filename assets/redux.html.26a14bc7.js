import{r as e,o as a,c as r,a as t,w as l,F as n,b as s,d as i}from"./app.26466922.js";const u={},o=t("h1",{id:"redux",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#redux","aria-hidden":"true"},"#"),s(" Redux")],-1),d={class:"table-of-contents"},p=s("基础"),c=s("概念"),h=s("数据流"),b=s("官方 toolkit"),x=s("redux dev tool"),g=s("redux-saga library"),f=i('<h2 id="基础" tabindex="-1"><a class="header-anchor" href="#基础" aria-hidden="true">#</a> 基础</h2><blockquote><p>对于初学者，有大量概念需要记忆</p></blockquote><p>可预测的状态容器</p><p>可预测 | 集中管理 | 易于定位 debug</p><h3 id="概念" tabindex="-1"><a class="header-anchor" href="#概念" aria-hidden="true">#</a> 概念</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>store\n  state\n  emit action\n  pure reducer\n\n  // 创建 store，绑定 reducer\nlet store = createStore(counterReducer)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>介绍了适用场景 Redux is more useful when:，使用前需要思考适用场景 https://redux.js.org/tutorials/essentials/part-1-overview-concepts</p><p>action event type &quot;domain/eventName&quot; Action Creators</p><p>dispatch 触发事件</p><p>reducer event listener, update state reducer fn 实现形式不限制，if-else 也可以</p><p>getState 获取</p><p>selectors alias</p><h3 id="数据流" tabindex="-1"><a class="header-anchor" href="#数据流" aria-hidden="true">#</a> 数据流</h3><p>单向数据流流程:</p><ul><li>state 描述某一时刻应用条件</li><li>基于 state 渲染 UI</li><li>事件触发，state 更新</li><li>基于新状态 re-render UI</li></ul><p>redux 应用数据流:</p><ul><li>UI 组件仅关心的数据变化时，re-render</li></ul><p>https://redux.js.org/tutorials/essentials/part-1-overview-concepts#redux-application-data-flow</p><p>什么时候使用 redux</p><blockquote><p>Most form state probably shouldn&#39;t be kept in Redux.</p></blockquote><h2 id="官方-toolkit" tabindex="-1"><a class="header-anchor" href="#官方-toolkit" aria-hidden="true">#</a> 官方 toolkit</h2><p>configureStore</p><p>slice reducer/action 集合，某个特性</p><p>自动生成 action</p><p>thunk 转换程序，异步逻辑</p><p>createSlice 配置描述，很像 vuex 的 store 文件，内置 immer 库，支持同步写法</p><p>手写不可变更新逻辑，意外修改 state，是 redux 使用最常见错误</p><p>redux-thunk 中间件</p><h2 id="redux-dev-tool" tabindex="-1"><a class="header-anchor" href="#redux-dev-tool" aria-hidden="true">#</a> redux dev tool</h2><ul><li><p>diff 数据项变化 <img src="http://ww1.sinaimg.cn/large/4e5d3ea7gy1gj1qyi2thdj20q90d0tat.jpg" alt="image.png"></p></li><li><p>trace 定位 action 触发位置</p></li></ul><h2 id="redux-saga-library" tabindex="-1"><a class="header-anchor" href="#redux-saga-library" aria-hidden="true">#</a> redux-saga library</h2>',31),m={href:"https://redux-saga.js.org/",target:"_blank",rel:"noopener noreferrer"},k=s("Read Me · Redux-Saga"),v=t("p",null,"saga 专门处理副作用 中间件 Generator",-1),y=t("p",null,"fork 派生 用途 非阻塞任务",-1),q=t("p",null,"最终导出，rootSaga, rootReducer",-1),R=t("p",null,"takeEvery or takeLatest saga 有多个时",-1),_={href:"https://gist.github.com/cyio/627a6bbe5a3eb3c43a6630804568c59e",target:"_blank",rel:"noopener noreferrer"},j=s("https://github.com/redux-saga/redux-saga-beginner-tutorial");u.render=function(s,i){const u=e("RouterLink"),w=e("OutboundLink");return a(),r(n,null,[o,t("nav",d,[t("ul",null,[t("li",null,[t(u,{to:"#基础"},{default:l((()=>[p])),_:1}),t("ul",null,[t("li",null,[t(u,{to:"#概念"},{default:l((()=>[c])),_:1})]),t("li",null,[t(u,{to:"#数据流"},{default:l((()=>[h])),_:1})])])]),t("li",null,[t(u,{to:"#官方-toolkit"},{default:l((()=>[b])),_:1})]),t("li",null,[t(u,{to:"#redux-dev-tool"},{default:l((()=>[x])),_:1})]),t("li",null,[t(u,{to:"#redux-saga-library"},{default:l((()=>[g])),_:1})])])]),f,t("p",null,[t("a",m,[k,t(w)])]),v,y,q,R,t("p",null,[t("a",_,[j,t(w)])])],64)};export default u;
