import{_ as p,r as o,o as e,c,a as n,b as t,F as l,e as u,d as s}from"./app.f848f717.js";const i={},k=u(`<h1 id="puppeteer" tabindex="-1"><a class="header-anchor" href="#puppeteer" aria-hidden="true">#</a> Puppeteer</h1><h2 id="\u5F85\u9A8C\u8BC1" tabindex="-1"><a class="header-anchor" href="#\u5F85\u9A8C\u8BC1" aria-hidden="true">#</a> \u5F85\u9A8C\u8BC1</h2><ul><li>\u622A\u53D6\u7279\u5B9A\u533A\u57DF\uFF0C\u5982\u63A8\u6587\u5361\u7247</li></ul><h2 id="\u7F3A\u5931\u80FD\u529B\u4E0E\u66FF\u4EE3\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u7F3A\u5931\u80FD\u529B\u4E0E\u66FF\u4EE3\u65B9\u6CD5" aria-hidden="true">#</a> \u7F3A\u5931\u80FD\u529B\u4E0E\u66FF\u4EE3\u65B9\u6CD5</h2><ul><li>\u65E0\u6CD5\u5904\u7406\u6743\u9650\u5BF9\u8BDD\u6846\uFF0C\u53EF\u6307\u5B9A\u7528\u6237\u6587\u4EF6\u5939\uFF0C\u5728\u6307\u5B9A\u4E00\u6B21\u540E\u8BB0\u4F4F</li></ul><h2 id="\u72B6\u6001\u6761\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u72B6\u6001\u6761\u4EF6" aria-hidden="true">#</a> \u72B6\u6001\u6761\u4EF6</h2><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// networkidle0 \u6240\u6709\u8BF7\u6C42\u52A0\u8F7D\u5B8C</span>
<span class="token comment">// domcontentloaded \u53EA\u5173\u5FC3 markup</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">waitUtil</span><span class="token operator">:</span> <span class="token string">&#39;domcontentloaded&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="\u76D1\u542C\u9875\u9762\u53D8\u5316" tabindex="-1"><a class="header-anchor" href="#\u76D1\u542C\u9875\u9762\u53D8\u5316" aria-hidden="true">#</a> \u76D1\u542C\u9875\u9762\u53D8\u5316</h2><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> watchDog <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">waitForFunction</span><span class="token punctuation">(</span><span class="token string">&#39;window.innerWidth &lt; 100&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="\u7F13\u5B58" tabindex="-1"><a class="header-anchor" href="#\u7F13\u5B58" aria-hidden="true">#</a> \u7F13\u5B58</h2><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">Map</span>
<span class="token keyword">set</span>
has
</code></pre></div><h2 id="\u542F\u52A8\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#\u542F\u52A8\u53C2\u6570" aria-hidden="true">#</a> \u542F\u52A8\u53C2\u6570</h2><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> chromeConfig <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">headless</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// \u4E3A\u5047\u65F6\u6253\u5F00\u6D4F\u89C8\u5668\u7A97\u53E3\uFF0C\u670D\u52A1\u7AEF\u76F4\u63A5\u6CE8\u91CA\u6389</span>
  <span class="token literal-property property">args</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&#39;--no-sandbox&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;--disable-setuid-sandbox&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;--proxy-server=socks5://127.0.0.1:1081&#39;</span>  <span class="token comment">// \u672C\u5730\u6700\u597D\u4F7F\u7528\u4EE3\u7406</span>
    <span class="token string">&#39;--window-size=0,0&#39;</span><span class="token punctuation">,</span> <span class="token comment">// \u5C0F\u7A97\u53E3\uFF0C\u7528\u9014\u662F\u9700\u8981\u58F0\u97F3\u65F6\uFF0Cheadless \u6CA1\u58F0\u97F3</span>
    <span class="token string">&#39;--window-position=25,25&#39;</span><span class="token punctuation">,</span>
    <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">--disable-extensions-except=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">CRX</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">--load-extension=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">CRX</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u65E0\u6CD5\u9009\u4E2D\u5143\u7D20\u7684\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#\u65E0\u6CD5\u9009\u4E2D\u5143\u7D20\u7684\u5904\u7406" aria-hidden="true">#</a> \u65E0\u6CD5\u9009\u4E2D\u5143\u7D20\u7684\u5904\u7406</h2><p>CSS \u9009\u62E9\u5668\u4E2D\uFF0C\u6CA1\u6709\u9009\u62E9\u7236\u5143\u7D20\u7684\u9009\u62E9\u5668 \u5229\u7528<code>puppeteer.evaluate</code>\uFF0C\u52A0\u4E0A ID</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// \u70B9\u51FB input name=x \u7684\u4E0B\u62C9\u6846\u4E2D\u7684Item1</span>
<span class="token keyword">let</span> name <span class="token operator">=</span> <span class="token string">&#39;x&#39;</span>
<span class="token keyword">let</span> value <span class="token operator">=</span> <span class="token string">&#39;Item1&#39;</span>
<span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>page<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span>
  <span class="token keyword">let</span> list <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;[name=&#39;</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">&#39;]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>parentElement<span class="token punctuation">.</span>parentElement<span class="token punctuation">.</span>children<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>children<span class="token punctuation">)</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> list<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> c <span class="token operator">=</span> list<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
    c<span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token string">&#39;_select_&#39;</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">&#39;_&#39;</span> <span class="token operator">+</span> i
    <span class="token keyword">if</span> <span class="token punctuation">(</span>c<span class="token punctuation">.</span>innerText <span class="token operator">===</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// found ?</span>
      result <span class="token operator">=</span> i
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> result
<span class="token punctuation">}</span><span class="token punctuation">,</span> name<span class="token punctuation">,</span> value<span class="token punctuation">)</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>value <span class="token operator">+</span> <span class="token string">&#39; not found!!&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>page<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token string">&#39;#_select_x_&#39;</span> <span class="token operator">+</span> result<span class="token punctuation">)</span>
</code></pre></div><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">var</span> resp <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">timeout</span><span class="token operator">:</span><span class="token number">120000</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">var</span> html <span class="token operator">=</span> <span class="token keyword">await</span> resp<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="\u4FDD\u5B58\u548C\u6062\u590D-localstorage" tabindex="-1"><a class="header-anchor" href="#\u4FDD\u5B58\u548C\u6062\u590D-localstorage" aria-hidden="true">#</a> \u4FDD\u5B58\u548C\u6062\u590D localStorage</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">restoreLocalStorage</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> json <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>__dirname<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/local.json</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token parameter">json</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      localStorage<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> json<span class="token punctuation">)</span>
        localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> json<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> json<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> <span class="token function-variable function">saveLocalStorage</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;saving&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> json <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> json <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> localStorage<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> key <span class="token operator">=</span> localStorage<span class="token punctuation">.</span><span class="token function">key</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        json<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> json<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>json<span class="token punctuation">)</span><span class="token punctuation">;</span>
    fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>__dirname<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/local.json</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>json<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h2 id="\u7B49\u5F85\u5143\u7D20\u53EF\u89C1" tabindex="-1"><a class="header-anchor" href="#\u7B49\u5F85\u5143\u7D20\u53EF\u89C1" aria-hidden="true">#</a> \u7B49\u5F85\u5143\u7D20\u53EF\u89C1</h2><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">waitForSelector</span><span class="token punctuation">(</span><span class="token string">&#39;#element&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">visible</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="\u767B\u9646" tabindex="-1"><a class="header-anchor" href="#\u767B\u9646" aria-hidden="true">#</a> \u767B\u9646</h2><p>\u6807\u51C6\u7684\u7F51\u7AD9\uFF0C\u5141\u8BB8\u4F7F\u7528Post\u65B9\u6CD5\u53D1\u9001\u7528\u6237\u540D\u53CA\u5BC6\u7801\uFF0C\u8FD4\u56DE\u5BF9\u5E94\u7684Token\uFF0C\u4E4B\u540E\u7684\u8BF7\u6C42\u5373\u53EF\u4F7F\u7528\u8BE5Token\uFF0C\u8FD9\u65F6\u5019\u6211\u4EEC\u53EF\u4EE5\u76F4\u63A5\u4F7F\u7528Request\u5305\u5373\u53EF\u3002</p><p>\u4F46\u662F\u9047\u5230\u4E00\u4E9B\u7F51\u7AD9\uFF0C\u5E76\u6CA1\u6709\u5BF9\u5916\u5F00\u653EAPI\u63A5\u53E3\uFF0C\u6BCF\u6B21\u8BF7\u6C42\u6570\u636E\u662F\u901A\u8FC7\u767B\u5F55\u540E\u7684Cookis\u8FDB\u884C\u5224\u65AD\u3002\u8FD9\u65F6\u5019\u6211\u4EEC\u4E5F\u53EF\u4EE5\u4F7F\u7528Request,\u622A\u53D6Set-Cookie \u5934\u90E8\u4FE1\u606F\u5373\u53EF\u3002</p><p>\u4F46\u662F\uFF0C\u8FD8\u6709\u4E00\u4E9B\u7F51\u7AD9\uFF0C\u5728\u767B\u5F55\u65F6\u5019\uFF0C\u9700\u8981\u6DFB\u52A0\u670D\u52A1\u5668\u53D1\u9001\u7ED9\u5BA2\u6237\u7AEF\u7684\u5B89\u5168\u7801\uFF0C\u8FD9\u4E2A\u65F6\u5019\u5982\u679C\u5355\u5355\u4F7F\u7528Request\u5C31\u6709\u4E9B\u8D39\u529B\u4E86\u3002</p><div class="language-javascript ext-js"><pre class="language-javascript"><code>page<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;response&#39;</span><span class="token punctuation">,</span> <span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span><span class="token string">&#39;headers&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> res<span class="token punctuation">.</span>headers<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>key <span class="token operator">===</span> <span class="token string">&#39;set-cookie&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
               <span class="token comment">// \u5728\u8FD9\u91CC\u8FDB\u884C\u83B7\u53D6Cookie\u4FE1\u606F\u64CD\u4F5C</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="cookie-\u5B58\u53D6" tabindex="-1"><a class="header-anchor" href="#cookie-\u5B58\u53D6" aria-hidden="true">#</a> cookie \u5B58\u53D6</h2><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// here ---&gt;</span>
<span class="token keyword">const</span> sessionCookies <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">cookies</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// and in another session ---&gt;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">setCookies</span><span class="token punctuation">(</span>sessionCookies<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> cookies <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>dir<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/cookie.txt</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>cookies<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;login by cookie&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">setCookie</span><span class="token punctuation">(</span><span class="token operator">...</span>cookies<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;update cookies&#39;</span><span class="token punctuation">)</span>
cookies <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">cookies</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>dir<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/cookie.txt</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>cookies<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">&#39;\\t&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="\u7ED3\u5408-cheerio" tabindex="-1"><a class="header-anchor" href="#\u7ED3\u5408-cheerio" aria-hidden="true">#</a> \u7ED3\u5408 cheerio</h2><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> puppeteer <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;puppeteer&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> cheerio <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;cheerio&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> browser <span class="token operator">=</span> <span class="token keyword">await</span> puppeteer<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span><span class="token string">&#39;https://www.zhihu.com/people/zhang-shu-yuan-18/following&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> pageContent <span class="token operator">=</span><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">content</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> $ <span class="token operator">=</span> cheerio<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>pageContent<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;.UserLink-link&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">index<span class="token punctuation">,</span> item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    browser<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="\u6307\u5B9A\u8BED\u8A00" tabindex="-1"><a class="header-anchor" href="#\u6307\u5B9A\u8BED\u8A00" aria-hidden="true">#</a> \u6307\u5B9A\u8BED\u8A00</h2>`,31),r={href:"https://stackoverflow.com/questions/46908636/how-to-specify-browser-language-in-puppeteer",target:"_blank",rel:"noopener noreferrer"},d=s("javascript - How to specify browser language in Puppeteer - Stack Overflow"),g=n("h2",{id:"\u4E0B\u8F7D\u56FE\u7247",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u4E0B\u8F7D\u56FE\u7247","aria-hidden":"true"},"#"),s(" \u4E0B\u8F7D\u56FE\u7247")],-1),h={href:"https://github.com/GoogleChrome/puppeteer/issues/299#issuecomment-328295644",target:"_blank",rel:"noopener noreferrer"},m=s("Question: How do I get puppeteer to download a file? \xB7 Issue #299 \xB7 GoogleChrome/puppeteer"),w={href:"https://intoli.com/blog/saving-images/",target:"_blank",rel:"noopener noreferrer"},f=s("Saving Images from a Headless Browser");function y(b,v){const a=o("ExternalLinkIcon");return e(),c(l,null,[k,n("p",null,[n("a",r,[d,t(a)])]),g,n("p",null,[n("a",h,[m,t(a)]),n("a",w,[f,t(a)])])],64)}var x=p(i,[["render",y],["__file","puppeteer.html.vue"]]);export{x as default};
