import{r as n,o as a,c as e,a as s,w as l,F as o,b as t,d as r}from"./app.09b8f80a.js";const p={},i=s("h1",{id:"chrome-扩展开发",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#chrome-扩展开发","aria-hidden":"true"},"#"),t(" Chrome 扩展开发")],-1),c={class:"table-of-contents"},u=t("要点"),d=t("在 Chrome 中安全地使用 eval"),h=t("权限"),b=r('<h2 id="要点" tabindex="-1"><a class="header-anchor" href="#要点" aria-hidden="true">#</a> 要点</h2><ul><li>注意权限增加时，会导致扩展被浏览器禁用，因此原则上应保持权限最小化，升级时要格外注意</li></ul><h2 id="在-chrome-中安全地使用-eval" tabindex="-1"><a class="header-anchor" href="#在-chrome-中安全地使用-eval" aria-hidden="true">#</a> 在 Chrome 中安全地使用 eval</h2><ul><li>内容安全策略 - Content Security Policy (CSP) <ul><li>不允许内联脚本，必须单独放到文件中</li><li>内联事件处理必须使用<code>addEventListener</code>，禁止使用<code>eval()</code></li></ul></li></ul><p>但是有很多库使用了<code>eval()</code>或类似 eval 的结构，比如<code>new Function()</code>。尤其是模板库存在上述问题，而 Google 家的 Angular.js 支持 CSP。</p><p><code>eval</code>之所以危险是因为它执行的代码能在扩展高权限环境下防问一切。</p><p>解决方案是在沙盒中运行<code>eval</code>，接触不到可以影响用户安全和隐私的 API 和数据。</p><ol><li><p>在配置中声明用到<code>eval</code>的页面</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>\n  <span class="token operator">...</span><span class="token punctuation">,</span>\n  <span class="token string">&quot;sandbox&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n     <span class="token string">&quot;pages&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;sandbox.html&quot;</span><span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token operator">...</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></li><li><p>创建后台页面，用 iframe 指向 sandbox.html</p></li><li><p>后台脚本用于与 sandbox.html 通信，写上发送消息事件，监听返回处理</p></li><li><p>在 sandbox.html 里，写上返回消息事件</p></li></ol>',8),m={href:"https://prezi.com/huy8u0fupp2n/chrome-extensions-why-not-use-the-sandbox/",target:"_blank",rel:"noopener noreferrer"},f=t("Chrome Extensions - Why Not Use The Sandbox? by Daniel Prentis on Prezi"),v=s("ul",null,[s("li",null,"最后再考虑使用 sandbox，有些缺点比如测试麻烦"),s("li",null,"可以使用 jQuery Fragments")],-1),k=t("进一步了解关于内容安全策略 "),x={href:"http://www.slideshare.net/ryanlabouve/content-security-policy-44793165",target:"_blank",rel:"noopener noreferrer"},g=t("Content Security Policy"),y=t("支持 CSP 的模板库 "),C={href:"https://github.com/addyosmani/mustache-for-chromeapps",target:"_blank",rel:"noopener noreferrer"},P=t("addyosmani/mustache-for-chromeapps"),_=s("h2",{id:"权限",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#权限","aria-hidden":"true"},"#"),t(" 权限")],-1),j=s("p",null,"在 permisions 和 content_script 中设置域名匹配，以便于跨域请求，发布时会要求深入审核",-1),q=s("p",null,[t("建议在 permision 中使用 "),s("code",null,"activeTab"),t("，可跨域访问当前打开的页面域名，减少审核难度")],-1);p.render=function(t,r){const p=n("RouterLink"),w=n("OutboundLink");return a(),e(o,null,[i,s("nav",c,[s("ul",null,[s("li",null,[s(p,{to:"#要点"},{default:l((()=>[u])),_:1})]),s("li",null,[s(p,{to:"#在-chrome-中安全地使用-eval"},{default:l((()=>[d])),_:1})]),s("li",null,[s(p,{to:"#权限"},{default:l((()=>[h])),_:1})])])]),b,s("p",null,[s("a",m,[f,s(w)])]),v,s("p",null,[k,s("a",x,[g,s(w)])]),s("p",null,[y,s("a",C,[P,s(w)])]),_,j,q],64)};export default p;
