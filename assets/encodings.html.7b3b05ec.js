import{r as n,o as s,c as a,a as p,F as e,d as t,b as c}from"./app.31fc93bc.js";const o={},l=t('<h1 id="字符编码" tabindex="-1"><a class="header-anchor" href="#字符编码" aria-hidden="true">#</a> 字符编码</h1><p>JS 使用 UTF-16 使用 two byte</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> uint8arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TextEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span><span class="token string">&#39;Hi!&#39;</span><span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>uint8arr<span class="token punctuation">)</span>\n<span class="token keyword">new</span> <span class="token class-name">TextDecoder</span><span class="token punctuation">(</span><span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>uint8arr<span class="token punctuation">)</span> <span class="token comment">// &#39;Hi!&#39;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',3),r=p("img",{src:"http://ww1.sinaimg.cn/large/4e5d3ea7ly1gi7wckwgrcj20qc0elmzk.jpg",alt:"image.png"},null,-1),u={href:"https://www.youtube.com/watch?v=i_JmWGYmhtk",target:"_blank",rel:"noopener noreferrer"},i=c("JS � Character Encodings - YouTube"),k=t('<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;汉&#39;</span>\nstr<span class="token punctuation">.</span><span class="token function">charCodeAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">// 27721</span>\n\nString<span class="token punctuation">.</span><span class="token function">fromCharCode</span><span class="token punctuation">(</span><span class="token number">27721</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>',1);o.render=function(t,c){const o=n("OutboundLink");return s(),a(e,null,[l,p("p",null,[r,p("a",u,[i,p(o)])]),k],64)};export default o;
