import{_ as t,r as o,o as p,c,a as n,b as s,F as u,e as r,d as e}from"./app.7a0e2e86.js";const l={},i=r(`<h1 id="mse-api" tabindex="-1"><a class="header-anchor" href="#mse-api" aria-hidden="true">#</a> MSE api</h1><p>[toc]</p><p>\u63D0\u4F9B\u65E0\u63D2\u4EF6\u6D41\u5A92\u4F53\u652F\u6301</p><p>\u4E4B\u524D\u53EA\u80FD\u64AD\u653E\u6574\u4E2A\u6587\u4EF6\uFF0C\u6216\u7528 Flash</p><p>\u5206\u5272\u5408\u5E76 arraybuffers</p><p>src =&gt; MediaSource Object(Blob) [SourceBuffer]</p><p>\u66F4\u597D\u7C92\u5EA6\u63A7\u5236\u6570\u636E\u8BF7\u6C42\u91CF\u3001\u8BF7\u6C42\u9891\u7387\uFF0C\u63A7\u5236\u5185\u5B58\u4F7F\u7528\uFF0C\u52A8\u6001\u7801\u7387\u6D41\u57FA\u7840 Dash/HLS</p><p>\u7F3A\u70B9\uFF1A\u8BA1\u7B97\u5F00\u9500\uFF0C\u8017\u7535\uFF0CiOS \u4EC5 &gt;= iPadOS 13 \u652F\u6301</p><p>\u6D41\u7A0B\uFF1A</p><div class="language-text ext-text"><pre class="language-text"><code>Download ---\u300B Response.arrayBuffer(\u9002\u7528fetch/xhr\u7B49\u5F02\u6B65\u83B7\u53D6\u6D41\u5A92\u4F53\u6570\u636E) ---\u300B SourceBuffer(\u6DFB\u52A0\u5230MediaSource\u7684buffer\u4E2D) ---\u300B &lt;vedio/&gt; or &lt;autio/&gt;
</code></pre></div><p>\u6838\u5FC3\u4EE3\u7801\uFF1A</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">var</span> mediaSource <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MediaSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">//console.log(mediaSource.readyState); // closed</span>
video<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">createObjectURL</span><span class="token punctuation">(</span>mediaSource<span class="token punctuation">)</span>
mediaSource<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;sourceopen&#39;</span><span class="token punctuation">,</span> sourceOpen<span class="token punctuation">)</span>

<span class="token keyword">var</span> sourceBuffer <span class="token operator">=</span> mediaSource<span class="token punctuation">.</span><span class="token function">addSourceBuffer</span><span class="token punctuation">(</span>mimeCodec<span class="token punctuation">)</span>
<span class="token function">fetchAB</span><span class="token punctuation">(</span>assetURL<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">buf</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  sourceBuffer<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;updateend&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">_</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    mediaSource<span class="token punctuation">.</span><span class="token function">endOfStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    video<span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">//console.log(mediaSource.readyState); // ended</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  sourceBuffer<span class="token punctuation">.</span><span class="token function">appendBuffer</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div>`,12),d={href:"https://developer.mozilla.org/en-US/docs/Web/API/Media_Source_Extensions_API#media_source_extensions_concepts_and_usage",target:"_blank",rel:"noopener noreferrer"},k=e("Media Source API - Web APIs | MDN"),f={href:"https://nickdesaulniers.github.io/netfix/demo/bufferAll.html",target:"_blank",rel:"noopener noreferrer"},_=e("Ddmo"),m={href:"https://www.zhihu.com/question/314810515/answer/618143543",target:"_blank",rel:"noopener noreferrer"},h=e("\u300C\u5A92\u4F53\u6E90\u6269\u5C55(Media Source Extensions)\u300D\u662F\u4EC0\u4E48\uFF0C\u6709\u4EC0\u4E48\u5E94\u7528\u573A\u666F\uFF1F - \u77E5\u4E4E");function S(g,v){const a=o("ExternalLinkIcon");return p(),c(u,null,[i,n("p",null,[n("a",d,[k,s(a)]),n("a",f,[_,s(a)])]),n("p",null,[n("a",m,[h,s(a)])])],64)}var b=t(l,[["render",S],["__file","mse.html.vue"]]);export{b as default};
