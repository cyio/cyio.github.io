import{r as n,o as s,c as a,a as e,F as t,d as r,b as p}from"./app.09b8f80a.js";const l={},o=r('<h1 id="hls" tabindex="-1"><a class="header-anchor" href="#hls" aria-hidden="true">#</a> HLS</h1><p>[toc]</p><h2 id="协议对比" tabindex="-1"><a class="header-anchor" href="#协议对比" aria-hidden="true">#</a> 协议对比</h2><table><thead><tr><th>视频协议</th><th>用途</th><th>PC</th><th>移动</th><th>延时</th></tr></thead><tbody><tr><td>HLS(m3u8)</td><td>直播/点播</td><td>支持</td><td>支持</td><td>10-30s</td></tr><tr><td>FLV(flash)</td><td>直播/点播</td><td>支持(需要用户安装启用 flash)</td><td>支持</td><td></td></tr><tr><td>HTTP-FLV</td><td>直播/点播</td><td>支持</td><td>ios safari 不支持</td><td>1-3s</td></tr><tr><td>RTMP</td><td>只能直播</td><td>支持</td><td>不支持</td><td>3s</td></tr><tr><td>MP4</td><td>只能点播</td><td>支持</td><td>支持</td><td></td></tr></tbody></table><h2 id="直播和点播" tabindex="-1"><a class="header-anchor" href="#直播和点播" aria-hidden="true">#</a> 直播和点播</h2><p>直播是指视频源是实时的，一旦主播停播了，这个地址就已经失去意义了，而且由于是实时直播，所以播放器在播直播视频的时候是没有进度条的。 点播是指视频源是一个服务器上的文件，文件只要没有被提供方删除，就随时可以播放， 而且由于整个视频都在服务器上，所以播放器在播点播视频的时候是有进度条的。</p><h2 id="协议兼容性" tabindex="-1"><a class="header-anchor" href="#协议兼容性" aria-hidden="true">#</a> 协议兼容性</h2><p>HLS，目前各手机浏览器产品对这种格式的兼容性最好，但它有个天然的问题，就是延迟比较 大，一般是 20-30 秒左右的延迟，在手机浏览器上我们并没有其它选择。</p><p>在 PC 上情况会好很多，因为 PC 上的浏览器目前还没有抛弃 flash 控件，而 flash 控件不追求洁癖，支持的视频源格式挺多的，而且各浏览器上的 flash 控件 都是 Adobe 自己开发，所以兼容性非常好。</p><h2 id="hls-高延迟" tabindex="-1"><a class="header-anchor" href="#hls-高延迟" aria-hidden="true">#</a> HLS 高延迟</h2><p>平均延时在10秒-30秒</p><p>在HLS中改变自适应流时，需要建立一个新的缓冲区。在撰写本文章当前，苹果公司默认使用10秒的内容区块和一定数量的数据包来创建播放缓冲区。这导致从捕获到最终数据包组装的新玻壳(glass-to-glass)延迟约30秒。但是，当您引入CDN以获得更高的可扩展性时，您会注入另外15-30秒的延迟时间以便服务器可以缓存正在进行的内容。其他更不用提，这就是HLS延迟的最大问题。</p>',12),i={href:"https://mp.weixin.qq.com/s?__biz=MzAwMDU1MTE1OQ==&mid=2653547042&idx=1&sn=26d8728548a6b5b657079eeab121e283&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"},h=p("移动直播技术秒开优化经验（含PPT）"),c={href:"https://alanhou.org/live-video/",target:"_blank",rel:"noopener noreferrer"},d=p("直播开发入门学习笔记 | Alan Hou的个人博客"),u={href:"https://yq.aliyun.com/articles/277195",target:"_blank",rel:"noopener noreferrer"},b=p("如何降低直播延时？-云栖社区-阿里云"),m=e("h2",{id:"flv-js",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#flv-js","aria-hidden":"true"},"#"),p(" flv.js")],-1),f=e("p",null,"缺点：不支持 ios safari",-1),k=e("h2",{id:"https-域名-video-标签可以播放-http-源",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#https-域名-video-标签可以播放-http-源","aria-hidden":"true"},"#"),p(" https 域名 video 标签可以播放 http 源")],-1),g=e("p",null,"但通过 hls.js 等库去 fetch 不可以 延伸：被动内容可以通过 http，如 Images Videos Audio",-1),_={href:"https://stackoverflow.com/questions/44392426/html5-playing-http-streaming-on-https-domain",target:"_blank",rel:"noopener noreferrer"},v=p("javascript - HTML5: Playing HTTP streaming on HTTPS domain - Stack Overflow"),y={href:"https://yq.aliyun.com/articles/511196",target:"_blank",rel:"noopener noreferrer"},x=p("视频直播常见问题与解决办法汇总【系列一】-云栖社区-阿里云"),w={href:"https://blog.csdn.net/ahoustep/article/details/52175732",target:"_blank",rel:"noopener noreferrer"},H=p("直播http-flv小调研 - ahoustep的博客 - CSDN博客"),L={href:"https://www.jianshu.com/p/bfdba8ab903a",target:"_blank",rel:"noopener noreferrer"},j=p("直播协议 HTTP-FLV 详解 - 简书"),T={href:"https://github.com/gwuhaolin/blog/issues/3",target:"_blank",rel:"noopener noreferrer"},P=p("为什么使用flv.js做直播 · Issue #3 · gwuhaolin/blog"),S=r('<p>m3u8是一段一段加载，速度快，不会卡，体验好。 mp4 是一开始加载视频头文件，如果mp4变大，就会开始卡几秒。</p><h2 id="加密-用第-2-个" tabindex="-1"><a class="header-anchor" href="#加密-用第-2-个" aria-hidden="true">#</a> 加密，用第 2 个</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>// 带压缩\nffmpeg -v verbose <span class="token punctuation">\\</span>\n  -re <span class="token punctuation">\\</span>\n  -i aliyunmedia.mp4 <span class="token punctuation">\\</span>\n  -c:v libx264 <span class="token punctuation">\\</span>\n  -b:v 5000k <span class="token punctuation">\\</span>\n  -f hls <span class="token punctuation">\\</span>\n  -hls_time <span class="token number">6</span> <span class="token punctuation">\\</span>\n  -hls_list_size <span class="token number">4</span> <span class="token punctuation">\\</span>\n  -hls_wrap <span class="token number">40</span> <span class="token punctuation">\\</span>\n  -hls_delete_threshold <span class="token number">1</span> <span class="token punctuation">\\</span>\n  -hls_flags delete_segments <span class="token punctuation">\\</span>\n  -hls_start_number_source datetime <span class="token punctuation">\\</span>\n  -preset superfast <span class="token punctuation">\\</span>\n  -start_number <span class="token number">10</span> <span class="token punctuation">\\</span>\n  ./stream.m3u8\n\nffmpeg <span class="token punctuation">\\</span>\n  -i ./source.mp4 <span class="token punctuation">\\</span>\n  -vcodec copy <span class="token punctuation">\\</span>\n  -acodec copy <span class="token punctuation">\\</span>\n  -vbsf h264_mp4toannexb <span class="token punctuation">\\</span>\n  -hls_time <span class="token number">12</span> <span class="token punctuation">\\</span>\n  -hls_key_info_file source.keyinfo <span class="token punctuation">\\</span>\n  -hls_playlist_type vod <span class="token punctuation">\\</span>\n  -hls_segment_filename <span class="token string">&quot;./output/stream_%d.ts&quot;</span> ./output/stream.m3u8\n\n-hls_time 分片时长，苹果推荐 <span class="token number">10</span>\n-hls_key_info_file 加密配置\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div>',3),q={href:"http://hlsbook.net/how-to-encrypt-hls-video-with-ffmpeg/",target:"_blank",rel:"noopener noreferrer"},F=p("How to Encrypt Video for HLS | HTTP Live Streaming"),A={href:"https://ffmpeg.org/ffmpeg-formats.html",target:"_blank",rel:"noopener noreferrer"},M=p("参数详解 - FFmpeg Formats Documentation"),C=r('<h2 id="解密" tabindex="-1"><a class="header-anchor" href="#解密" aria-hidden="true">#</a> 解密</h2><ol><li>修改 m3u8 里的 key uri 为本地路径。也可以把 ts 替换为完整路径，直接下载合并</li><li></li></ol><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>ffmpeg -allowed_extensions ALL -i stream.m3u8 -c copy new.mp4\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>可以直接修改留一个 ts 作解密测试</p><h2 id="videojs-每次请求-key" tabindex="-1"><a class="header-anchor" href="#videojs-每次请求-key" aria-hidden="true">#</a> videojs 每次请求 key</h2><p>可防止 key 失效，新版本支持手动控制，开发者自行处理缓存控制</p>',6),V=p("https://github.com/videojs/http-streaming#cacheencryptionkeys "),D={href:"https://github.com/videojs/http-streaming/issues/367#issuecomment-482603212",target:"_blank",rel:"noopener noreferrer"},z=p("While doing HLS AES 128 playback, the player request key file for every chunk. · Issue #367 · videojs/http-streaming");l.render=function(r,p){const l=n("OutboundLink");return s(),a(t,null,[o,e("p",null,[e("a",i,[h,e(l)]),e("a",c,[d,e(l)]),e("a",u,[b,e(l)])]),m,f,k,g,e("p",null,[e("a",_,[v,e(l)])]),e("p",null,[e("a",y,[x,e(l)])]),e("p",null,[e("a",w,[H,e(l)])]),e("p",null,[e("a",L,[j,e(l)])]),e("p",null,[e("a",T,[P,e(l)])]),S,e("p",null,[e("a",q,[F,e(l)]),e("a",A,[M,e(l)])]),C,e("p",null,[V,e("a",D,[z,e(l)])])],64)};export default l;
