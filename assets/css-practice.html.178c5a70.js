import{r as n,o as a,c as s,a as e,F as t,b as p,d as l}from"./app.31fc93bc.js";const r={},o=e("h1",{id:"css-实践",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#css-实践","aria-hidden":"true"},"#"),p(" CSS 实践")],-1),c=e("p",null,"[[[toc]]]",-1),i=e("h2",{id:"不使用-import",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#不使用-import","aria-hidden":"true"},"#"),p(" 不使用 @import")],-1),u=e("li",null,[e("p",null,"import 的文件 b 在依赖 a 下载完成后才能下载")],-1),d=e("p",null,"应该合并，减少下载，或写到 link，实现并行下载",-1),b={href:"https://stackoverflow.com/questions/10036977/best-way-to-include-css-why-use-import",target:"_blank",rel:"noopener noreferrer"},h=p("html - Best way to include CSS? Why use @import? - Stack Overflow"),k=l('<h2 id="在-iframe-中插入-css" tabindex="-1"><a class="header-anchor" href="#在-iframe-中插入-css" aria-hidden="true">#</a> 在 iframe 中插入 CSS</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> css <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;link&#39;</span><span class="token punctuation">)</span>\ncss<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token string">&#39;style.css&#39;</span>\ncss<span class="token punctuation">.</span>rel <span class="token operator">=</span> <span class="token string">&#39;stylesheet&#39;</span>\ncss<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token string">&#39;text/css&#39;</span>\nframes<span class="token punctuation">[</span><span class="token string">&#39;frame-id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>css<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="未知宽度下的水平居中" tabindex="-1"><a class="header-anchor" href="#未知宽度下的水平居中" aria-hidden="true">#</a> 未知宽度下的水平居中</h2><ul><li>方案一，需要父子配合<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wrap<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>inner<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>html ： 让 inner 居中<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">.wrap</span> <span class="token punctuation">{</span>\n  <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span> <span class="token comment">/* 自适应内容宽度 */</span>\n  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>\n  <span class="token property">left</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token selector">.inner</span> <span class="token punctuation">{</span>\n  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>\n  <span class="token property">left</span><span class="token punctuation">:</span> -50%<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></li><li>方案二，块宽度未知，绝对定位，偏移 50%，加上负的水平变形进行校正<div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">.horizontal-center</span> <span class="token punctuation">{</span> \n  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>\n  <span class="token property">left</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>\n  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-50%<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li></ul><h2 id="用-flexbox-垂直居中任意元素" tabindex="-1"><a class="header-anchor" href="#用-flexbox-垂直居中任意元素" aria-hidden="true">#</a> 用 flexbox 垂直居中任意元素</h2><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">html,\nbody</span> <span class="token punctuation">{</span>\n  <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>\n  <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">body</span> <span class="token punctuation">{</span>\n  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>\n  <span class="token property">align-item</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="水平垂直居中" tabindex="-1"><a class="header-anchor" href="#水平垂直居中" aria-hidden="true">#</a> 水平垂直居中:</h2><p>translate 修正偏差</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">elem</span> <span class="token punctuation">{</span>\n  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>\n  <span class="token property">top</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>\n  <span class="token property">left</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>\n  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>-50%<span class="token punctuation">,</span> -50%<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="css-性能" tabindex="-1"><a class="header-anchor" href="#css-性能" aria-hidden="true">#</a> CSS 性能</h2><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">// 注意这条代码，会先遍历所有a链接，可能有上千个。\n#social a</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">// better\n#social .social-link</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="视觉稿中的-px-换算为-rem" tabindex="-1"><a class="header-anchor" href="#视觉稿中的-px-换算为-rem" aria-hidden="true">#</a> 视觉稿中的 px 换算为 rem</h2>',12),m=e("li",null,"以 750px 为例，分成 100 份（单位假定为 a）",-1),g=e("li",null,"1a = 7.5px",-1),f=e("li",null,"一屏为 10 rem",-1),v=p("1rem = 10a = 75px "),x={href:"http://codepen.io/cyio/pen/BWgamb?editors=1100",target:"_blank",rel:"noopener noreferrer"},y=p("em unit explain"),w={href:"https://juejin.im/post/5a716c4c6fb9a01cb42cac4b",target:"_blank",rel:"noopener noreferrer"},S=p("Vue 项目自动转换 px 为 rem，高保真还原设计图 - 掘金"),C={href:"https://www.jianshu.com/p/5b8b7cd11fce",target:"_blank",rel:"noopener noreferrer"},_=p("在 Vue Cli 3 中使用 px2rem - 简书"),j=l('<h2 id="background-position" tabindex="-1"><a class="header-anchor" href="#background-position" aria-hidden="true">#</a> background-position</h2><p>控制背景图的起始点，相对于左上角为原点坐标 初始值为 0%, 0%，也就是原点 只指定一个值，表示横坐标，纵坐标未指定默认值为 50%，而不是说横纵坐标都使用给定的值 比如 background-position: center 并非指定两个值都为 center，而只是指定了第一个值</p><h2 id="background-origin" tabindex="-1"><a class="header-anchor" href="#background-origin" aria-hidden="true">#</a> background-origin</h2><p>根据盒模型，设置不同的定位参考原点 从内到外有 content-box, padding-box, border-box，初始值为 padding-box 当 background-attachment 为 fixed，也就是相对原点变为视口左上角，background-origin 无效</p><h2 id="background-attachment" tabindex="-1"><a class="header-anchor" href="#background-attachment" aria-hidden="true">#</a> background-attachment</h2><p>背景相对于视口的依附处理方式，如 fixed 则保持于视口中，不随内容滚动，初始值为 scroll</p><h2 id="图片响应占位解决方案" tabindex="-1"><a class="header-anchor" href="#图片响应占位解决方案" aria-hidden="true">#</a> 图片响应占位解决方案</h2><ul><li>问题：不能给固定高度</li><li>利用 padding 处理高度(需给定宽度)</li></ul><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">.my-element</span> <span class="token punctuation">{</span>\n  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>\n  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token selector">.my-element:after</span> <span class="token punctuation">{</span>\n  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>\n  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>\n  <span class="token property">height</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n  <span class="token property">padding-top</span><span class="token punctuation">:</span> 56.25%<span class="token punctuation">;</span> <span class="token comment">/* Aspect ratio = height divided width times 100 */</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>html - how to give image a dynamic width and height when using bootstrap responsive grid system - Stack Overflow http://stackoverflow.com/questions/23771952/how-to-give-image-a-dynamic-width-and-height-when-using-bootstrap-responsive-gri</p><p>css - Keep div height while the image is loading - Stack Overflow http://stackoverflow.com/questions/21992210/keep-div-height-while-the-image-is-loading</p><h2 id="如何用-css-画直角梯形" tabindex="-1"><a class="header-anchor" href="#如何用-css-画直角梯形" aria-hidden="true">#</a> 如何用 CSS 画直角梯形？</h2><ul><li>对外围容器应用斜切 <code>-webkit-transform: skewX(-10deg)</code></li><li>然后用 margin 负值或相对定位，隐藏局部</li><li>若梯形内有内容，对内容应用反斜切和反向偏移</li></ul><h2 id="横向百分比布局有哪些问题" tabindex="-1"><a class="header-anchor" href="#横向百分比布局有哪些问题" aria-hidden="true">#</a> 横向百分比布局有哪些问题？</h2><h2 id="如何渐进地将设计图还原" tabindex="-1"><a class="header-anchor" href="#如何渐进地将设计图还原" aria-hidden="true">#</a> 如何渐进地将设计图还原？</h2><ul><li>抽象公共类</li><li>布局拆解，严格按 row-col 来写</li><li>没有图片素材时，添加占位图</li><li>要不断地拆解问题，我要解决一个怎样的小问题</li></ul><h2 id="换算-以宽度为基准缩放-字体也会缩放吗" tabindex="-1"><a class="header-anchor" href="#换算-以宽度为基准缩放-字体也会缩放吗" aria-hidden="true">#</a> [换算]以宽度为基准缩放，字体也会缩放吗？</h2><h2 id="线性渐变" tabindex="-1"><a class="header-anchor" href="#线性渐变" aria-hidden="true">#</a> 线性渐变</h2><ul><li>0deg 相当于 to top，90deg 相当于 to right</li><li>color-stop 可有多个，如果不指定百分比位置，则是均匀散开</li><li>支持透明度</li><li>可以搭配背景图使用</li><li>至少定义两种颜色，希望呈现的平稳过渡的颜色</li></ul><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>background: linear-gradient(to bottom, black 90%, green 95%, yellow);\n\nbackground: linear-gradient(to top, rgba(255,255,255,0), rgba(255,255,255,1)), url(https://www.codeproject.com/KB/GDI-plus/ImageProcessing2/flip.jpg) no-repeat;\nbackground-size: cover;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="径向渐变" tabindex="-1"><a class="header-anchor" href="#径向渐变" aria-hidden="true">#</a> 径向渐变</h2><ul><li>线性渐变是直线渐变，径向是圆形的渐变</li><li>圆只是一种特殊的椭圆 -径向渐变从圆心点以椭圆形状向外扩散，渐变的实现由两部分组成：椭圆和色标。椭圆部分用来控制径向渐变的位置、大小和形状等。而色标部分包含一个颜色值和一个位置，用来控制渐变的颜色变化</li><li>中心位置的值，用单词，或者都用 px，不能混用</li><li>应用：切角，用透明色填充</li></ul>',22),q={href:"https://stackoverflow.com/a/32859121/5657916",target:"_blank",rel:"noopener noreferrer"},O=p("css - Multiple gradients and radial gradient with center outside of the element - Stack Overflow"),z={href:"https://css-tricks.com/radial-gradient-recipes/",target:"_blank",rel:"noopener noreferrer"},B=p("Radial Gradient Recipes | CSS-Tricks"),D={href:"https://blog.csdn.net/zhongguohaoshaonian/article/details/77870217",target:"_blank",rel:"noopener noreferrer"},E=p("css 实现平角切角和弧形切角效果 - 小圣贤君的博客 - CSDN 博客"),G=e("h2",{id:"css-变量命名示例",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#css-变量命名示例","aria-hidden":"true"},"#"),p(" CSS 变量命名示例")],-1),V={href:"https://gist.github.com/dbox/e7b206a04d39598e32237b5f1317ef83",target:"_blank",rel:"noopener noreferrer"},I=p("colors-by-use.md"),W=e("h2",{id:"布局排列疑难杂症",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#布局排列疑难杂症","aria-hidden":"true"},"#"),p(" 布局排列疑难杂症")],-1),X=e("ul",null,[e("li",null,[e("p",null,"固定宽高区域内，文字一行或多行，保持上下左右居中 http://codepen.io/cyio/pen/dXOzGj/?editors=0100")]),e("li",null,[e("p",null,"14 - 可以搭配背景图使用 │~ CSS 控制图片和文字在同一行显示且对齐的 3 种方法 - jingwhale - 博客园 http://www.cnblogs.com/jingwhale/p/4599327.html")]),e("li",null,[e("p",null,"样式的位置 理论上可以放到任意位置，但要考虑页面如何载入，通常希望 html 带样式展示，这样就需要把样式放在 body 之前")])],-1),K=e("h2",{id:"优化",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#优化","aria-hidden":"true"},"#"),p(" 优化")],-1),M=e("p",null,"推荐使用 BEM 结构，能减少类查找，降低样式计算开销",-1),R={href:"https://developers.google.com/web/fundamentals/performance/rendering/reduce-the-scope-and-complexity-of-style-calculations",target:"_blank",rel:"noopener noreferrer"},A=p("缩小样式计算的范围并降低其复杂性  |  Web  |  Google Developers"),F=e("h2",{id:"变量",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#变量","aria-hidden":"true"},"#"),p(" 变量")],-1),J=e("ul",null,[e("li",null,"支持回退和设置默认值"),e("li",null,"支持作用域和继承"),e("li",null,"CSS 变量提供了 JavaScript 与 CSS 通信的一种途径")],-1),L={href:"http://www.ruanyifeng.com/blog/2017/05/css-variables.html",target:"_blank",rel:"noopener noreferrer"},N=p("CSS 变量教程 - 阮一峰的网络日志"),P={href:"https://medium.freecodecamp.org/everything-you-need-to-know-about-css-variables-c74d922ea855",target:"_blank",rel:"noopener noreferrer"},T=p("Everything you need to know about CSS Variables – freeCodeCamp"),H=e("h2",{id:"clip-path",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#clip-path","aria-hidden":"true"},"#"),p(" clip-path")],-1),Q={href:"https://bennettfeely.com/clippy/",target:"_blank",rel:"noopener noreferrer"},U=p("Clippy — CSS clip-path maker"),Y=l('<h2 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h2><p>ios safari 100 vh 计算会包括导航底栏，解决</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code>  <span class="token property">min-height</span><span class="token punctuation">:</span> 100vh<span class="token punctuation">;</span>\n  <span class="token comment">/* mobile viewport bug */</span>\n  <span class="token property">min-height</span><span class="token punctuation">:</span> -webkit-fill-available<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',3),Z={href:"https://dev.to/cydstumpel/4-things-in-web-development-i-ve-learned-in-2020-so-far-3cg",target:"_blank",rel:"noopener noreferrer"},$=p("4 things in web development I've learned in 2020, so far - DEV Community"),nn={href:"https://www.cnblogs.com/xiaohuochai/p/7210540.html",target:"_blank",rel:"noopener noreferrer"},an=p("CSS3四个自适应关键字——fill-available、max-content、min-content、fit-content - 小火柴的蓝色理想 - 博客园"),sn=e("p",null,"相当于 fit-content ?",-1),en=e("p",null,"https://caniuse.com/?search=fill-available",-1);r.render=function(p,l){const r=n("OutboundLink");return a(),s(t,null,[o,c,i,e("ul",null,[u,e("li",null,[d,e("p",null,[e("a",b,[h,e(r)])])])]),k,e("ul",null,[m,g,f,e("li",null,[v,e("a",x,[y,e(r)]),e("a",w,[S,e(r)]),e("a",C,[_,e(r)])])]),j,e("p",null,[e("a",q,[O,e(r)]),e("a",z,[B,e(r)]),e("a",D,[E,e(r)])]),G,e("p",null,[e("a",V,[I,e(r)])]),W,X,K,e("ul",null,[e("li",null,[M,e("p",null,[e("a",R,[A,e(r)])])])]),F,J,e("p",null,[e("a",L,[N,e(r)]),e("a",P,[T,e(r)])]),H,e("p",null,[e("a",Q,[U,e(r)])]),Y,e("p",null,[e("a",Z,[$,e(r)])]),e("p",null,[e("a",nn,[an,e(r)])]),sn,en],64)};export default r;
