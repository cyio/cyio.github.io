import{r as n,o as a,c as s,a as t,F as e,d as o,b as p}from"./app.0e74f851.js";const l={},c=o('<h1 id="页面加载顺序" tabindex="-1"><a class="header-anchor" href="#页面加载顺序" aria-hidden="true">#</a> 页面加载顺序</h1><ul><li>DOMContentLoaded 事件，初始 DOM 完全加载和解析，无须等待样式、图片和子窗口完成加载。但会等同步 script 执行完(script 可能要等待依赖的 style)。一般比 load 快。会解析 img 标签，但不会等图片下载完成。在 readyState:interactive 后发生</li><li>load 事件，页面完全加载，包括所有依赖。很少用，一般不会等这么久</li><li>onbeforeunload return false 浏览器会询问用户，不允许定制消息</li><li>unload 用户最终离开，这里发 sendBeacon</li><li>readyState/readystatechange 很少用</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">~</span><span class="token punctuation">[</span><span class="token string">&#39;complete&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;loaded&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;interactive&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>readyState<span class="token punctuation">)</span><span class="token punctuation">)</span>\n\ndocument<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;DOMContentLoaded&#39;</span><span class="token punctuation">,</span> t<span class="token punctuation">,</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',3),i={href:"https://javascript.info/onload-ondomcontentloaded",target:"_blank",rel:"noopener noreferrer"},r=p("Page: DOMContentLoaded, load, beforeunload, unload");l.render=function(o,p){const l=n("OutboundLink");return a(),s(e,null,[c,t("p",null,[t("a",i,[r,t(l)])])],64)};export default l;
