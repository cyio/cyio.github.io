import{_ as l,r as c,o as u,c as r,a as n,b as a,w as t,F as i,d as s,e as o}from"./app.7dbfe519.js";const k={},d=n("h1",{id:"\u6570\u7EC4",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u6570\u7EC4","aria-hidden":"true"},"#"),s(" \u6570\u7EC4")],-1),m={class:"table-of-contents"},b=s("\u6570\u636E\u7ED3\u6784"),h=s("length"),f=s("\u5B57\u7B26\u4E32\u8868\u793A"),g=s("\u5E38\u7528\u65B9\u6CD5"),y=s("\u7C7B\u6570\u7EC4\u8F6C\u6362"),w=s("\u7B97\u6CD5"),v=s("\u8FED\u4EE3"),_=s("\u67E5\u627E"),x=s("\u5206\u89E3\uFF08\u5F52\u5E76\uFF09"),j=s("\u6392\u5E8F"),A=s("\u7EFC\u5408\u7EC3\u4E60"),I=s("\u5B9E\u73B0\u5E38\u7528\u65B9\u6CD5"),E=s("\u79FB\u52A8\u5143\u7D20\u4F4D\u7F6E"),N=s("\u6E90\u7801\u53CA\u5B9E\u73B0"),D=o(`<h2 id="\u6570\u636E\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#\u6570\u636E\u7ED3\u6784" aria-hidden="true">#</a> \u6570\u636E\u7ED3\u6784</h2><h3 id="length" tabindex="-1"><a class="header-anchor" href="#length" aria-hidden="true">#</a> length</h3><p>\u8BBE\u7F6E\u66F4\u5927\u7684 length \u503C\uFF0C\u4E0D\u4F1A\u5206\u914D\u66F4\u591A\u7A7A\u95F4\uFF0C\u8BBE\u7F6E\u8F83\u5C0F\u7684 length \u503C\uFF0C\u4F1A\u628A\u7B49\u4E8E\u5927\u4E8E\u65B0 length \u503C\u7684\u5C5E\u6027\u5220\u6389\u3002</p><h3 id="\u5B57\u7B26\u4E32\u8868\u793A" tabindex="-1"><a class="header-anchor" href="#\u5B57\u7B26\u4E32\u8868\u793A" aria-hidden="true">#</a> \u5B57\u7B26\u4E32\u8868\u793A</h3><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// \u9ED8\u8BA4\u8FDE\u63A5\u7B26\u662F\u9017\u53F7</span>
names<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
names<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="\u5E38\u7528\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u5E38\u7528\u65B9\u6CD5" aria-hidden="true">#</a> \u5E38\u7528\u65B9\u6CD5</h3><h4 id="\u521B\u5EFA" tabindex="-1"><a class="header-anchor" href="#\u521B\u5EFA" aria-hidden="true">#</a> \u521B\u5EFA</h4><ol><li>\u7531\u5DF2\u6709\u6570\u7EC4\u521B\u5EFA\u65B0\u6570\u7EC4</li></ol><p><code>concat</code>\u5408\u5E76\u591A\u4E2A\u6570\u7EC4\u521B\u5EFA\u4E3A\u4E00\u4E2A\u65B0\u6570\u7EC4 <code>splice</code>\u622A\u53D6\u4E00\u4E2A\u6570\u7EC4\u7684\u5B50\u96C6\u521B\u5EFA\u4E00\u4E2A\u65B0\u6570\u7EC4\uFF08\u6709\u526F\u4F5C\u7528\uFF0C\u4E0D\u63A8\u8350\uFF09</p><ol start="2"><li>from \u6570\u7EC4\u751F\u6210</li></ol><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// \u751F\u6210 6 - 24\uFF0Cv \u521D\u59CB\u503C\u662F undefined</span>
Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">length</span><span class="token operator">:</span> <span class="token number">19</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">v<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> i <span class="token operator">+</span> <span class="token number">6</span><span class="token punctuation">)</span>
</code></pre></div><h4 id="\u5408\u5E76" tabindex="-1"><a class="header-anchor" href="#\u5408\u5E76" aria-hidden="true">#</a> \u5408\u5E76</h4><p>\u533A\u5206 push \u548C concat\uFF0C\u524D\u8005\u66F4\u65B0\uFF0C\u540E\u8005\u8FD4\u56DE\u65B0\u6570\u7EC4</p><p>push \u628A\u6570\u7EC4\u53C2\u6570\u5F53\u4F5C\u5355\u4E2A\u5143\u7D20\u8FFD\u52A0\uFF0C\u5E76\u8FD4\u56DE length\uFF0C\u800C concat \u662F\u5206\u522B\u8FFD\u52A0\uFF0C\u8FD4\u56DE\u65B0\u6570\u7EC4\uFF0C\u4E0D\u6539\u53D8\u539F\u6570\u7EC4\u3002</p><div class="language-javascript ext-js"><pre class="language-javascript"><code>arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
arr<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre></div><h4 id="\u6DFB\u52A0" tabindex="-1"><a class="header-anchor" href="#\u6DFB\u52A0" aria-hidden="true">#</a> \u6DFB\u52A0</h4><p><code>push() unshift()</code></p><h4 id="\u5220\u9664" tabindex="-1"><a class="header-anchor" href="#\u5220\u9664" aria-hidden="true">#</a> \u5220\u9664</h4><p><code>shift pop</code> \u8F6C\u79FB\uFF0C\u53D6\u51FA</p><ul><li>\u5206\u522B\u5220\u9664\u5E76\u8FD4\u56DE\u6570\u7EC4\u7684\u7B2C\u4E00\u4E2A\u548C\u6700\u540E\u4E00\u4E2A\u5143\u7D20</li><li>\u6570\u7EC4\u4E3A\u7A7A\u65F6\u4E0D\u64CD\u4F5C\uFF0C\u8FD4\u56DE undifined</li></ul><h4 id="\u4E2D\u95F4\u63D2\u5165" tabindex="-1"><a class="header-anchor" href="#\u4E2D\u95F4\u63D2\u5165" aria-hidden="true">#</a> \u4E2D\u95F4\u63D2\u5165</h4><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">let</span> nums <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span>
<span class="token keyword">let</span> insert <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span>
nums<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> insert<span class="token punctuation">)</span> <span class="token comment">// print 1, 2, 3, [Array] ...</span>
nums<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token comment">// print 1, 2, 3, 4, 5, 6 ...</span>
</code></pre></div><h4 id="\u526F\u4F5C\u7528\u533A\u5206" tabindex="-1"><a class="header-anchor" href="#\u526F\u4F5C\u7528\u533A\u5206" aria-hidden="true">#</a> \u526F\u4F5C\u7528\u533A\u5206</h4><p>splice | sort | reverse</p><h4 id="slice-\u4E0E-splice" tabindex="-1"><a class="header-anchor" href="#slice-\u4E0E-splice" aria-hidden="true">#</a> slice \u4E0E splice</h4><p>slice \u5207\u7247\uFF0C\u6D45\u590D\u5236 {\u8D77\u70B9\uFF0C\u7EC8\u70B9(\u4E0D\u542B)} \u53EF\u7528\u8D1F\u6570\u8868\u793A\u5012\u6570\uFF08\u6700\u540E\u4E00\u4F4D\u662F -1\uFF0C\u4E5F\u5C31\u662F\u6570\u7EC4\u4E2D\u53EA\u6709\u4E00\u4E2A 0\uFF09 splice \u62FC\u63A5\uFF0C{\u8D77\u70B9\uFF0C\u88C1\u5207\u4E2A\u6570\uFF0C\u63D2\u5165\u9879}\uFF0C\u8FD4\u56DE\u88C1\u5207\u5185\u5BB9\uFF08\u4F1A\u4FEE\u6539\u539F\u6570\u7EC4\uFF0C\u4E0D\u63A8\u8350\u4F7F\u7528\uFF09</p><ul><li>\u53EA\u5199\u8D77\u70B9\uFF0C\u4E0D\u5199\u526A\u5207\u4E2A\u6570\uFF0C\u4F1A\u4ECE\u8D77\u70B9\u8D77\u5168\u90E8\u526A\u5207</li></ul><ul><li><p>slice \u8BE6\u89E3 \u8D77\u70B9\u548C\u7ED3\u675F\u70B9\uFF0C\u90FD\u53EF\u4EE5\u7701\u7565\uFF0C\u76F8\u5F53\u4E8E\u5B8C\u6574\u590D\u5236 \u53EA\u6709\u4E00\u4E2A\u53C2\u6570\u65F6\uFF0C\u662F\u8D77\u70B9</p></li><li><p>\u90FD\u53EF\u4EE5\u6309\u9700\u8FD4\u56DE\u6307\u5B9A\u6570\u7EC4\u7684\u6307\u5B9A\u8303\u56F4</p></li><li><p>\u533A\u522B\u524D\u8005\u662F\u6D45\u590D\u5236</p></li><li><p>\u800C\u540E\u8005\u4F1A\u4FEE\u6539\u539F\u6570\u7EC4\uFF0C\u76F8\u5F53\u4E8E\u526A\u5207</p></li><li><p>\u540E\u8005\u6BD4\u524D\u8005\u591A\u4E2A\u5B57\u6BCD p\uFF0C\u62FC\u63A5/\u66FF\u6362\u7684\u610F\u601D</p></li><li><p>\u5BF9\u8C61\u7684\u5C5E\u6027\u540D\u5FC5\u987B\u662F\u5B57\u7B26\u4E32\uFF0C\u6570\u7EC4\u7684\u7D22\u5F15\u5728\u5185\u90E8\u4E5F\u4F1A\u88AB\u8F6C\u6362\u4E3A\u5B57\u7B26\u4E32\uFF0C\u5982 let arr = [&#39;alice&#39;] arr[&#39;0&#39;]</p></li></ul><h4 id="\u590D\u5236" tabindex="-1"><a class="header-anchor" href="#\u590D\u5236" aria-hidden="true">#</a> \u590D\u5236</h4><p>\u6309\u6027\u80FD\u6392\u5E8F</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> names <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Jon&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Jacob&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Jeff&#39;</span><span class="token punctuation">]</span>

<span class="token keyword">const</span> copy1 <span class="token operator">=</span> names<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> copy2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>names<span class="token punctuation">)</span>
<span class="token keyword">const</span> copy3 <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span>names<span class="token punctuation">)</span>
<span class="token keyword">const</span> copy4 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>names<span class="token punctuation">]</span>
<span class="token keyword">const</span> copy5 <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token operator">...</span>names<span class="token punctuation">)</span>
<span class="token keyword">const</span> copy6 <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>names<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> copy7 <span class="token operator">=</span> names<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">i</span> <span class="token operator">=&gt;</span> i<span class="token punctuation">)</span>
<span class="token keyword">const</span> copy8 <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> names<span class="token punctuation">)</span>
</code></pre></div><h3 id="\u7C7B\u6570\u7EC4\u8F6C\u6362" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u6570\u7EC4\u8F6C\u6362" aria-hidden="true">#</a> \u7C7B\u6570\u7EC4\u8F6C\u6362</h3><p>DOM \u6570\u7EC4\u672C\u8D28\u4E0A\u4E0D\u662F Array\uFF0C\u662F NodeList\u3002 \u4F60\u53EF\u4EE5\u901A\u8FC7<code>Array.prototype.slice.call(nodeList, 0)</code>\u628A\u8282\u70B9\u5168\u90E8\u590D\u5236\u5230 Array \u518D\u64CD\u4F5C\u3002</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">$A</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u76F8\u5F53\u4E8E [].slice.call(obj)</span>
  <span class="token keyword">return</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// Example usage:</span>
$<span class="token constant">A</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">&#39;li&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">// ES6 \u65B0\u589E\u65B9\u6CD5\uFF0C\u652F\u6301 string/map/set</span>
Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>arrayLike<span class="token punctuation">)</span>
</code></pre></div>`,34),J={href:"https://shifteleven.com/articles/2007/06/28/array-like-objects-in-javascript/",target:"_blank",rel:"noopener noreferrer"},L=s("Array-like Objects in JavaScript | ShiftEleven"),O=s(" \u4F7F\u7528\u793A\u4F8B\uFF1A \u628A document \u7B49\u65B9\u6CD5\u83B7\u53D6\u7684\u8282\u70B9\u5217\u8868\u8F6C\u6362\u6210\u6570\u7EC4\uFF0C\u7136\u540E\u7528 forEach \u7B49\u6570\u7EC4\u65B9\u6CD5\u5904\u7406 "),S={href:"http://codepen.io/wesbos/pen/zrLjYq",target:"_blank",rel:"noopener noreferrer"},V=s("A Pen by Wes Bos"),B={href:"https://toddmotto.com/ditch-the-array-foreach-call-nodelist-hack/",target:"_blank",rel:"noopener noreferrer"},F=s("Ditch the [].forEach.call(NodeList) hack"),R=o(`<h2 id="\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u7B97\u6CD5" aria-hidden="true">#</a> \u7B97\u6CD5</h2><h3 id="\u8FED\u4EE3" tabindex="-1"><a class="header-anchor" href="#\u8FED\u4EE3" aria-hidden="true">#</a> \u8FED\u4EE3</h3><ol><li>\u662F\u60F3\u77E5\u9053\u662F\u5426\u6EE1\u8DB3\u6761\u4EF6\uFF0C\u8FD8\u662F\u9700\u8981\u6EE1\u8DB3\u6761\u4EF6\u7684\u6570\u636E\uFF1F</li><li>\u90E8\u5206\u6EE1\u8DB3\uFF0C\u8FD8\u662F\u5168\u90E8\uFF1F every() \u5168\u771F\u65F6\u8FD4\u56DE\u771F some() \u6216\u771F filter() \u771F\u6570\u7EC4\uFF0C\u4EE5\u4E0A\u662F\u505A\u5E03\u5C14\u503C\u5224\u65AD\uFF0C\u4E0E map \u7684\u4E3B\u8981\u4E0D\u540C map() \u7ED3\u679C\u6570\u7EC4 forEach() \u904D\u5386\u8FD0\u884C\u6307\u5B9A\u51FD\u6570\uFF0C\u65E0\u8FD4\u56DE\u503C\uFF0C\u6709\u526F\u4F5C\u7528\uFF0C\u4E0D\u63A8\u8350</li></ol><h4 id="\u8DF3\u51FA\u5FAA\u73AF" tabindex="-1"><a class="header-anchor" href="#\u8DF3\u51FA\u5FAA\u73AF" aria-hidden="true">#</a> \u8DF3\u51FA\u5FAA\u73AF</h4><ol><li>\u4EE3\u7801\u7B80\u77ED\uFF0C\u7528 for \u914D\u5408 break</li><li>\u4EE3\u7801\u8F83\u957F\uFF0C\u5EFA\u8BAE\u5B9A\u4E49\u53D8\u91CF\u6807\u8BB0</li></ol><h3 id="\u67E5\u627E" tabindex="-1"><a class="header-anchor" href="#\u67E5\u627E" aria-hidden="true">#</a> \u67E5\u627E</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> names <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;David&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Raymond&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;John&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;David&#39;</span><span class="token punctuation">]</span>
names<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;David&#39;</span><span class="token punctuation">)</span> <span class="token comment">// number \u8FD4\u56DE\u7B2C\u4E00\u4E2A index\uFF0C-1 \u65F6\u4E0D\u5B58\u5728</span>

names<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;David&#39;</span><span class="token punctuation">)</span> <span class="token comment">// boolean</span>

names<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token parameter">name</span> <span class="token operator">=&gt;</span> name <span class="token operator">!==</span> <span class="token string">&#39;Mike&#39;</span><span class="token punctuation">)</span> <span class="token comment">// \u6EE1\u8DB3\u6761\u4EF6\u7684\u7B2C\u4E00\u4E2A value\uFF0C\u90FD\u4E0D\u6EE1\u8DB3\u65F6\u8FD4\u56DE undefined</span>

<span class="token comment">// filter \u5168\u90E8 find \u51FA\u6765\uFF0C\u4E0D\u8FC7\u4E0D\u80FD\u627E\u51FA\u5168\u90E8 index\uFF0Cfilter \u7684 return \u53EA\u4F1A\u4F5C\u4E3A\u6D4B\u8BD5\u6761\u4EF6\u3002\u53EA\u80FD\u5199\u4E2A\u5FAA\u73AF\u5904\u7406</span>

<span class="token keyword">const</span> <span class="token function-variable function">findAllIndex</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> name</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>arr<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">let</span> remain <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>arr<span class="token punctuation">]</span>
  <span class="token keyword">while</span><span class="token punctuation">(</span>remain<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> ind <span class="token operator">=</span> remain<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>
    result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>ind<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>ind <span class="token operator">===</span> remain<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">break</span>
    remain <span class="token operator">=</span> remain<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>ind <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> result
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">const</span> names <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;David&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Raymond&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;John&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;David&#39;</span><span class="token punctuation">]</span>

<span class="token keyword">const</span> <span class="token function-variable function">findAllIndex</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> target</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>arr<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">let</span> remain <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>arr<span class="token punctuation">]</span>
  <span class="token keyword">while</span><span class="token punctuation">(</span>remain<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> targetIndex <span class="token operator">=</span> remain<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>
    result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span> 
      <span class="token operator">?</span> targetIndex <span class="token operator">+</span> result<span class="token punctuation">[</span>result<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token comment">// \u4E0D\u505A\u8FD9\u4E00\u6B65\uFF0C\u5F97\u5230\u7684\u662F remain \u4E2D\u7684 index \u4F4D\u7F6E</span>
      <span class="token operator">:</span> targetIndex<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>targetIndex <span class="token operator">===</span> remain<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">break</span> <span class="token comment">// \u4E0D\u662F\u5FC5\u987B\uFF0Cslice \u8D85\u9650\u540E\u8FD4\u56DE\u7A7A\u6570\u7EC4</span>
    remain <span class="token operator">=</span> remain<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>targetIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> result
<span class="token punctuation">}</span>

<span class="token keyword">let</span> r <span class="token operator">=</span> <span class="token function">findAllIndex</span><span class="token punctuation">(</span>names<span class="token punctuation">,</span> <span class="token string">&#39;David&#39;</span><span class="token punctuation">)</span> <span class="token comment">// expect [0, 3]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h3 id="\u5206\u89E3-\u5F52\u5E76" tabindex="-1"><a class="header-anchor" href="#\u5206\u89E3-\u5F52\u5E76" aria-hidden="true">#</a> \u5206\u89E3\uFF08\u5F52\u5E76\uFF09</h3><p><code>array.reduce(\u5904\u7406\u51FD\u6570(\u7D2F\u52A0\u503C\uFF0C\u5F53\u524D\u503C)\uFF0C\u521D\u59CB\u503C)</code></p><ul><li><p>\u6BCF<code>reduce</code>\u4E00\u6B21\uFF0C\u628A\u7D2F\u52A0\u503C\u548C\u5F53\u524D\u503C\u4F5C\u4E3A\u53C2\u6570\u4F20\u5165\u5904\u7406\u51FD\u6570</p></li><li><p>\u521D\u59CB\u503C\u53EF\u9009\uFF0C\u6CA1\u6709\u65F6\u4F7F\u7528\u6570\u7EC4\u7684\u7B2C\u4E00\u4E2A\u503C\u4F5C\u4E3A\u521D\u59CB\u503C\uFF0C\u5E76\u4ECE\u7B2C\u4E8C\u4E2A\u503C\u5F00\u59CB\u7D2F\u52A0\u3002<strong>\u5373\u4ECE\u7B2C\u4E8C\u4F4D\u5F00\u59CB\u7D2F\u52A0</strong></p></li><li><p>\u66FF\u4EE3<code>filter</code>\u52A0<code>map</code>\uFF0C<code>filter</code>\u53EF\u4EE5\u5728<code>reduce</code>\u4E2D\u7528<code>if</code>\u66FF\u4EE3</p></li><li><p>\u4E0D\u597D\u60F3\uFF0C\u6700\u76F4\u89C2\u628A\u6BCF\u6B21\u8FD0\u7B97\u5199\u4E0B\u6765</p></li><li><p>\u9002\u7528\u9650\u4E8E\u5173\u8054\u8FD0\u7B97\uFF0C\u5982<code>+\`\`*</code>\uFF0C\u5176\u5B83\u7528\u9014\u6709\u4E0D\u660E\u786E\u53C2\u6570\u3001\u9690\u5F0F\u610F\u56FE\u7B49\u95EE\u9898</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// values \u8868\u793A\u5269\u4F59\u53C2\u6570\uFF0C\u7531\u7B2C\u4E00\u4E2A\u53C2\u6570\u5916\u7684\u7684\u503C\u6784\u6210\u7684\u6570\u7EC4</span>
<span class="token comment">// \u53EA\u6709\u4E00\u4E2A\u53C2\u6570\u65F6\uFF0Cvalues \u662F\u7A7A\u6570\u7EC4</span>
<span class="token keyword">const</span> <span class="token function-variable function">sum</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">init <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">...</span>values</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  values<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">acc<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> acc <span class="token operator">+</span> value<span class="token punctuation">,</span> init<span class="token punctuation">)</span>
<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>

<span class="token comment">// \u6C42\u548C</span>
<span class="token comment">// 1. for</span>
<span class="token keyword">let</span> nums <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>
<span class="token keyword">let</span> total <span class="token operator">=</span> <span class="token number">0</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  total <span class="token operator">+=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>total<span class="token punctuation">)</span>
<span class="token comment">// 2. reduce</span>
<span class="token keyword">let</span> total <span class="token operator">=</span> nums<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">pre<span class="token punctuation">,</span> cur</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> pre <span class="token operator">+</span> cur<span class="token punctuation">)</span>
</code></pre></div><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token parameter">i</span> <span class="token operator">=&gt;</span> x<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
</code></pre></div><p>\u6CE8\u610F\u95EE\u7684\u662F x\uFF0C\u4E0D\u662F reduce \u7ED3\u679C\u3002\u6CE8\u610F push \u8FD4\u56DE\u7684\u662F length</p></li></ul>`,11),P={href:"https://javascript.info/array-methods",target:"_blank",rel:"noopener noreferrer"},T=s("Array methods"),C={href:"https://www.artima.com/weblogs/viewpost.jsp?thread=98196",target:"_blank",rel:"noopener noreferrer"},M=s("The fate of reduce() in Python 3000"),$=o(`<h3 id="\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u6392\u5E8F" aria-hidden="true">#</a> \u6392\u5E8F</h3><ul><li><code>arr.sort([compareFunction])</code> \u9ED8\u8BA4\u7684\u6BD4\u8F83\u51FD\u6570\u4F1A\u5C06\u6BD4\u8F83\u5143\u7D20\u89C6\u4E3A\u5B57\u7B26\u4E32\uFF0C\u6240\u4EE5\u901A\u5E38\u8981\u4F20\u5165\u81EA\u5B9A\u4E49\u6BD4\u8F83\u51FD\u6570</li><li>number \u4E0A\u4E24\u4F4D\u6570\u5C31\u4E0D\u51C6\u4E86\uFF0C\u9700\u8981\u4F20\u5165 compare function</li><li>compareFunction(a, b) \u8981\u6C42\u8FD4\u56DE\u4E0E 0 \u8FDB\u884C\u6BD4\u8F83\uFF0C<code>result &gt; 0</code> \u65F6\uFF0C\u8F93\u51FA<code>b a</code>\u3002\u4E5F\u5C31\u662F\uFF0C\u9ED8\u8BA4\u662F\u5347\u5E8F\u3002</li><li>undefined \u603B\u4F1A\u6392\u5230\u6700\u540E\uFF0C\u7B26\u5408\u9884\u671F</li><li>null \u9700\u8981\u6CE8\u610F</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Apple&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Google&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Baidu&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>
  arr<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>
    <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>name <span class="token operator">&gt;</span> b<span class="token punctuation">.</span>name <span class="token comment">// \u5B57\u6BCD\u987A\u5E8F</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">)</span>

<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">55</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">,</span> <span class="token number">88</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">-</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// \u4E3A\u4EC0\u4E48\u8FD9\u91CC\u4E0D\u80FD\u5199\u6210 a &gt; b\uFF0C\u56E0\u4E3A\u8FD4\u56DE\u5E03\u5C14\u503C\uFF0C\u7136\u540E\u5E03\u5C14\u503C\u8DDF 0 \u6BD4\u8F83\uFF0Cfalse &lt; 0\uFF0C\u4E8E\u662F 20 \u6392\u5728 10 \u524D\u9762</span>

<span class="token comment">// a &gt; b \u6B63\u786E\u5199\u6CD5</span>
arr<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u9ED8\u8BA4\u5347\u5E8F\uFF0C\u6240\u4EE5 a &lt; b\uFF0Ca \u5728\u524D</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">&lt;</span> b<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">&gt;</span> b<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">1</span> <span class="token comment">// \u8C03\u6362</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">===</span> b<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div>`,3),q={href:"https://philna.sh/blog/2019/08/26/how-not-to-sort-an-array-in-javascript/",target:"_blank",rel:"noopener noreferrer"},z=s("How not to sort an array in JavaScript | Phil Nash"),G=o(`<h2 id="\u7EFC\u5408\u7EC3\u4E60" tabindex="-1"><a class="header-anchor" href="#\u7EFC\u5408\u7EC3\u4E60" aria-hidden="true">#</a> \u7EFC\u5408\u7EC3\u4E60</h2><h3 id="\u5B9E\u73B0\u5E38\u7528\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0\u5E38\u7528\u65B9\u6CD5" aria-hidden="true">#</a> \u5B9E\u73B0\u5E38\u7528\u65B9\u6CD5</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5B9E\u73B0 map</span>
<span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> <span class="token function-variable function">map</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> fn</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> newArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    newArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">fn</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> newArr
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">map</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token parameter">x</span> <span class="token operator">=&gt;</span> x <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">// \u5B9E\u73B0 filter</span>
<span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> <span class="token function-variable function">filter</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> fn</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> newArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">fn</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      newArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> newArr
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">filter</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token parameter">x</span> <span class="token operator">=&gt;</span> x <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">// \u7ED9\u5B9A\u4E00\u4E2A\u6570\u7EC4\uFF0C\u6C42\u6570\u7EC4\u91CC\u9762\u5947\u6570\u7684\u5E73\u65B9\u548C</span>
<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>

<span class="token keyword">const</span> result <span class="token operator">=</span> arr
  <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=&gt;</span> x <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=&gt;</span> x <span class="token operator">*</span> x<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">+</span> y<span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>

<span class="token keyword">let</span> <span class="token function-variable function">first</span> <span class="token operator">=</span> <span class="token parameter">word</span> <span class="token operator">=&gt;</span> word<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
<span class="token keyword">let</span> words <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;for&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;your&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;information&#39;</span><span class="token punctuation">]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>words<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>first<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div><h3 id="\u79FB\u52A8\u5143\u7D20\u4F4D\u7F6E" tabindex="-1"><a class="header-anchor" href="#\u79FB\u52A8\u5143\u7D20\u4F4D\u7F6E" aria-hidden="true">#</a> \u79FB\u52A8\u5143\u7D20\u4F4D\u7F6E</h3><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span>

<span class="token keyword">function</span> <span class="token function">move</span><span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> oldIndex<span class="token punctuation">,</span> newIndex</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>arr<span class="token punctuation">]</span> <span class="token comment">// \u4E0D\u6539\u53D8\u539F\u6570\u7EC4</span>
  <span class="token keyword">const</span> newValue <span class="token operator">=</span> arr<span class="token punctuation">[</span>newIndex<span class="token punctuation">]</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>oldValue<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>oldIndex<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
  arr<span class="token punctuation">[</span>newIndex <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> oldValue
  arr<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>newIndex <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> newValue<span class="token punctuation">)</span>
  <span class="token keyword">return</span> arr
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">move</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>
</code></pre></div><h2 id="\u6E90\u7801\u53CA\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u6E90\u7801\u53CA\u5B9E\u73B0" aria-hidden="true">#</a> \u6E90\u7801\u53CA\u5B9E\u73B0</h2>`,6);function H(W,Y){const p=c("RouterLink"),e=c("ExternalLinkIcon");return u(),r(i,null,[d,n("nav",m,[n("ul",null,[n("li",null,[a(p,{to:"#\u6570\u636E\u7ED3\u6784"},{default:t(()=>[b]),_:1}),n("ul",null,[n("li",null,[a(p,{to:"#length"},{default:t(()=>[h]),_:1})]),n("li",null,[a(p,{to:"#\u5B57\u7B26\u4E32\u8868\u793A"},{default:t(()=>[f]),_:1})]),n("li",null,[a(p,{to:"#\u5E38\u7528\u65B9\u6CD5"},{default:t(()=>[g]),_:1})]),n("li",null,[a(p,{to:"#\u7C7B\u6570\u7EC4\u8F6C\u6362"},{default:t(()=>[y]),_:1})])])]),n("li",null,[a(p,{to:"#\u7B97\u6CD5"},{default:t(()=>[w]),_:1}),n("ul",null,[n("li",null,[a(p,{to:"#\u8FED\u4EE3"},{default:t(()=>[v]),_:1})]),n("li",null,[a(p,{to:"#\u67E5\u627E"},{default:t(()=>[_]),_:1})]),n("li",null,[a(p,{to:"#\u5206\u89E3-\u5F52\u5E76"},{default:t(()=>[x]),_:1})]),n("li",null,[a(p,{to:"#\u6392\u5E8F"},{default:t(()=>[j]),_:1})])])]),n("li",null,[a(p,{to:"#\u7EFC\u5408\u7EC3\u4E60"},{default:t(()=>[A]),_:1}),n("ul",null,[n("li",null,[a(p,{to:"#\u5B9E\u73B0\u5E38\u7528\u65B9\u6CD5"},{default:t(()=>[I]),_:1})]),n("li",null,[a(p,{to:"#\u79FB\u52A8\u5143\u7D20\u4F4D\u7F6E"},{default:t(()=>[E]),_:1})])])]),n("li",null,[a(p,{to:"#\u6E90\u7801\u53CA\u5B9E\u73B0"},{default:t(()=>[N]),_:1})])])]),D,n("p",null,[n("a",J,[L,a(e)]),O,n("a",S,[V,a(e)]),n("a",B,[F,a(e)])]),R,n("p",null,[n("a",P,[T,a(e)]),n("a",C,[M,a(e)])]),$,n("p",null,[n("a",q,[z,a(e)])]),G],64)}var Q=l(k,[["render",H],["__file","array.html.vue"]]);export{Q as default};
