import{_ as n,e as s}from"./app.d6d12e5b.js";const a={},t=s(`<h1 id="promise-finally" tabindex="-1"><a class="header-anchor" href="#promise-finally" aria-hidden="true">#</a> Promise.finally</h1><ul><li>\u63A5\u6536 onFinally cb\uFF0C\u8FD4\u56DE promise</li><li>\u94FE\u5F0F\u8C03\u7528\uFF0C\u7528 then \u6A21\u62DF</li><li>\u6210\u529F\u6216\u5931\u8D25\uFF0C\u90FD\u8981\u6267\u884C</li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// \u7B80\u7248</span>
<span class="token class-name">Promise</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">finally</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">cb</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
    <span class="token parameter">value</span> <span class="token operator">=&gt;</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token function">cb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> value<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token parameter">reason</span> <span class="token operator">=&gt;</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token function">cb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u4E3A\u4EC0\u4E48\u8981\u7528\u5BF9\u8C61\uFF1F</span>
<span class="token class-name">Promise</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>finally <span class="token operator">=</span> <span class="token class-name">Promise</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>finally <span class="token operator">||</span> <span class="token punctuation">{</span>
  <span class="token function">finally</span> <span class="token punctuation">(</span>fn<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token function-variable function">onFinally</span> <span class="token operator">=</span> <span class="token parameter">callback</span> <span class="token operator">=&gt;</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
      <span class="token parameter">result</span> <span class="token operator">=&gt;</span> <span class="token function">onFinally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> result<span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token parameter">reason</span> <span class="token operator">=&gt;</span> <span class="token function">onFinally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">.</span>finally<span class="token punctuation">;</span>
</code></pre></div><p>https://stackoverflow.com/a/53327815/5657916</p>`,4);function p(o,c){return t}var l=n(a,[["render",p],["__file","promise-finally.html.vue"]]);export{l as default};
