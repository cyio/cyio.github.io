import{d as n}from"./app.09b8f80a.js";const s={},a=n('<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述" aria-hidden="true">#</a> 概述</h2><ul><li>两个页面，项目列表页，任务页</li></ul><h2 id="数据共享" tabindex="-1"><a class="header-anchor" href="#数据共享" aria-hidden="true">#</a> 数据共享</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> store <span class="token operator">=</span> <span class="token punctuation">{</span>\n  state<span class="token operator">:</span> <span class="token punctuation">{</span>\n    user<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token operator">...</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">setUser</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>user <span class="token operator">=</span> data\n  <span class="token punctuation">}</span>\n  <span class="token operator">...</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="快照功能" tabindex="-1"><a class="header-anchor" href="#快照功能" aria-hidden="true">#</a> 快照功能</h2><p>或者叫情景恢复，在v-coding中，期望实现两点需求：</p><ol><li>离开时为项目列表，则再次打开时进入项目列表</li><li>离开时为某项目的任务页，则再次打开时恢复之</li></ol><p>实现思路是用对象存储状态信息，然后存入后台页面的localStorage</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> bg <span class="token operator">=</span> chrome<span class="token punctuation">.</span>extension<span class="token punctuation">.</span><span class="token function">getBackgroundPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nbg<span class="token punctuation">.</span>snapshot <span class="token operator">=</span> <span class="token punctuation">{</span>\n  view<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>publicState<span class="token punctuation">.</span>currentView<span class="token punctuation">,</span>\n  id<span class="token operator">:</span> id<span class="token punctuation">,</span>\n  name<span class="token operator">:</span> name\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="数据模型" tabindex="-1"><a class="header-anchor" href="#数据模型" aria-hidden="true">#</a> 数据模型</h2><p>数据缓存与恢复，组件间数据共享</p><h2 id="任务组件" tabindex="-1"><a class="header-anchor" href="#任务组件" aria-hidden="true">#</a> 任务组件</h2><p>使用过滤处理后的数据</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">filterTodos</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> todos <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>todos\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>todos<span class="token punctuation">)</span> <span class="token keyword">return</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>visibility <span class="token operator">===</span> <span class="token string">&#39;all&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> todos<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>visibility <span class="token operator">===</span> <span class="token string">&#39;processing&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> todos<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">todo</span> <span class="token operator">=&gt;</span> <span class="token operator">!</span>todo<span class="token punctuation">.</span>status<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> todos<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">todo</span> <span class="token operator">=&gt;</span> todo<span class="token punctuation">.</span>status<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div>',14);s.render=function(n,s){return a};export default s;
