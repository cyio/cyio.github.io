import{r as n,o as s,c as a,a as t,F as o,d as e,b as p}from"./app.0e74f851.js";const r={},l=e('<h1 id="lodash" tabindex="-1"><a class="header-anchor" href="#lodash" aria-hidden="true">#</a> lodash</h1><h2 id="源码" tabindex="-1"><a class="header-anchor" href="#源码" aria-hidden="true">#</a> 源码</h2><p>node_modules/lodash/lodash.js</p><p>自执行 lodash 对象</p><p><code>import { xx } from lodash</code> 引入大对象、解构 <code>import throttle from lodash/throttle</code> 引入某个文件</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> throttle <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;lodash-es&#39;</span><span class="token punctuation">;</span>\n<span class="token comment">//or import throttle from &#39;lodash.throttle&#39;</span>\n\n  methods<span class="token operator">:</span> <span class="token punctuation">{</span>\n    throttledMethod<span class="token operator">:</span> _<span class="token punctuation">.</span><span class="token function">throttle</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;I get fired every two seconds!&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="throttle" tabindex="-1"><a class="header-anchor" href="#throttle" aria-hidden="true">#</a> throttle</h2><p>throttle 包装了 debounce，仅设置不同，是否首次执行</p><p>isObjectLike 相比 isObject 多了数组</p><p>isEqual 深比较 isEmpty 空对象 has 对象有某个属性 get 访问对象、可设默认值 sortBy 集合、对象 union 多数组唯一值 uniq 去重 difference 差集 intersection 交集 times 循环几次 random 在指定范围内获取一个随机值 omit 去掉对象的某些属性 pick 挑选生成新对象，与 omit 相反 sample 随机选择</p>',10),c={href:"https://colintoh.com/blog/lodash-10-javascript-utility-functions-stop-rewriting",target:"_blank",rel:"noopener noreferrer"},i=p("Lodash: 10 Javascript Utility Functions That You Should Probably Stop Rewriting | Colin Toh");r.render=function(e,p){const r=n("OutboundLink");return s(),a(o,null,[l,t("p",null,[t("a",c,[i,t(r)])])],64)};export default r;
